{
  "name": "Reviews",
  "client_id": "https://github.com/wix-private/app-market/tree/master/critique/reviews#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Main review service which handles CRUD operations",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Reviews Service",
    "entity": "_com_wixpress_critique_reviews_Review",
    "src": "https://github.com/wix-private/app-market/tree/master/critique/reviews/proto/com/wixpress/critique/reviews/reviews.proto"
  }],
  "relatedGuides":   [
        {
      "path": "../guides/reviews/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/reviews/docs/use-cases.md",
      "name": "Use Cases"
    }
  ],
  "operations":   [
        {
      "name": "Create Review",
      "methodName": "CreateReview",
      "serviceName": "Reviews",
      "tag": "Reviews Service",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "namespace",
        "contextId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "namespace",
          "type": "string",
          "doc": " Namespace where review is created\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "contextId",
          "type": "string",
          "doc": " Context id of reviewed entity\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "name",
          "type": "string",
          "doc": " Review author name\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "email",
          "type": "string",
          "doc": " Review author email. Only required when review author is visitor\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "content",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewContent",
          "doc": " Review content\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateReview",
          "statusCode": "200",
          "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_CreateReviewResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nCreates review\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/reviews/api/v1/reviews",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateReviewRequest",
        "rpcResponseName": "CreateReviewResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Delete Review",
      "methodName": "DeleteReview",
      "serviceName": "Reviews",
      "tag": "Reviews Service",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["reviewId"],
      "params": [      {
        "in": "PATH",
        "name": "reviewId",
        "type": "string",
        "doc": " Review id\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteReview",
          "statusCode": "200",
          "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_DeleteReviewResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nDeletes review\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/reviews/api/v1/reviews/{reviewId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteReviewRequest",
        "rpcResponseName": "DeleteReviewResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Review",
      "methodName": "GetReview",
      "serviceName": "Reviews",
      "tag": "Reviews Service",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["reviewId"],
      "params": [      {
        "in": "PATH",
        "name": "reviewId",
        "type": "string",
        "doc": " Review id\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetReview",
          "statusCode": "200",
          "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_GetReviewResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Returns requested review\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/reviews/api/v1/reviews/{reviewId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetReviewRequest",
        "rpcResponseName": "GetReviewResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Query Reviews",
      "methodName": "QueryReviews",
      "serviceName": "Reviews",
      "tag": "Reviews Service",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_QueryV2",
        "doc": " Review query\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "QueryReviews",
          "statusCode": "200",
          "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_QueryReviewsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nReturns list of reviews by [query](https://github.com/wix-private/platformization-guidelines/blob/master/Server/API-Query.md)\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/reviews/api/v1/reviews/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryReviewsRequest",
        "rpcResponseName": "QueryReviewsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Remove Reply",
      "methodName": "RemoveReply",
      "serviceName": "Reviews",
      "tag": "Reviews Service",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["reviewId"],
      "params": [      {
        "in": "PATH",
        "name": "reviewId",
        "type": "string",
        "doc": " Review id\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "RemoveReply",
          "statusCode": "200",
          "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_RemoveReplyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nRemoves reply from review\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/reviews/api/v1/reviews/{reviewId}/reply",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RemoveReplyRequest",
        "rpcResponseName": "RemoveReplyResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Set Reply",
      "methodName": "SetReply",
      "serviceName": "Reviews",
      "tag": "Reviews Service",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["reviewId"],
      "params":       [
                {
          "in": "PATH",
          "name": "reviewId",
          "type": "string",
          "doc": " Review id\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "message",
          "type": "string",
          "doc": " Response to review author\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "SetReply",
          "statusCode": "200",
          "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_SetReplyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nSet reply on a review\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/reviews/api/v1/reviews/{reviewId}/reply",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SetReplyRequest",
        "rpcResponseName": "SetReplyResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update Review",
      "methodName": "UpdateReview",
      "serviceName": "Reviews",
      "tag": "Reviews Service",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["reviewId"],
      "params":       [
                {
          "in": "PATH",
          "name": "reviewId",
          "type": "string",
          "doc": " Review id\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "content",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewContent",
          "doc": " Review content\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Supported fields: content.title, content.body, content.media, content.rating\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateReview",
          "statusCode": "200",
          "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_UpdateReviewResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nUpdates review with provided data\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/reviews/api/v1/reviews/{reviewId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateReviewRequest",
        "rpcResponseName": "UpdateReviewResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_critique_reviews_ReviewUpdatedDomainEvent",
      "name": "Review Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/app-market/tree/master/critique/reviews/proto/com/wixpress/critique/reviews/reviews_api.proto"
      },
      "topic": "domain_events_wix.reviews.v1.review",
      "tag": "Reviews Service",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.reviews.v1.review_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_critique_reviews_ReviewDeletedDomainEvent",
      "name": "Review Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/app-market/tree/master/critique/reviews/proto/com/wixpress/critique/reviews/reviews_api.proto"
      },
      "topic": "domain_events_wix.reviews.v1.review",
      "tag": "Reviews Service",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.reviews.v1.review_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_critique_reviews_ReviewCreatedDomainEvent",
      "name": "Review Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/app-market/tree/master/critique/reviews/proto/com/wixpress/critique/reviews/reviews_api.proto"
      },
      "topic": "domain_events_wix.reviews.v1.review",
      "tag": "Reviews Service",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.reviews.v1.review_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_critique_reviews_ReviewUpdatedDomainEvent",
      "displayName": "Review Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.reviews.v1.review`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Review ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_ReviewEntityUpdatedEvent",
      "displayName": "Review Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_ReviewDeletedDomainEvent",
      "displayName": "Review Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.reviews.v1.review`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Review ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_ReviewEntityDeletedEvent",
      "displayName": "Review Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_ReviewCreatedDomainEvent",
      "displayName": "Review Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.reviews.v1.review`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Review ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_ReviewEntityCreatedEvent",
      "displayName": "Review Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n",
          "readOnly": true
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n",
          "readOnly": true
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_VideoV2",
      "displayName": "Video V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia video ID.\n"
        },
                {
          "name": "resolutions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_VideoResolution"]
          },
          "doc": " Available resolutions for the video, starting with the optimal resolution.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_VideoResolution",
      "displayName": "Video Resolution Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " Video URL.\n",
          "readOnly": true
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Video height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Video width.\n",
          "readOnly": true
        },
                {
          "name": "poster",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_Image",
          "doc": " Video thumbnail.\n",
          "readOnly": true
        },
                {
          "name": "format",
          "type": "string",
          "doc": " Video format for example, mp4, hls.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_Review",
      "displayName": "Review Object",
      "locations": [],
      "docs":       {
        "summary": "*\nEntity describing Review\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "namespace",
          "type": "string",
          "doc": "Namespace of app integrated with reviews\n"
        },
                {
          "name": "contextId",
          "type": "string",
          "doc": "Context to what review is writen id\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": "Review Id\n"
        },
                {
          "name": "content",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewContent",
          "doc": "Review content\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": ""
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": ""
        },
                {
          "name": "author",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_Author",
          "doc": "Author of review data\n"
        },
                {
          "name": "reply",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_Reply",
          "doc": "Reply to review\n"
        },
                {
          "name": "foundHelpful",
          "type": "integer",
          "doc": "Number of reader found this review helpful\n"
        },
                {
          "name": "foundUnhelpful",
          "type": "integer",
          "doc": "Number of reader found this review unhelpful\n"
        },
                {
          "name": "helpfulness",
          "type": "integer",
          "doc": "Helpfulness score\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_ReviewContent",
      "displayName": "Review Content Object",
      "locations": [],
      "docs":       {
        "summary": "*\nEntity describing review content\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": "Review title\n"
        },
                {
          "name": "body",
          "type": "string",
          "doc": "Review body\n"
        },
                {
          "name": "media",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_Media"]
          },
          "doc": "List of media items in review\n"
        },
                {
          "name": "rating",
          "type": "integer",
          "doc": "Given rating to review\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_Reply",
      "displayName": "Reply Object",
      "locations": [],
      "docs":       {
        "summary": "*\nEntity describing reply to review\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "message",
          "type": "string",
          "doc": "Rely content\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": "",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_Media",
      "displayName": "Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "media",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Media_media",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_Media_media",
      "displayName": "media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "image",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_Image",
          "doc": ""
        },
                {
          "name": "video",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_VideoV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_critique_reviews_Author",
      "displayName": "Author Object",
      "locations": [],
      "docs":       {
        "summary": "*\nEntity describing review author\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactId",
          "type": "string",
          "doc": "Contact id of author\n"
        },
                {
          "name": "authorType",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_Author_AuthorType",
          "doc": "Author identity type\n"
        },
                {
          "name": "authorName",
          "type": "string",
          "doc": "Author name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "changedNamespacesMapEntry",
      "displayName": "changed Namespaces Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Changes per namespaces\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Reviews._wix_common_domainevents_ChangedNamespace",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "currentEntityAsJson",
          "type": "string",
          "doc": ""
        },
                {
          "name": "changedNamespaces",
          "type": "All APIs.Reviews.changedNamespacesMapEntry",
          "doc": "Set of key-value pairs. Changes per namespaces\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ChangedNamespace",
      "displayName": "Changed Namespace Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of changed field paths\n"
        },
                {
          "name": "hasMoreChanges",
          "type": "boolean",
          "doc": " Indicates that more fields changed\n The extended fields updated event, contains only fields which are public for everyone to read\n In case where a non public field changes, this event will be sent, but the data about the changed field won't be included.\n To indicate that, this field will be set to true\n Given that you have permissions, you can then perform a read call to get the non public fields\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dipatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Reviews._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dipatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Reviews._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Reviews._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Reviews._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Reviews._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Reviews._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_SortOrder",
          "doc": " Sort order.\n\n Defaults to `ASC`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " The number of items to load.\n Cursor token returned in the query response. To be used on the next query request, but not the first query request.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": " Cursor returned in last query response. Should not be provided on first page request\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next result page.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous result page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": ""
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_Sorting"]
          },
          "doc": ""
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_CursorPaging",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_GetReviewRequest",
      "displayName": "Get Review Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reviewId",
        "type": "string",
        "doc": " Review id\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_GetReviewResponse",
      "displayName": "Get Review Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "review",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": " Review entity\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_CreateReviewRequest",
      "displayName": "Create Review Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "namespace",
          "type": "string",
          "doc": " Namespace where review is created\n"
        },
                {
          "name": "contextId",
          "type": "string",
          "doc": " Context id of reviewed entity\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Review author name\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Review author email. Only required when review author is visitor\n"
        },
                {
          "name": "content",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewContent",
          "doc": " Review content\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_CreateReviewResponse",
      "displayName": "Create Review Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "review",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": " Review entity\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_UpdateReviewRequest",
      "displayName": "Update Review Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "reviewId",
          "type": "string",
          "doc": " Review id\n"
        },
                {
          "name": "content",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_ReviewContent",
          "doc": " Review content\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Supported fields: content.title, content.body, content.media, content.rating\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_UpdateReviewResponse",
      "displayName": "Update Review Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "review",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": "  Updated review data\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_DeleteReviewRequest",
      "displayName": "Delete Review Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reviewId",
        "type": "string",
        "doc": " Review id\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_DeleteReviewResponse",
      "displayName": "Delete Review Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "review",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": " Review entity\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_QueryReviewsRequest",
      "displayName": "Query Reviews Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_QueryV2",
        "doc": " Review query\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_QueryReviewsResponse",
      "displayName": "Query Reviews Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Reviews._com_wixpress_critique_reviews_Review"]
          },
          "doc": " List of review\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Reviews._com_wixpress_critique_reviews_upstream_wix_common_PagingMetadataV2",
          "doc": " Paging metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_SetReplyRequest",
      "displayName": "Set Reply Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "reviewId",
          "type": "string",
          "doc": " Review id\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": " Response to review author\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_SetReplyResponse",
      "displayName": "Set Reply Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "review",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": " Review entity\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_RemoveReplyRequest",
      "displayName": "Remove Reply Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "reviewId",
        "type": "string",
        "doc": " Review id\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_RemoveReplyResponse",
      "displayName": "Remove Reply Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "review",
        "type": "All APIs.Reviews._com_wixpress_critique_reviews_Review",
        "doc": " Review id\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_Author_AuthorType",
      "displayName": "Author Type Object",
      "locations": [],
      "docs":       {
        "summary": " Supported types of review author\n \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> MEMBER <\/code><\/li><li><code> VISITOR <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "MEMBER",
        "VISITOR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_reviews_upstream_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.critique.reviews"}
}