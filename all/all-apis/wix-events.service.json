{
  "name": "Wix Events",
  "client_id": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Use Events API to manage events, collect RSVPs and sell tickets",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "Event",
      "entity": "_wix_events_Event",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/Event.proto"
    },
        {
      "name": "RSVP",
      "entity": "_wix_events_rsvp_Rsvp",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/rsvp/Rsvp.proto"
    },
        {
      "name": "Checkout",
      "entity": "_wix_events_ticketing_Order",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/ticketing/Order.proto"
    },
        {
      "name": "Order",
      "entity": "_wix_events_ticketing_Order",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/ticketing/Order.proto"
    },
        {
      "name": "Ticket Definitions",
      "entity": "_wix_events_ticketing_TicketDefinition",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/ticketing/TicketDefinition.proto"
    },
        {
      "name": "Tickets",
      "entity": "_wix_events_ticketing_Ticket",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/ticketing/Ticket.proto"
    },
        {
      "name": "Site Settings",
      "entity": "_wix_events_editor_SiteSettings",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/editor/SiteSettings.proto"
    },
        {
      "name": "Automated Reports",
      "entity": "_wix_events_GuestRegistrationReportConfig",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/ReportManagement.proto"
    },
        {
      "name": "Notification Configuration",
      "entity": "_wix_events_notifications_NotificationConfig",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/notifications/NotificationConfig.proto"
    },
        {
      "name": "Notification Triggering",
      "entity": null
    },
        {
      "name": "Registration Form",
      "entity": "_wix_events_form_Form",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/form/Form.proto"
    },
        {
      "name": "Policy",
      "entity": "_wix_events_Policy",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/policies/Policy.proto"
    },
        {
      "name": "Schedule",
      "entity": "_wix_events_schedule_ScheduleItem",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/schedule/ScheduleItem.proto"
    },
        {
      "name": "Schedule Bookmarks",
      "entity": "_wix_events_schedule_ScheduleItem",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/schedule/ScheduleItem.proto"
    },
        {
      "name": "Category",
      "entity": "_wix_events_categories_Category",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api//wix/events/categories/Category.proto"
    }
  ],
  "relatedGuides":   [
        {
      "path": "../guides/wix-events/docs/partial-updates.md",
      "name": "Partial Updates"
    },
        {
      "path": "../guides/wix-events/docs/filter-and-sort.md",
      "name": "Filter and Sort"
    },
        {
      "path": "../guides/wix-events/docs/rich-text.md",
      "name": "Rich Text"
    },
        {
      "path": "../guides/wix-events/docs/pagination.md",
      "name": "Pagination"
    },
        {
      "path": "../guides/wix-events/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/wix-events/docs/AboutEventsRegistrationForm.md",
      "name": "About the Registration Form API",
      "tag": "Registration Form"
    },
        {
      "path": "../guides/wix-events/docs/AboutWixEvents.md",
      "name": "About Wix Events"
    },
        {
      "path": "../guides/wix-events/docs/use-cases.md",
      "name": "Use Cases"
    },
        {
      "path": "../guides/wix-events/docs/AboutEvents.md",
      "name": "About the Events API",
      "tag": "Event"
    },
        {
      "path": "../guides/wix-events/docs/fieldsets.md",
      "name": "Fieldset"
    }
  ],
  "operations":   [
        {
      "name": "Add Control",
      "methodName": "AddControl",
      "serviceName": "FormBuilder",
      "tag": "Registration Form",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "control",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "control",
          "type": "All APIs.Wix Events._wix_events_form_AddControlRequest_control",
          "doc": "",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "AddControl",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_form_AddControlResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adds an input control to the draft form.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/form/control",
        "links": [],
        "examples":         [
                    {
            "title": "Add phone",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"phone\": {\n    \"mandatory\": true,\n    \"label\": \"Work phone\"\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"phone-1a4acde6c958ff66\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": false,\n        \"name\": \"phone\",\n        \"inputs\": [        {\n          \"name\": \"phone\",\n          \"array\": false,\n          \"label\": \"Home phone\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": false,\n          \"maxLength\": 25,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Home phone\",\n        \"orderIndex\": 2,\n        \"id\": \"phone\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": false,\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"inputs\": [        {\n          \"name\": \"phone-1a4acde6c958ff66\",\n          \"array\": false,\n          \"label\": \"Work phone\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 25,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Work phone\",\n        \"orderIndex\": 3,\n        \"id\": \"phone-1a4acde6c958ff66\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add full address",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"address\": {\n    \"labels\": {\n      \"addressLine\": \"Address\",\n      \"country\": \"Country\",\n      \"subdivision\": \"State\",\n      \"city\": \"City\",\n      \"postalCode\": \"Postal Code\",\n      \"streetAddress\": \"Street Address\"\n    },\n    \"full\": true,\n    \"mandatory\": true\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"address\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"ADDRESS_FULL\",\n        \"system\": false,\n        \"name\": \"address\",\n        \"inputs\": [        {\n          \"name\": \"address\",\n          \"array\": true,\n          \"label\": \"Address\",\n          \"additionalLabels\":           {\n            \"postal\": \"Postal Code\",\n            \"city\": \"City\",\n            \"state\": \"State\",\n            \"country\": \"Country\",\n            \"street\": \"Street Address\"\n          },\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 100,\n          \"type\": \"ADDRESS\"\n        }],\n        \"label\": \"Address\",\n        \"orderIndex\": 2,\n        \"id\": \"address\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add single line address",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"address\": {\n    \"labels\": {\n      \"addressLine\": \"Address Line\"\n    }\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"address\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"ADDRESS_SHORT\",\n        \"system\": false,\n        \"name\": \"address\",\n        \"inputs\": [        {\n          \"name\": \"address\",\n          \"array\": false,\n          \"label\": \"Address Line\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": false,\n          \"maxLength\": 100,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Address Line\",\n        \"orderIndex\": 2,\n        \"id\": \"address\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add date",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"date\": {\n    \"label\": \"Date of birth\",\n    \"mandatory\": false\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"date\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"DATE\",\n        \"system\": false,\n        \"name\": \"date\",\n        \"inputs\": [        {\n          \"name\": \"date\",\n          \"array\": false,\n          \"label\": \"Date of birth\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": false,\n          \"maxLength\": 0,\n          \"type\": \"DATE_TIME\"\n        }],\n        \"label\": \"Date of birth\",\n        \"orderIndex\": 2,\n        \"id\": \"date\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add +1 additional guest with mandatory guest name",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"additionalGuests\": {\n    \"labels\": {\n      \"single\": \"+1\"\n    },\n    \"namesMandatory\": true,\n    \"maxGuests\": 1\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"additionalGuests\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"GUEST_CONTROL\",\n        \"system\": false,\n        \"name\": \"additionalGuests\",\n        \"inputs\":         [\n                    {\n            \"name\": \"additionalGuests\",\n            \"array\": false,\n            \"label\": \"+1\",\n            \"additionalLabels\":             {\n              \"one\": \"+1\",\n              \"multiple\": \"\"\n            },\n            \"options\":             [\n              \"0\",\n              \"1\"\n            ],\n            \"mandatory\": true,\n            \"maxLength\": 0,\n            \"type\": \"NUMBER\"\n          },\n                    {\n            \"name\": \"guestNames\",\n            \"array\": true,\n            \"label\": \"First Name, Last Name\",\n            \"additionalLabels\":             {\n              \"firstName\": \"First Name\",\n              \"lastName\": \"Last Name\"\n            },\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT_ARRAY\",\n            \"maxSize\": 1\n          }\n        ],\n        \"label\": \"+1\",\n        \"orderIndex\": 2,\n        \"id\": \"additionalGuests\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add multiple additional guests",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"additionalGuests\": {\n    \"labels\": {\n      \"multiple\": \"Additional guests\"\n    },\n    \"maxGuests\": 10\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"additionalGuests\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"GUEST_CONTROL\",\n        \"system\": false,\n        \"name\": \"additionalGuests\",\n        \"inputs\":         [\n                    {\n            \"name\": \"additionalGuests\",\n            \"array\": false,\n            \"label\": \"Additional guests\",\n            \"additionalLabels\":             {\n              \"one\": \"\",\n              \"multiple\": \"Additional guests\"\n            },\n            \"options\":             [\n              \"0\",\n              \"1\",\n              \"2\",\n              \"3\",\n              \"4\",\n              \"5\",\n              \"6\",\n              \"7\",\n              \"8\",\n              \"9\",\n              \"10\"\n            ],\n            \"mandatory\": true,\n            \"maxLength\": 0,\n            \"type\": \"NUMBER\"\n          },\n                    {\n            \"name\": \"guestNames\",\n            \"array\": true,\n            \"label\": \"First Name, Last Name\",\n            \"additionalLabels\":             {\n              \"firstName\": \"First Name\",\n              \"lastName\": \"Last Name\"\n            },\n            \"options\": [],\n            \"mandatory\": false,\n            \"maxLength\": 50,\n            \"type\": \"TEXT_ARRAY\",\n            \"maxSize\": 10\n          }\n        ],\n        \"label\": \"Additional guests\",\n        \"orderIndex\": 2,\n        \"id\": \"additionalGuests\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add dropdown",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"dropdown\": {\n    \"label\": \"Choose main course\",\n    \"options\": [\n      \"Vegetarian\",\n      \"Sea food\",\n      \"Steak\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"custom\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"DROPDOWN\",\n        \"system\": false,\n        \"name\": \"custom\",\n        \"inputs\": [        {\n          \"name\": \"custom\",\n          \"array\": false,\n          \"label\": \"Choose main course\",\n          \"additionalLabels\": {},\n          \"options\":           [\n            \"Vegetarian\",\n            \"Sea food\",\n            \"Steak\"\n          ],\n          \"mandatory\": false,\n          \"maxLength\": 0,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Choose main course\",\n        \"orderIndex\": 2,\n        \"id\": \"custom\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add checkbox",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"checkbox\": {\n    \"label\": \"Select color preferences\",\n    \"mandatory\": true,\n    \"options\": [\n      \"Red\",\n      \"Green\",\n      \"Blue\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"custom\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"CHECKBOX\",\n        \"system\": false,\n        \"name\": \"custom\",\n        \"inputs\": [        {\n          \"name\": \"custom\",\n          \"array\": true,\n          \"label\": \"Select color preferences\",\n          \"additionalLabels\": {},\n          \"options\":           [\n            \"Red\",\n            \"Green\",\n            \"Blue\"\n          ],\n          \"mandatory\": true,\n          \"maxLength\": 0,\n          \"type\": \"TEXT_ARRAY\",\n          \"maxSize\": 3\n        }],\n        \"label\": \"Select color preferences\",\n        \"orderIndex\": 2,\n        \"id\": \"custom\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Add comment text area",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/control' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"text\": {\n    \"label\": \"Comment\",\n    \"mandatory\": true,\n    \"maxLength\": 1000,\n    \"multiLine\": true,\n    \"comment\": true\n  }\n}\nEOF"],
            "response": ["{\n  \"id\": \"comment\",\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"TEXTAREA\",\n        \"system\": false,\n        \"name\": \"comment\",\n        \"inputs\": [        {\n          \"name\": \"comment\",\n          \"array\": false,\n          \"label\": \"Comment\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 1000,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Comment\",\n        \"orderIndex\": 2,\n        \"id\": \"comment\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AddControlRequest",
        "rpcResponseName": "AddControlResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Add Schedule Item",
      "methodName": "AddScheduleItem",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "item.name",
        "item.timeSlot",
        "item.timeSlot.start",
        "item.timeSlot.end"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "item",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItemData",
          "doc": " Schedule item.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "AddScheduleItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_AddScheduleItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adds schedule item to the draft schedule. Draft items are not publicly available unless published.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/schedule/draft",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/agenda/draft' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AddScheduleItemRequest",
        "rpcResponseName": "AddScheduleItemResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Assign Events",
      "methodName": "AssignEvents",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "AssignEvents",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_AssignEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Assigns events to a single category.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/categories/{categoryId}/events",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/categories/e9779de3-a085-4255-b3a6-9559990d4436/events' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"categoryId\": \"e9779de3-a085-4255-b3a6-9559990d4436\",\n  \"eventId\": [\n    \"539a564e-48d2-4eac-8e14-d7a91be6b1c2\",\n    \"abd39eb7-844c-4321-9ea2-0d43040be05e\"\n  ]\n}\nEOF"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AssignEventsRequest",
        "rpcResponseName": "AssignEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bookmark Schedule Item",
      "methodName": "CreateBookmark",
      "serviceName": "BookmarkManagement",
      "tag": "Schedule Bookmarks",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "itemId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateBookmark",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_CreateBookmarkResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Bookmarks schedule item for current member.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/schedule/{itemId}/bookmark",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/agenda/80a28db1-672b-45db-a62c-5315ee07ae22/bookmark' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateBookmarkRequest",
        "rpcResponseName": "CreateBookmarkResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Assign Events",
      "methodName": "BulkAssignEvents",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "eventId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkAssignEvents",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkAssignEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Assigns events to multiple categories.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/bulk/categories/events",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/bulk/categories/events' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"categoryId\": [\n    \"e9779de3-a085-4255-b3a6-9559990d4436\",\n    \"027ac25d-cc64-4eb1-8666-4ea53cf7f134\"\n   ],\n  \"eventId\": [\n    \"539a564e-48d2-4eac-8e14-d7a91be6b1c2\"\n  ]\n}\nEOF"],
          "response": ["{\n  \"results\":   [\n        {\n      \"itemMetadata\":       {\n        \"id\": \"027ac25d-cc64-4eb1-8666-4ea53cf7f134\",\n        \"originalIndex\": 0,\n        \"success\": true\n      },\n      \"item\":       {\n        \"id\": \"027ac25d-cc64-4eb1-8666-4ea53cf7f134\",\n        \"name\": \"2\",\n        \"createdDate\": \"2021-03-25T10:16:57.486Z\"\n      }\n    },\n        {\n      \"itemMetadata\":       {\n        \"id\": \"e9779de3-a085-4255-b3a6-9559990d4436\",\n        \"originalIndex\": 1,\n        \"success\": true\n      },\n      \"item\":       {\n        \"id\": \"e9779de3-a085-4255-b3a6-9559990d4436\",\n        \"name\": \"A very cool category!\",\n        \"createdDate\": \"2021-04-01T09:49:37.068Z\"\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkAssignEventsRequest",
        "rpcResponseName": "BulkAssignEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Assign Events Async",
      "methodName": "BulkAssignEventsAsync",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "filter"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkAssignEventsAsync",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkAssignEventsAsyncResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Assigns filtered events to multiple categories.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/bulk-async/categories/events",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkAssignEventsAsyncRequest",
        "rpcResponseName": "BulkAssignEventsAsyncResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Cancel Events",
      "methodName": "BulkCancelEvents",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["filter"],
      "params": [      {
        "in": "BODY",
        "name": "filter",
        "type": "struct",
        "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "BulkCancelEvents",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_BulkCancelEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Cancels events by filter.\n If event cancellation notifications are enabled, canceling an event automatically sends cancellation emails and/or push notifications to registered guests.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/bulk/events/cancel",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkCancelEventsRequest",
        "rpcResponseName": "BulkCancelEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Create Category",
      "methodName": "BulkCreateCategory",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["categories"],
      "params": [      {
        "in": "BODY",
        "name": "categories",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_Category"]
        },
        "doc": "",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "BulkCreateCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkCreateCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates new categories.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/bulk/categories/create",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/bulk/categories/create' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"categories\": [\n    {\n      \"name\": \"A very cool category!\"\n    }\n  ]\n}\nEOF"],
          "response": ["{\n  \"results\": [  {\n    \"itemMetadata\":     {\n      \"id\": \"6c313b96-1961-4f0f-b6d7-61788e1a25df\",\n      \"originalIndex\": 0,\n      \"success\": true\n    },\n    \"item\":     {\n      \"id\": \"6c313b96-1961-4f0f-b6d7-61788e1a25df\",\n      \"name\": \"A very cool category!\",\n      \"createdDate\": \"2021-04-01T09:55:31.335Z\"\n    }\n  }],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 1,\n    \"totalFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkCreateCategoryRequest",
        "rpcResponseName": "BulkCreateCategoryResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Delete Events",
      "methodName": "BulkDeleteEvents",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["filter"],
      "params": [      {
        "in": "BODY",
        "name": "filter",
        "type": "struct",
        "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "BulkDeleteEvents",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_BulkDeleteEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes events by filter.\n Deleted events are not returned via API. The only way to retrieve them is via GDPR access request.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/bulk/events/delete",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkDeleteEventsRequest",
        "rpcResponseName": "BulkDeleteEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Unassign Events",
      "methodName": "BulkUnassignEvents",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["categoryId"],
      "params":       [
                {
          "in": "BODY",
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUnassignEvents",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkUnassignEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Unassigns events to multiple categories.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/bulk/categories/events",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/bulk/categories/events?categoryId=e9779de3-a085-4255-b3a6-9559990d4436&categoryId=027ac25d-cc64-4eb1-8666-4ea53cf7f134&eventId=539a564e-48d2-4eac-8e14-d7a91be6b1c2' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"results\":   [\n        {\n      \"itemMetadata\":       {\n        \"id\": \"027ac25d-cc64-4eb1-8666-4ea53cf7f134\",\n        \"originalIndex\": 0,\n        \"success\": true\n      },\n      \"item\":       {\n        \"id\": \"027ac25d-cc64-4eb1-8666-4ea53cf7f134\",\n        \"name\": \"2\",\n        \"createdDate\": \"2021-03-25T10:16:57.486Z\"\n      }\n    },\n        {\n      \"itemMetadata\":       {\n        \"id\": \"e9779de3-a085-4255-b3a6-9559990d4436\",\n        \"originalIndex\": 1,\n        \"success\": true\n      },\n      \"item\":       {\n        \"id\": \"e9779de3-a085-4255-b3a6-9559990d4436\",\n        \"name\": \"A very cool category!\",\n        \"createdDate\": \"2021-04-01T09:49:37.068Z\"\n      }\n    }\n  ],\n  \"bulkActionMetadata\":   {\n    \"totalSuccesses\": 2,\n    \"totalFailures\": 0\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUnassignEventsRequest",
        "rpcResponseName": "BulkUnassignEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Unassign Events Async",
      "methodName": "BulkUnassignEventsAsync",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "filter"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUnassignEventsAsync",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkUnassignEventsAsyncResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Unassigns filtered events to multiple categories.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/bulk-async/categories/events",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUnassignEventsAsyncRequest",
        "rpcResponseName": "BulkUnassignEventsAsyncResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Update Orders",
      "methodName": "BulkUpdateOrders",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether to archive the order.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateOrders",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_BulkUpdateOrdersResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "  Updates multiple orders' `archived` status.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"orderNumber\": [\n    \"FM9X-EHKF-ZO\"\n  ],\n  \"fields\": {\n    \"paths\": [\n      \"archived\"\n    ]\n  },\n  \"archived\": false\n}\nEOF"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateOrdersRequest",
        "rpcResponseName": "BulkUpdateOrdersResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Update RSVP",
      "methodName": "BulkUpdateRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Manage Guest List",
        "description": "Request permission to read, create and change event tickets, guest lists and RSVPs."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "rsvpId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " RSVPs to update.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " New RSVP status.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_BulkUpdateRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates multiple RSVPs - status only.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/rsvp",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/rsvp' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n     \"rsvpId\": [\"7c9dbf44-359c-47c7-a3e4-02638ab851c4\", \"fb97100a-98e2-4579-a61c-e71a3501b085\"],\n     \"status\": \"WAITING\",\n      \"fields\": {\n         \"paths\": [\n           \"status\"\n         ]\n       }\n}\nEOF"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateRsvpRequest",
        "rpcResponseName": "BulkUpdateRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Update Tickets",
      "methodName": "BulkUpdateTickets",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Manage Guest List",
        "description": "Request permission to read, create and change event tickets, guest lists and RSVPs."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Unique ticket numbers.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether tickets are archived.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_BulkUpdateTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates the `archived` state of multiple tickets. See [Partial Updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"ticketNumber\": [\n    \"FNVL-NIJT-WP021\",\n    \"FNVL-O7MZ-0Q021\"\n  ],\n  \"archived\": true,\n  \"fields\": {\n    \"paths\": [\n      \"archived\"\n    ]\n  }\n}\nEOF"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateTicketsRequest",
        "rpcResponseName": "BulkUpdateTicketsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Cancel Event",
      "methodName": "CancelEvent",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CancelEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_CancelEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Cancels an event and closes registration.\n If event cancellation notifications are enabled, canceling an event automatically sends cancellation emails and/or push notifications to registered guests.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{id}/cancel",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/1551a333-06bf-4aa7-92b0-58a1ef413b9c/cancel' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"location\":   {\n    \"name\": \"Wix Playground (2nd floor)\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2021-05-16T07:00:00Z\",\n      \"endDate\": \"2021-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2021, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2021\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"title\": \"My event (rescheduled & relocated)\",\n  \"description\": \"\",\n  \"about\": \"\",\n  \"slug\": \"my-event-rescheduled-relocated\",\n  \"language\": \"es\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-16T10:55:39Z\",\n  \"status\": \"CANCELED\",\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CancelEventRequest",
        "rpcResponseName": "CancelEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Cancel Reservation",
      "methodName": "CancelReservation",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Reservation ID.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "CancelReservation",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_CancelReservationResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Cancels ticket reservation and returns tickets to stock.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/reservation/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/reservation/1fe76e20-efa0-4330-be44-2a8b2ca3c208' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CancelReservationRequest",
        "rpcResponseName": "CancelReservationResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Change Currency",
      "methodName": "ChangeCurrency",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "currency",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "currency",
          "type": "string",
          "doc": " Event currency.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "ChangeCurrency",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ChangeCurrencyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Changes the currency for all tickets (per event).\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions/currency",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PUT 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions/currency?currency=EUR' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ChangeCurrencyRequest",
        "rpcResponseName": "ChangeCurrencyResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Check-in RSVP",
      "methodName": "CheckInRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "rsvpId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID to check-in.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "guestId",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " Guest IDs to check-in.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CheckInRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_CheckInRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Checks-in an RSVP.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/rsvp/check-in",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/rsvp/check-in?eventId=fd56076c-38f4-4705-b9eb-ec322b85c745&rsvpId=7c9dbf44-359c-47c7-a3e4-02638ab851c4&guestId=1' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"rsvp\": {\n  \"id\": \"7c9dbf44-359c-47c7-a3e4-02638ab851c4\",\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n  \"memberId\": \"\",\n  \"created\": \"2020-05-18T15:07:54Z\",\n  \"modified\": \"2020-05-18T15:58:53.656Z\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"status\": \"WAITING\",\n  \"totalGuests\": 1,\n  \"guests\": [  {\n    \"index\": 0,\n    \"fullName\": \"John Doe\",\n    \"checkIn\": {\"created\": \"2020-05-18T15:58:53.656Z\"},\n    \"id\": 1\n  }],\n  \"anonymized\": false\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CheckInRsvpRequest",
        "rpcResponseName": "CheckInRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Check-in Tickets",
      "methodName": "CheckInTicket",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to check-in.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CheckInTicket",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_CheckInTicketResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Checks in 1 or more tickets.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/tickets/check-in",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/check-in' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"eventId\": \"ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketNumber\": [\n    \"FNVL-NIJT-WP021\",\n    \"FNVL-O7MZ-0Q021\"\n  ]\n}\nEOF"],
          "response": ["{\"tickets\": [\n    {\n    \"ticketNumber\": \"FNVL-NIJT-WP021\",\n    \"orderNumber\": \"FNVL-NIJT-WP\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"12.34\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"checkIn\": {\"created\": \"2020-05-29T14:53:43.854Z\"},\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"John Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  },\n    {\n    \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n    \"orderNumber\": \"FNVL-O7MZ-0Q\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"11.11\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"checkIn\": {\"created\": \"2020-05-29T14:53:43.859Z\"},\n    \"orderStatus\": \"OFFLINE_PENDING\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"Jane Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Doe\",\n      \"email\": \"jane.doe@example.com\",\n      \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CheckInTicketRequest",
        "rpcResponseName": "CheckInTicketResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Checkout",
      "methodName": "Checkout",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "guests.form",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "reservationId",
          "type": "string",
          "doc": " Ticket reservation ID.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "buyer",
          "type": "All APIs.Wix Events._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "paidPlanBenefit",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "options",
          "type": "All APIs.Wix Events._wix_events_ticketing_CheckoutOptions",
          "doc": " Options controlling the checkout process.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "policyAgreementToken",
          "type": "string",
          "doc": " Policy agreement token. Required when the event has one or more policies.\n Token must match with the token from [GetTokens](https://dev.wix.com/api/rest/wix-events/wix-events/policy/get-tokens) response.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "Checkout",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_CheckoutResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Checkout reserved tickets.\n Creates order and associates it with a site contact.\n Guest details must be sent according to Registration Form input fields.\n (To change an existing \"INITIATED, \"PENDING\", or \"OFFLINE_PENDING\" order, call the [Update Checkout](https://dev.wix.com/api/rest/wix-events/wix-events/checkout/update-checkout) endpoint).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/checkout",
        "links": [],
        "examples":         [
                    {
            "title": "Checkout",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/419d52c0-c93b-4155-a55c-108048f20be/tickets/checkout' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n                 \"discount\": {\n                   \"couponCode\": \"SUMMER\"\n                 },\n                 \"guests\": [\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"John\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"john.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   }\n                 ]\n               }'"],
            "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FOIK-XNX7-MX\",\n    \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n    \"snapshotId\": \"ff95a725-a58c-4c38-b636-b90d3d216432\",\n    \"eventId\": \"419d52c0-c93b-4155-a55c-108048f20be\",\n    \"contactId\": \"\",\n    \"memberId\": \"\",\n    \"created\": \"2020-06-19T10:21:54.082Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@wix.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@wix.com\"\n      }\n    ]},\n    \"confirmed\": false,\n    \"status\": \"INITIATED\",\n    \"method\": \"\",\n    \"ticketsQuantity\": 3,\n    \"totalPrice\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"invoice\":     {\n      \"items\":       [\n                {\n          \"id\": \"210db14c-c339-4ce3-b07a-4c0032a6fc79\",\n          \"quantity\": 1,\n          \"name\": \"Nice ticket\",\n          \"price\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"fees\": []\n        },\n                {\n          \"id\": \"1d4083ae-e8cf-4bb7-8e2a-0ad011f12b93\",\n          \"quantity\": 2,\n          \"name\": \"Early Bird\",\n          \"price\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"20.00\",\n            \"currency\": \"EUR\"\n          },\n          \"discount\":           {\n            \"amount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"afterDiscount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"code\": \"SUMMER\",\n            \"name\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n            \"discounts\": [            {\n              \"amount\":               {\n                \"amount\": \"10.00\",\n                \"currency\": \"EUR\"\n              },\n              \"coupon\":               {\n                \"name\": \"SUMMER\",\n                \"code\": \"SUMMER\",\n                \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n              }\n            }]\n          },\n          \"fees\": []\n        }\n      ],\n      \"total\":       {\n        \"amount\": \"20.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"subTotal\":       {\n        \"amount\": \"20.00\",\n        \"currency\": \"EUR\"\n      },\n      \"grandTotal\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": [],\n      \"revenue\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      }\n    },\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"\"\n  },\n  \"expires\": \"2020-06-19T10:41:33.147Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"210db14c-c339-4ce3-b07a-4c0032a6fc79\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0,\n        \"policy\": \"\",\n        \"eventId\": \"\"\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"1d4083ae-e8cf-4bb7-8e2a-0ad011f12b93\",\n        \"price\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"Early Bird\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0,\n        \"policy\": \"\",\n        \"eventId\": \"\"\n      }\n    }\n  ]\n} "],
            "type": "curl",
            "extra": {"description": "A simple checkout when the guest is the buyer."}
          },
                    {
            "title": "Checkout with guest assigned tickets",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/419d52c0-c93b-4155-a55c-108048f20be/tickets/checkout' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n                 \"discount\": {\n                   \"couponCode\": \"SUMMER\"\n                 },\n                 \"buyer\": {\n                   \"firstName\": \"John\",\n                   \"lastName\": \"Doe\",\n                   \"email\": \"john.doe@somedomain.com\"\n                 },\n                 \"guests\": [\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"John\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"john.doe@somedomain.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Sarah\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"sarah.doe@somedomain.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Mathew\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"mathew.doe@somedomain.com\"\n                         }\n                       ]\n                     }\n                   }\n                 ]\n               }'"],
            "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FNNU-XRQ9-QR\",\n    \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n    \"snapshotId\": \"ed37fbec-e065-473e-b079-6dbde2dff218\",\n    \"eventId\": \"419d52c0-c93b-4155-a55c-108048f20be\",\n    \"contactId\": \"\",\n    \"memberId\": \"\",\n    \"created\": \"2020-05-22T13:36:39.158Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@wix.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@wix.com\"\n      }\n    ]},\n    \"confirmed\": false,\n    \"status\": \"INITIATED\",\n    \"method\": \"\",\n    \"ticketsQuantity\": 3,\n    \"totalPrice\":     {\n      \"amount\": \"190.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"invoice\":     {\n      \"items\":       [\n                {\n          \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n          \"quantity\": 1,\n          \"name\": \"Nice ticket\",\n          \"price\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"fees\": []\n        },\n                {\n          \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n          \"quantity\": 2,\n          \"name\": \"VIP ticket\",\n          \"price\":           {\n            \"amount\": \"100.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"200.00\",\n            \"currency\": \"EUR\"\n          },\n          \"discount\":           {\n            \"amount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"afterDiscount\":             {\n              \"amount\": \"190.00\",\n              \"currency\": \"EUR\"\n            },\n            \"code\": \"SUMMER\",\n            \"name\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n            \"discounts\": [            {\n              \"amount\":               {\n                \"amount\": \"10.00\",\n                \"currency\": \"EUR\"\n              },\n              \"coupon\":               {\n                \"name\": \"SUMMER\",\n                \"code\": \"SUMMER\",\n                \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n              }\n            }]\n          },\n          \"fees\": []\n        }\n      ],\n      \"total\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"190.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"subTotal\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"grandTotal\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": [],\n      \"revenue\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      }\n    },\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"\"\n  },\n  \"expires\": \"2020-05-22T13:12:54.804Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"VIP ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    }\n  ]\n} "],
            "type": "curl",
            "extra": {"description": "If guest assigned tickets is turned on of event, the guest form mus be filled for each of the ticket. Also buyer details has to be provided that will be visible in the order."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CheckoutRequest",
        "rpcResponseName": "CheckoutResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Confirm Order",
      "methodName": "ConfirmOrder",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ConfirmOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ConfirmOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Changes order status to \"CONFIRMED\" - from \"INITIATED, \"PENDING\", \"OFFLINE_PENDING\" to \"PAID\".\n Previously confirmed orders (with status \"PAID\" or \"FREE\") are not changed.\n Confirming previously \"INITIATED\" or \"PENDING\" orders triggers an email with the tickets to the buyer (and to additional guests, if relevant and provided).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders/confirm",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders/confirm' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"orderNumber\": [\n    \"FM9X-EHKF-ZO\"\n  ]\n}\nEOF"],
          "response": ["{\"orders\": [{\n  \"orderNumber\": \"FM9X-EHKF-ZO\",\n  \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n  \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n  \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n  \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n  \"memberId\": \"\",\n  \"created\": \"2020-04-07T06:42:35.381Z\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@somedomain.com\",\n  \"checkoutForm\": {\"inputValues\":   [\n        {\n      \"inputName\": \"firstName\",\n      \"value\": \"John\"\n    },\n        {\n      \"inputName\": \"lastName\",\n      \"value\": \"Doe\"\n    },\n        {\n      \"inputName\": \"email\",\n      \"value\": \"john.doe@somedomain.com\"\n    }\n  ]},\n  \"confirmed\": true,\n  \"status\": \"PAID\",\n  \"method\": \"payPal\",\n  \"ticketsQuantity\": 1,\n  \"totalPrice\":   {\n    \"amount\": \"10.00\",\n    \"currency\": \"EUR\"\n  },\n  \"ticketsPdf\": \"<url_to_pdf>\",\n  \"tickets\": [  {\n    \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n    \"name\": \"VIP enterance\",\n    \"price\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"John Doe\",\n    \"guestFullName\": \"Sarah Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": true,\n      \"firstName\": \"Sarah\",\n      \"lastName\": \"Doe\",\n      \"email\": \"sarah.doe@somedomain.com\",\n      \"form\": {\"inputValues\":       [\n                {\n          \"inputName\": \"email\",\n          \"value\": \"sarah.doe@somedomain.com\"\n        },\n                {\n          \"inputName\": \"lastName\",\n          \"value\": \"Doe\"\n        },\n                {\n          \"inputName\": \"firstName\",\n          \"value\": \"Sarah\"\n        }\n      ]},\n      \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n    },\n    \"archived\": false,\n    \"ticketPdfUrl\": \"<url_to_pdf>\",\n    \"anonymized\": false\n  }],\n  \"archived\": false,\n  \"anonymized\": false,\n  \"fullName\": \"John Doe\",\n  \"fullyCheckedIn\": false,\n  \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n}]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ConfirmOrderRequest",
        "rpcResponseName": "ConfirmOrderResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Copy Event",
      "methodName": "Copy",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "draft",
          "type": "boolean",
          "doc": " If true, event will be copied as draft.\n Otherwise copied event will be published, unless it is draft.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "Copy",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_CopyEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Copies an event, including its registration form, notifications and tickets configuration - scheduled two weeks from the original event.\n Multilingual translations are also copied to the new event.\n\n When an event with same title already exists, appends (1), (2), ... to it. For example, copying an event titled \"My Event\" creates \"My Event (1)\".\n Very long event titles are cropped: \"Daily stand-up ev... (2)\".\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/copy",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/1551a333-06bf-4aa7-92b0-58a1ef413b9c/copy' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"event\": {\n  \"id\": \"ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"location\":   {\n    \"name\": \"Wix Playground (2nd floor)\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2020-05-30T07:00:00Z\",\n      \"endDate\": \"2020-05-30T11:00:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 30, 2020, 7:00 AM – 11:00 AM GMT\",\n    \"startDateFormatted\": \"May 30, 2020\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"title\": \"My event (rescheduled & relocated) (1)\",\n  \"description\": \"\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"slug\": \"my-event-rescheduled-relocated-1\",\n  \"language\": \"es\",\n  \"created\": \"2020-05-16T10:53:57.326Z\",\n  \"modified\": \"2020-05-16T10:53:57Z\",\n  \"status\": \"SCHEDULED\",\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CopyEventRequest",
        "rpcResponseName": "CopyEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Copy Event V2",
      "methodName": "CopyEventV2",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data to update (partial)\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n <!--ONLY:REST-->\n Fields will be auto-populated from the `event` entity unless added to the request explicitly.\n <!--END:ONLY:REST-->\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "required": false,
          "fieldMask": "RPC"
        },
                {
          "in": "BODY",
          "name": "draft",
          "type": "boolean",
          "doc": " If true, event will be copied as draft.\n Otherwise copied event will be published, unless it is draft.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CopyEventV2",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_CopyEventV2Response"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Copies an event, including its registration form, notifications and tickets configuration - scheduled two weeks from the original event.\n Multilingual translations are also copied to the new event.\n Supports partial update of the original event fields. See [Partial Updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n\n When an event with same title already exists, appends (1), (2), ... to it. For example, copying an event titled \"My Event\" creates \"My Event (1)\".\n Very long event titles are cropped: \"Daily stand-up ev... (2)\".\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v2/events/{id}/copy",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v2/events/51fc92af-972f-441e-a2c3-464157b71882/copy' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"event\": {\n  \"title\": \"Duplicated event\",\n  \"fields\": {\n    \"paths\": [\n      \"event.title\"\n    ]\n  },\n  \"draft\": true\n  }\n}\nEOF"],
          "response": ["{\"event\": {\n  \"id\": \"477ed4e6-37d4-4bd0-a499-e71f63770fcf\",\n  \"location\":   {\n    \"name\": \"Location is TBD\",\n    \"type\": \"VENUE\",\n    \"tbd\": true\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": true,\n      \"scheduleTbdMessage\": \"Time is TBD\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": false,\n      \"recurrences\":       {\n        \"occurrences\": [],\n        \"status\": \"ONE_TIME\"\n      }\n    },\n    \"formatted\": \"Time is TBD\",\n    \"startDateFormatted\": \"\",\n    \"startTimeFormatted\": \"\"\n  },\n  \"title\": \"Duplicated event\",\n  \"description\": \"\",\n  \"about\": \"\",\n  \"slug\": \"duplicated-event\",\n  \"language\": \"en\",\n  \"created\": \"2021-08-03T07:35:13.592Z\",\n  \"modified\": \"2021-08-03T07:35:13Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"RSVP\",\n    \"status\": \"OPEN_RSVP\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"waitlist\": false\n    }},\n    \"ticketing\":     {\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"ticketLimitPerOrder\": 20\n      },\n      \"soldOut\": true\n    },\n    \"restrictedTo\": \"VISITOR\",\n    \"initialType\": \"RSVP\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=Duplicated+event&dates=&location=&details=Thank+you+for+registering+to+our+event%21%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+event+details%3A%0A%0ADuplicated+event%0ATime+is+TBD%0ALocation+is+TBD\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/477ed4e6-37d4-4bd0-a499-e71f63770fcf?token=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiZXZlbnRJZFwiOntcInZhbHVlXCI6XCI0NzdlZDRlNi0zN2Q0LTRiZDAtYTQ5OS1lNzFmNjM3NzBmY2ZcIn0sXCJvY0xpbmtcIjpudWxsfSIsImlhdCI6MTYyNzk3NjExM30.CryYgqKA0Q61T_jFyZaXa1T4yB2DW8tpZ6RSVkg119A\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://martynasa.wixsite.com/my-site-26\",\n    \"path\": \"/event-details/duplicated-event\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\",\n          \"labels\": []\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      },\n      \"ticketsUnavailable\":       {\n        \"message\": \"Tickets Are Not on Sale\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"66a805c4-ed86-4763-a7b1-2d876c293294\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"5f8e2124-5c31-48cd-8464-eaf9c6211054\",\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJzdGFydFwiLFwiaW5zdGFuY2VJZFwiOlwiNjZhODA1YzQtZWQ4Ni00NzYzLWE3YjEtMmQ4NzZjMjkzMjk0XCIsXCJldmVudElkXCI6XCI0NzdlZDRlNi0zN2Q0LTRiZDAtYTQ5OS1lNzFmNjM3NzBmY2ZcIn0iLCJpYXQiOjE2Mjc5NzYxMTN9.VVwZq2asO1VTUPcnkdiV5Mu_JpWcmJ2BC3FvCCsee2o\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJqb2luXCIsXCJpbnN0YW5jZUlkXCI6XCI2NmE4MDVjNC1lZDg2LTQ3NjMtYTdiMS0yZDg3NmMyOTMyOTRcIixcImV2ZW50SWRcIjpcIjQ3N2VkNGU2LTM3ZDQtNGJkMC1hNDk5LWU3MWY2Mzc3MGZjZlwifSIsImlhdCI6MTYyNzk3NjExM30.ELh73deVDgCLsp_lzDfKXAC9G07CyA9jcNYhmtVnPJ0\"\n    },\n    \"providerName\": \"\"\n  },\n  \"assignedContactsLabel\": \"custom.duplicated-event-time-is-tbd\",\n  \"agenda\": {\"enabled\": false}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CopyEventV2Request",
        "rpcResponseName": "CopyEventV2Response",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Create Category",
      "methodName": "CreateCategory",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["category"],
      "params": [      {
        "in": "BODY",
        "name": "category",
        "type": "All APIs.Wix Events._wix_events_categories_Category",
        "doc": "",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_CreateCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a new category.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/categories",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/categories' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"category\": {\n    \"name\": \"A very cool category!\"\n  }\n}\nEOF"],
          "response": ["{\"category\": {\n  \"id\": \"e9779de3-a085-4255-b3a6-9559990d4436\",\n  \"name\": \"A very cool category!\",\n  \"createdDate\": \"2021-04-01T09:49:37.068Z\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateCategoryRequest",
        "rpcResponseName": "CreateCategoryResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Create Event",
      "methodName": "CreateEventV2",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "event",
        "event.title",
        "event.location",
        "event.scheduleConfig"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "language",
          "type": "string",
          "doc": " Content language code in ISO 639-1 format.\n Used for translating ticket PDF labels, registration form, automatic emails, etc.\n Supported languages: ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hu, id, it, ja, ko, ms, nl, no, pl, pt, ro, ru, sv, th, tl, tr, uk, zh.\n Defaults to en.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "draft",
          "type": "boolean",
          "doc": " Whether event should be created as draft. Draft events are hidden from site visitors.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateEventV2",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_CreateEventV2Response"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a new event, with a default registration form in the given language.\n Default registration form includes first name, last name, and email inputs.\n To learn more about registration form and customize it, see [Registration Form](https://dev.wix.com/api/rest/wix-events/wix-events/registration-form/about-the-registration-form-api).\n The event is automatically configured to send daily summary reports of new registrations to site business email.\n RegistrationConfig.initialType is required - allowed value when creating is RSVP or TICKETS.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v2/events",
        "links": [],
        "examples":         [
                    {
            "title": "Create RSVP event",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v2/events' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"event\": {\n    \"title\": \"My event\",\n    \"description\": \"A very cool event!\",\n    \"about\": \"<p><strong>Register and find out!<\/strong><\/p>\",\n    \"location\": {\n      \"type\": \"VENUE\",\n      \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n      \"coordinates\": {\n        \"lng\": 40.739254,\n        \"lat\": -74.008925\n      },\n      \"name\": \"Wix Playground\"\n    },\n    \"onlineConferencingConfig\": null,\n    \"guestListConfig\": {\n      \"publicGuestList\": true\n    },\n    \"rsvpCollectionConfig\": {\n      \"waitlist\": true,\n      \"limit\": 20,\n      \"rsvpStatusOptions\": \"YES_ONLY\"\n    },\n    \"registrationConfig\": {\n      \"initialType\": \"RSVP\"\n    },\n    \"scheduleConfig\": {\n      \"endDate\": \"2022-07-9T22:42:21.981Z\",\n      \"scheduleTbd\": false,\n      \"timeZoneId\": \"UTC\",\n      \"scheduleTbdMessage\": null,\n      \"endDateHidden\": false,\n      \"startDate\": \"2022-07-09T20:42:21.981Z\",\n      \"showTimeZone\": true\n    },\n    \"mainImage\": {\n      \"height\": 2704,\n      \"width\": 1920,\n      \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\"\n    }\n  },\n  \"language\": \"en\"\n}\nEOF"],
            "response": ["{\"event\": {\n  \"id\": \"f1c0e8d6-d547-490d-a765-32fabafd3fc3\",\n  \"location\":   {\n    \"name\": \"Wix Playground\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\",\n    \"fullAddress\":     {\n      \"country\": \"US\",\n      \"subdivision\": \"NY\",\n      \"city\": \"New York\",\n      \"postalCode\": \"10014\",\n      \"streetAddress\":       {\n        \"number\": \"100\",\n        \"name\": \"Gansevoort Street\",\n        \"apt\": \"\"\n      },\n      \"formattedAddress\": \"100 Gansevoort St, New York, NY 10014, USA\",\n      \"geocode\":       {\n        \"latitude\": -74.00893,\n        \"longitude\": 40.739254\n      },\n      \"countryFullname\": \"United States\",\n      \"subdivisions\":       [\n                {\n          \"code\": \"NY\",\n          \"name\": \"New York\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_1\"\n        },\n                {\n          \"code\": \"New York County\",\n          \"name\": \"New York County\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_2\"\n        },\n                {\n          \"code\": \"New York\",\n          \"name\": \"New York\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_3\"\n        },\n                {\n          \"code\": \"US\",\n          \"name\": \"United States\",\n          \"type\": \"COUNTRY\"\n        }\n      ]\n    }\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2022-07-09T20:42:21.981Z\",\n      \"endDate\": \"2022-07-09T22:42:21.981Z\",\n      \"timeZoneId\": \"UTC\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true,\n      \"recurrences\":       {\n        \"occurrences\": [],\n        \"status\": \"ONE_TIME\"\n      }\n    },\n    \"formatted\": \"9 July 2022, 20:42 – 22:42 UTC\",\n    \"startDateFormatted\": \"9 July 2022\",\n    \"startTimeFormatted\": \"20:42\"\n  },\n  \"title\": \"My event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"url\": \"\",\n    \"height\": 2704,\n    \"width\": 1920\n  },\n  \"slug\": \"my-event-20\",\n  \"language\": \"en\",\n  \"created\": \"2021-07-08T20:47:44.469Z\",\n  \"modified\": \"2021-07-08T20:47:44Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"RSVP\",\n    \"status\": \"OPEN_RSVP\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"limit\": 20,\n      \"waitlist\": true\n    }},\n    \"ticketing\":     {\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"ticketLimitPerOrder\": 20\n      },\n      \"soldOut\": true\n    },\n    \"restrictedTo\": \"VISITOR\",\n    \"initialType\": \"RSVP\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20220709T204221Z%2F20220709T224221Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA&details=Thank+you+for+registering+to+our+event%21%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+event+details%3A%0A%0AMy+event%0A9+July+2022%2C+20%3A42+%E2%80%93+22%3A42+UTC%0AWix+Playground%2C+100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/f1c0e8d6-d547-490d-a765-32fabafd3fc3?token=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiZXZlbnRJZFwiOntcInZhbHVlXCI6XCJmMWMwZThkNi1kNTQ3LTQ5MGQtYTc2NS0zMmZhYmFmZDNmYzNcIn0sXCJvY0xpbmtcIjpudWxsfSIsImlhdCI6MTYyNTc3NzI2NH0.U9QkPclIguAJ2cmZCBBgj1R89SLiHz0gbFkpqn4NkBs\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://martynasa.wixsite.com/my-site-20\",\n    \"path\": \"/event-details/my-event-20\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\",\n          \"labels\": []\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      },\n      \"ticketsUnavailable\":       {\n        \"message\": \"Tickets Are Not on Sale\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"ecd95e3f-2307-4544-86cd-c0c6d871f873\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"5f8e2124-5c31-48cd-8464-eaf9c6211054\",\n  \"feed\": {\"token\": \"1eKIZuBkp36Pg6n0VvatFJW5jC--oL4FXpgPhu0qoFQ.CgwI8MidhwYQkOrW8wISJDE0MDYwM2FkLWFmOGQtODRhNS0yYzgwLWEwZjYwY2I0NzM1MRokZjFjMGU4ZDYtZDU0Ny00OTBkLWE3NjUtMzJmYWJhZmQzZmMzIgZldmVudHMqHQoTd2l4LmZlZWQuRmVlZEFjY2VzcxIGCgQABQQDKiwKHndpeC5jb21tZW50cy52MC5Db21tZW50c0FjY2VzcxIKCgEBEgUBBAIDAComCht3aXguY29tbWVudHMuQ29tbWVudHNBY2Nlc3MSBwoBABICAwIqHwodd2l4LnJlYWN0aW9ucy5SZWFjdGlvbnNBY2Nlc3MyKAokNWY4ZTIxMjQtNWMzMS00OGNkLTg0NjQtZWFmOWM2MjExMDU0EAEyKAokNWY4ZTIxMjQtNWMzMS00OGNkLTg0NjQtZWFmOWM2MjExMDU0EAI\"},\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJzdGFydFwiLFwiaW5zdGFuY2VJZFwiOlwiZWNkOTVlM2YtMjMwNy00NTQ0LTg2Y2QtYzBjNmQ4NzFmODczXCIsXCJldmVudElkXCI6XCJmMWMwZThkNi1kNTQ3LTQ5MGQtYTc2NS0zMmZhYmFmZDNmYzNcIn0iLCJpYXQiOjE2MjU3NzcyNjR9.OK4sQJcVWmSUzVmATukaguGr6LDOegN_W_LRUPsOHAk\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJqb2luXCIsXCJpbnN0YW5jZUlkXCI6XCJlY2Q5NWUzZi0yMzA3LTQ1NDQtODZjZC1jMGM2ZDg3MWY4NzNcIixcImV2ZW50SWRcIjpcImYxYzBlOGQ2LWQ1NDctNDkwZC1hNzY1LTMyZmFiYWZkM2ZjM1wifSIsImlhdCI6MTYyNTc3NzI2NH0.fn5c47S6nw5cw6Qiw5MlXOBita_rHdcrazq-SkRUJuo\"\n    },\n    \"providerName\": \"\"\n  },\n  \"assignedContactsLabel\": \"custom.my-event-7-9-22-8-42-pm\",\n  \"agenda\": {\"enabled\": false}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create TBD ticketed event",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v2/events' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"event\": {\n    \"title\": \"My event\",\n    \"description\": \"This event is TBD\",\n    \"location\": {\n      \"name\": \"Location To Be Decided\"\n    },\n    \"scheduleConfig\": {\n      \"scheduleTbd\": true,\n      \"scheduleTbdMessage\": \"Time To Be Decided\",\n      \"timeZoneId\": \"EST\"\n    },\n    \"registrationConfig\": {\n      \"initialType\": \"TICKETS\"\n    }\n  },\n  \"language\": \"en\"\n}\nEOF"],
            "response": ["{\"event\": {\n  \"id\": \"50750dfc-6836-4020-a0a3-ae4fe0c7329f\",\n  \"location\":   {\n    \"name\": \"Location To Be Decided\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": true,\n      \"scheduleTbdMessage\": \"Time To Be Decided\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": false,\n      \"recurrences\":       {\n        \"occurrences\": [],\n        \"status\": \"ONE_TIME\"\n      }\n    },\n    \"formatted\": \"Time To Be Decided\",\n    \"startDateFormatted\": \"\",\n    \"startTimeFormatted\": \"\"\n  },\n  \"title\": \"My event\",\n  \"description\": \"This event is TBD\",\n  \"about\": \"\",\n  \"slug\": \"my-event-15\",\n  \"language\": \"en\",\n  \"created\": \"2021-07-08T20:42:21.981Z\",\n  \"modified\": \"2021-07-08T20:42:22Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"TICKETS\",\n    \"status\": \"CLOSED\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"waitlist\": false\n    }},\n    \"ticketing\":     {\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"ticketLimitPerOrder\": 20\n      },\n      \"soldOut\": true\n    },\n    \"restrictedTo\": \"VISITOR\",\n    \"initialType\": \"TICKETS\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=&location=&details=Thank+you+for+registering+to+our+event%21+Your+tickets+are+attached+to+this+email.+Don%27t+forget+to+bring+them.%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+details%3A%0A%0AMy+event%0ATime+To+Be+Decided%0ALocation+To+Be+Decided\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/50750dfc-6836-4020-a0a3-ae4fe0c7329f?token=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiZXZlbnRJZFwiOntcInZhbHVlXCI6XCI1MDc1MGRmYy02ODM2LTQwMjAtYTBhMy1hZTRmZTBjNzMyOWZcIn0sXCJvY0xpbmtcIjpudWxsfSIsImlhdCI6MTYyNTc3Njk0Mn0.mQpJUORGGOjWsBSwBORA2qIL_RZknhdJNQuyEQuDYyI\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://martynasa.wixsite.com/my-site-20\",\n    \"path\": \"/event-details/my-event-15\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\",\n          \"labels\": []\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      },\n      \"ticketsUnavailable\":       {\n        \"message\": \"Tickets Are Not on Sale\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"ecd95e3f-2307-4544-86cd-c0c6d871f873\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"5f8e2124-5c31-48cd-8464-eaf9c6211054\",\n  \"feed\": {\"token\": \"us4sG8jAZKczMQaHCQSk2746eVMWNa6Tf8_6aia8g6w.CgsIrsadhwYQgJuMdhIkMTQwNjAzYWQtYWY4ZC04NGE1LTJjODAtYTBmNjBjYjQ3MzUxGiQ1MDc1MGRmYy02ODM2LTQwMjAtYTBhMy1hZTRmZTBjNzMyOWYiBmV2ZW50cyodChN3aXguZmVlZC5GZWVkQWNjZXNzEgYKBAAFBAMqLAoed2l4LmNvbW1lbnRzLnYwLkNvbW1lbnRzQWNjZXNzEgoKAQESBQEEAgMAKiYKG3dpeC5jb21tZW50cy5Db21tZW50c0FjY2VzcxIHCgEAEgIDAiofCh13aXgucmVhY3Rpb25zLlJlYWN0aW9uc0FjY2VzczIoCiQ1ZjhlMjEyNC01YzMxLTQ4Y2QtODQ2NC1lYWY5YzYyMTEwNTQQATIoCiQ1ZjhlMjEyNC01YzMxLTQ4Y2QtODQ2NC1lYWY5YzYyMTEwNTQQAg\"},\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJzdGFydFwiLFwiaW5zdGFuY2VJZFwiOlwiZWNkOTVlM2YtMjMwNy00NTQ0LTg2Y2QtYzBjNmQ4NzFmODczXCIsXCJldmVudElkXCI6XCI1MDc1MGRmYy02ODM2LTQwMjAtYTBhMy1hZTRmZTBjNzMyOWZcIn0iLCJpYXQiOjE2MjU3NzY5NDJ9.3CSX-KfLJK_b-wKGHK10IL4IRvcJnz0fpgT3g00U18c\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJqb2luXCIsXCJpbnN0YW5jZUlkXCI6XCJlY2Q5NWUzZi0yMzA3LTQ1NDQtODZjZC1jMGM2ZDg3MWY4NzNcIixcImV2ZW50SWRcIjpcIjUwNzUwZGZjLTY4MzYtNDAyMC1hMGEzLWFlNGZlMGM3MzI5ZlwifSIsImlhdCI6MTYyNTc3Njk0Mn0.klUdRv0GBCVjbrJ4JFaWo3OIoxj9yPSusgtjPoMLGbw\"\n    },\n    \"providerName\": \"\"\n  },\n  \"assignedContactsLabel\": \"custom.my-event-time-to-be-decided\",\n  \"agenda\": {\"enabled\": false}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create draft event",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v2/events' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"event\": {\n    \"title\": \"My event\",\n    \"description\": \"This event is TBD\",\n    \"location\": {\n      \"name\": \"Location To Be Decided\"\n    },\n    \"scheduleConfig\": {\n      \"scheduleTbd\": true,\n      \"scheduleTbdMessage\": \"Time To Be Decided\",\n      \"timeZoneId\": \"EST\"\n    },\n    \"registrationConfig\": {\n      \"initialType\": \"TICKETS\"\n    }\n  },\n  \"language\": \"en\",\n  \"draft\": true\n}\nEOF"],
            "response": ["{\"event\": {\n  \"id\": \"6e56c827-b99f-4314-857e-cb856704994a\",\n  \"location\":   {\n    \"name\": \"Location To Be Decided\",\n    \"type\": \"VENUE\",\n    \"tbd\": true\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": true,\n      \"scheduleTbdMessage\": \"Time To Be Decided\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": false,\n      \"recurrences\":       {\n        \"occurrences\": [],\n        \"status\": \"ONE_TIME\"\n      }\n    },\n    \"formatted\": \"Time To Be Decided\",\n    \"startDateFormatted\": \"\",\n    \"startTimeFormatted\": \"\"\n  },\n  \"title\": \"My event\",\n  \"description\": \"This event is TBD\",\n  \"about\": \"\",\n  \"slug\": \"my-event-3\",\n  \"language\": \"en\",\n  \"created\": \"2021-07-23T06:41:51.022Z\",\n  \"modified\": \"2021-07-23T06:41:51Z\",\n  \"status\": \"DRAFT\",\n  \"registration\":   {\n    \"type\": \"TICKETS\",\n    \"status\": \"CLOSED\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"waitlist\": false\n    }},\n    \"ticketing\":     {\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"ticketLimitPerOrder\": 20\n      },\n      \"soldOut\": true\n    },\n    \"restrictedTo\": \"VISITOR\",\n    \"initialType\": \"TICKETS\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=&location=&details=Thank+you+for+registering+to+our+event%21+Your+tickets+are+attached+to+this+email.+Don%27t+forget+to+bring+them.%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+details%3A%0A%0AMy+event%0ATime+To+Be+Decided%0ALocation+To+Be+Decided\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/6e56c827-b99f-4314-857e-cb856704994a?token=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiZXZlbnRJZFwiOntcInZhbHVlXCI6XCI2ZTU2YzgyNy1iOTlmLTQzMTQtODU3ZS1jYjg1NjcwNDk5NGFcIn0sXCJvY0xpbmtcIjpudWxsfSIsImlhdCI6MTYyNzAyMjUxMX0.hb_GAWAK26_HdW5txjjw_zfCAPmSpRsNuaYU71CorI8\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://martynasa.wixsite.com/sanity-page\",\n    \"path\": \"/events/my-event-3\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\",\n          \"labels\": []\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      },\n      \"ticketsUnavailable\":       {\n        \"message\": \"Tickets Are Not on Sale\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"17bb9a58-c6fe-4b03-83b9-ae8d4f131a38\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"5f8e2124-5c31-48cd-8464-eaf9c6211054\",\n  \"feed\": {\"token\": \"J1HHsGwi2xp6r3umeu-kw9TL-71HBY5ac9cwM4uLcS0.CgwIr8nphwYQuNC9jAESJDE0MDYwM2FkLWFmOGQtODRhNS0yYzgwLWEwZjYwY2I0NzM1MRokNmU1NmM4MjctYjk5Zi00MzE0LTg1N2UtY2I4NTY3MDQ5OTRhIgZldmVudHMqHQoTd2l4LmZlZWQuRmVlZEFjY2VzcxIGCgQABQQDKiwKHndpeC5jb21tZW50cy52MC5Db21tZW50c0FjY2VzcxIKCgEBEgUBBAIDAComCht3aXguY29tbWVudHMuQ29tbWVudHNBY2Nlc3MSBwoBABICAwIqHwodd2l4LnJlYWN0aW9ucy5SZWFjdGlvbnNBY2Nlc3MyKAokNWY4ZTIxMjQtNWMzMS00OGNkLTg0NjQtZWFmOWM2MjExMDU0EAEyKAokNWY4ZTIxMjQtNWMzMS00OGNkLTg0NjQtZWFmOWM2MjExMDU0EAI\"},\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJzdGFydFwiLFwiaW5zdGFuY2VJZFwiOlwiMTdiYjlhNTgtYzZmZS00YjAzLTgzYjktYWU4ZDRmMTMxYTM4XCIsXCJldmVudElkXCI6XCI2ZTU2YzgyNy1iOTlmLTQzMTQtODU3ZS1jYjg1NjcwNDk5NGFcIn0iLCJpYXQiOjE2MjcwMjI1MTF9.d3uvvf4xmNWawDgNVF_-1JdLVJFLu1Ea0JTAqJz-6Lc\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJqb2luXCIsXCJpbnN0YW5jZUlkXCI6XCIxN2JiOWE1OC1jNmZlLTRiMDMtODNiOS1hZThkNGYxMzFhMzhcIixcImV2ZW50SWRcIjpcIjZlNTZjODI3LWI5OWYtNDMxNC04NTdlLWNiODU2NzA0OTk0YVwifSIsImlhdCI6MTYyNzAyMjUxMX0.Gq0ufi5JzFdz7_r5-T-gmbWk3QlBj-MUyitytNicMiA\"\n    },\n    \"providerName\": \"\"\n  },\n  \"assignedContactsLabel\": \"custom.my-event-time-to-be-decided\",\n  \"agenda\": {\"enabled\": false}\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateEventV2Request",
        "rpcResponseName": "CreateEventV2Response",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Create Policy",
      "methodName": "CreatePolicy",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "policy",
        "policy.name",
        "policy.body"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "policy",
          "type": "All APIs.Wix Events._wix_events_policies_PolicyData",
          "doc": " Policy data.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreatePolicy",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_policies_CreatePolicyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a policy for an event.\n Each event can have up to 3 policies.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/policies",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/policies' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n    \"eventId\": \"b16f3b55-78a5-4fff-8098-ddafa0607eea\",\n    \"policy\": {\n        \"name\": \"Terms and conditions\",\n        \"body\": \"Agree to something\"\n    }\n}\nEOF"],
          "response": ["{\"policy\": {\n  \"id\": \"9ece22be-3875-4ab2-8d8e-330417bfc5b0\",\n  \"name\": \"Terms and conditions\",\n  \"body\": \"Agree to something\",\n  \"updatedDate\": \"2020-07-15T09:29:56.592Z\",\n  \"sortIndex\": 3\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreatePolicyRequest",
        "rpcResponseName": "CreatePolicyResponse",
        "artifactId": "com.wixpress.events.events-policy-management-v1-proxy"
      },
      "customLabels": []
    },
        {
      "name": "Create RSVP",
      "methodName": "CreateRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "form",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " RSVP form response.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " RSVP status.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "memberId",
          "type": "string",
          "doc": " Member ID of the RSVP.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "options",
          "type": "All APIs.Wix Events._wix_events_rsvp_ModificationOptions",
          "doc": " Create RSVP options.\n WIX_EVENTS.MANAGE_RSVP permission is required.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "policyAgreementToken",
          "type": "string",
          "doc": " Policy agreement token.  Required when the event has one or more policies.\n Token must match with the token from [GetTokens](https://dev.wix.com/api/rest/wix-events/wix-events/policy/get-tokens) response.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_CreateRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates an RSVP, associated with a contact of the site.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/rsvp",
        "links": [],
        "examples":         [
                    {
            "title": "Create RSVP",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/rsvp' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n\t\"form\": {\n        \"inputValues\": [\n          {\n            \"inputName\": \"firstName\",\n            \"value\": \"John\"\n          },\n          {\n            \"inputName\": \"lastName\",\n            \"value\": \"Doe\"\n          },\n          {\n            \"inputName\": \"email\",\n            \"value\": \"john.doe@example.com\"\n          }\n        ]\n     },\n     \"status\": \"YES\"\n}\nEOF"],
            "response": ["{\n  \"rsvp\":   {\n    \"id\": \"7c9dbf44-359c-47c7-a3e4-02638ab851c4\",\n    \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n    \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n    \"memberId\": \"\",\n    \"created\": \"2020-05-18T15:07:54.461Z\",\n    \"modified\": \"2020-05-18T15:07:54.461Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"rsvpForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ]},\n    \"status\": \"YES\",\n    \"totalGuests\": 1,\n    \"guests\": [    {\n      \"index\": 0,\n      \"fullName\": \"John Doe\",\n      \"id\": 1\n    }],\n    \"anonymized\": false\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=evn&dates=20200601T160000Z/20200601T200000Z&location=\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/fd56076c-38f4-4705-b9eb-ec322b85c745\"\n  }\n} "],
            "type": "curl",
            "extra": {"description": "This example show the minimum required data for RSVP. Applicable if only no additional form fields was added to registration form."}
          },
                    {
            "title": "Create member RSVP",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/rsvp' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n\t\"form\": {\n        \"inputValues\": [\n          {\n            \"inputName\": \"firstName\",\n            \"value\": \"John\"\n          },\n          {\n            \"inputName\": \"lastName\",\n            \"value\": \"Doe\"\n          },\n          {\n            \"inputName\": \"email\",\n            \"value\": \"john.doe@example.com\"\n          }\n        ]\n     },\n     \"status\": \"YES\",\n     \"memberId\": \"5796a227-e625-4a26-88d9-ac5d95b66e43\"\n}\nEOF"],
            "response": ["{\n  \"rsvp\":   {\n    \"id\": \"7c9dbf44-359c-47c7-a3e4-02638ab851c4\",\n    \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n    \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n    \"memberId\": \"5796a227-e625-4a26-88d9-ac5d95b66e43\",\n    \"created\": \"2020-05-18T15:07:54.461Z\",\n    \"modified\": \"2020-05-18T15:07:54.461Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"rsvpForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\"\n      }\n    ]},\n    \"status\": \"YES\",\n    \"totalGuests\": 1,\n    \"guests\": [    {\n      \"index\": 0,\n      \"fullName\": \"John Doe\",\n      \"id\": 1\n    }],\n    \"anonymized\": false\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=evn&dates=20200601T160000Z/20200601T200000Z&location=\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/fd56076c-38f4-4705-b9eb-ec322b85c745\"\n  }\n} "],
            "type": "curl",
            "extra": {"description": "This RSVP is created for an existing site member. Member can have only one RSVP per event."}
          },
                    {
            "title": "Create RSVP with additional guests",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/4262ebd7-bd52-4a40-ab81-60f3210a3486/rsvp' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"form\": {\n    \"inputValues\": [\n      {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n      {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n      {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\"\n      },\n      {\n        \"inputName\": \"additionalGuests\",\n        \"value\": \"1\"\n      },\n      {\n        \"inputName\": \"guestNames\",\n        \"values\": [\n          \"Sue Doe\"\n        ]\n      }\n    ]\n  },\n  \"status\": \"YES\"\n}\nEOF"],
            "response": ["{\n  \"rsvp\":   {\n    \"id\": \"56508371-c6f7-41c1-b3dd-aac01ad00df0\",\n    \"eventId\": \"4262ebd7-bd52-4a40-ab81-60f3210a3486\",\n    \"contactId\": \"9826feca-7b6b-4c10-870a-208001991198\",\n    \"memberId\": \"\",\n    \"created\": \"2020-06-18T13:34:30.271Z\",\n    \"modified\": \"2020-06-18T13:34:30.271Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"rsvpForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"additionalGuests\",\n        \"value\": \"1\"\n      },\n            {\n        \"inputName\": \"guestNames\",\n        \"values\": [\"Sue Doe\"]\n      }\n    ]},\n    \"status\": \"YES\",\n    \"totalGuests\": 2,\n    \"guests\":     [\n            {\n        \"index\": 0,\n        \"fullName\": \"John Doe\",\n        \"id\": 1\n      },\n            {\n        \"index\": 1,\n        \"fullName\": \"Sue Doe\",\n        \"id\": 2\n      }\n    ],\n    \"anonymized\": false\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=&location=\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/4262ebd7-bd52-4a40-ab81-60f3210a3486\"\n  }\n} "],
            "type": "curl",
            "extra": {"description": "The additional guests control has to be added to the registration form."}
          },
                    {
            "title": "Create RSVP with full address input",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/4262ebd7-bd52-4a40-ab81-60f3210a3486/rsvp' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"form\": {\n    \"inputValues\": [\n      {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n      {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n      {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\"\n      },\n      {\n        \"inputName\": \"address\",\n        \"values\": [\n          \"100 Gansevoort St\",\n          \"New York\",\n          \"NY\",\n          \"USA\",\n          \"10014\"\n        ]\n      }\n    ]\n  },\n  \"status\": \"YES\"\n}\nEOF"],
            "response": ["{\n  \"rsvp\":   {\n    \"id\": \"171e70a7-41ef-4836-95e6-d3bba4672000\",\n    \"eventId\": \"4262ebd7-bd52-4a40-ab81-60f3210a3486\",\n    \"contactId\": \"9826feca-7b6b-4c10-870a-208001991198\",\n    \"memberId\": \"\",\n    \"created\": \"2020-06-18T13:45:52.810Z\",\n    \"modified\": \"2020-06-18T13:45:52.810Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"rsvpForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"address\",\n        \"values\":         [\n          \"100 Gansevoort St\",\n          \"New York\",\n          \"NY\",\n          \"USA\",\n          \"10014\"\n        ]\n      }\n    ]},\n    \"status\": \"YES\",\n    \"totalGuests\": 1,\n    \"guests\": [    {\n      \"index\": 0,\n      \"fullName\": \"John Doe\",\n      \"id\": 1\n    }],\n    \"anonymized\": false\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=&location=\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/4262ebd7-bd52-4a40-ab81-60f3210a3486\"\n  }\n} "],
            "type": "curl",
            "extra": {"description": "The full address input mus be added to the form configuration. Address values are sent as an array in following order: street address, city, subdivision (state), country, postal code."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateRsvpRequest",
        "rpcResponseName": "CreateRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Create Reservation",
      "methodName": "CreateReservation",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketQuantities",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketReservationQuantity"]
          },
          "doc": " Tickets to reserve.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "ignoreLimits",
          "type": "boolean",
          "doc": " Whether to ignore the available ticket limits upon reservation.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "allowHiddenTickets",
          "type": "boolean",
          "doc": " Whether to allow reservation for hidden tickets.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateReservation",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_CreateReservationResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Reserves tickets for 20 minutes.\n Reserved tickets are deducted from tickets stock and cannot be bought by another party.\n When the reservation expires, the tickets are added back in the stock.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/reservation",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/reservation' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"ticketQuantities\": [\n                   {\n                     \"ticketDefinitionId\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n                     \"quantity\": 1\n                   },\n                   {\n                     \"ticketDefinitionId\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n                     \"quantity\": 2\n                   }\n                 ]\n               }'"],
          "response": ["{\n  \"id\": \"1fe76e20-efa0-4330-be44-2a8b2ca3c208\",\n  \"expires\": \"2020-05-22T13:12:54.804Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"VIP ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    }\n  ],\n  \"invoice\":   {\n    \"items\":     [\n            {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"quantity\": 1,\n        \"name\": \"Nice ticket\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"total\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"fees\": []\n      },\n            {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"quantity\": 2,\n        \"name\": \"VIP ticket\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"total\":         {\n          \"amount\": 200,\n          \"currency\": \"EUR\"\n        },\n        \"fees\": []\n      }\n    ],\n    \"total\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    },\n    \"subTotal\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    },\n    \"grandTotal\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    },\n    \"fees\": [],\n    \"revenue\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    }\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateReservationRequest",
        "rpcResponseName": "CreateReservationResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Create Ticket Definition",
      "methodName": "CreateTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "definition",
        "definition.name",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "definition",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_CreateTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a ticket definition (and enables ticket sales).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions",
        "links": [],
        "examples":         [
                    {
            "title": "Create paid ticket definition",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"price\": {\n      \"amount\": \"100.00\",\n      \"currency\": \"USD\"\n    },\n    \"name\": \"VIP ticket\",\n    \"description\": \"Includes drinks\",\n    \"limitPerCheckout\": 20,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"orderIndex\": 1,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"wixFeeConfig\": {\n        \"type\": \"FEE_INCLUDED\"\n    }\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94\",\n  \"price\":   {\n    \"amount\": \"100.00\",\n    \"currency\": \"USD\",\n    \"value\": \"100.00\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 10,\n  \"orderIndex\": 3,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"unsold\": 10\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"wixFeeConfig\": {\"type\": \"FEE_INCLUDED\"},\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create ticket definition with custom sale period",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"price\": {\n      \"amount\": \"100.00\",\n      \"currency\": \"USD\"\n    },\n    \"name\": \"VIP ticket\",\n    \"description\": \"Includes drinks\",\n    \"limitPerCheckout\": 20,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"orderIndex\": 1,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"wixFeeConfig\": {\n        \"type\": \"FEE_INCLUDED\"\n    },\n    \"salePeriod\": {\n        \"hideNotOnSale\": true,\n        \"startDate\": \"2021-09-27T14:18:00Z\",\n        \"endDate\": \"2021-12-31T12:00:00Z\"\n    }\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94\",\n  \"price\":   {\n    \"amount\": \"100.00\",\n    \"currency\": \"USD\",\n    \"value\": \"100.00\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 10,\n  \"orderIndex\": 3,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"unsold\": 10\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"wixFeeConfig\": {\"type\": \"FEE_INCLUDED\"},\n  \"salePeriod\":   {\n    \"startDate\": \"2021-09-27T14:18:00Z\",\n    \"endDate\": \"2051-12-31T12:00:00Z\",\n    \"hideNotOnSale\": true\n  },\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateTicketDefinitionRequest",
        "rpcResponseName": "CreateTicketDefinitionResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Delete Category",
      "methodName": "DeleteCategory",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["categoryId"],
      "params": [      {
        "in": "PATH",
        "name": "categoryId",
        "type": "string",
        "doc": "",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_DeleteCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes existing category.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/categories/{categoryId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/categories/6c313b96-1961-4f0f-b6d7-61788e1a25df' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteCategoryRequest",
        "rpcResponseName": "DeleteCategoryResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Delete Control",
      "methodName": "DeleteControl",
      "serviceName": "FormBuilder",
      "tag": "Registration Form",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Unique input control ID.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteControl",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_form_DeleteControlResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes an input control from the draft form.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/form/controls/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/controls/phone' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"form\": {\n  \"controls\":   [\n        {\n      \"type\": \"NAME\",\n      \"system\": true,\n      \"name\": \"name\",\n      \"inputs\":       [\n                {\n          \"name\": \"firstName\",\n          \"array\": false,\n          \"label\": \"First Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        },\n                {\n          \"name\": \"lastName\",\n          \"array\": false,\n          \"label\": \"Last Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }\n      ],\n      \"label\": \"First Name, Last Name\",\n      \"orderIndex\": 0,\n      \"id\": \"name\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": true,\n      \"name\": \"email\",\n      \"inputs\": [      {\n        \"name\": \"email\",\n        \"array\": false,\n        \"label\": \"Email\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": true,\n        \"maxLength\": 50,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Email\",\n      \"orderIndex\": 1,\n      \"id\": \"email\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": false,\n      \"name\": \"phone-1a4acde6c958ff66\",\n      \"inputs\": [      {\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"array\": false,\n        \"label\": \"Work phone (line)\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": false,\n        \"maxLength\": 25,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Work phone (line)\",\n      \"orderIndex\": 2,\n      \"id\": \"phone-1a4acde6c958ff66\"\n    }\n  ],\n  \"messages\":   {\n    \"rsvp\":     {\n      \"rsvpYesOption\": \"I'm Going\",\n      \"rsvpNoOption\": \"Not Going\",\n      \"positiveMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Thank you! See you soon.\",\n          \"message\": \"An email with all the event info was sent to you.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"waitlistMessages\":       {\n        \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n        \"confirmation\":         {\n          \"title\": \"Thanks! You've been added to the waitlist.\",\n          \"message\": \"We'll update you if additional spots become available.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"negativeMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Sorry You Can't Make It\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"submitActionLabel\": \"SUBMIT\"\n    },\n    \"checkout\":     {\n      \"title\": \"Add Your Details\",\n      \"submitActionLabel\": \"Continue\"\n    },\n    \"registrationClosed\":     {\n      \"message\": \"Registration is Closed\",\n      \"exploreEventsActionLabel\": \"See other events\"\n    }\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteControlRequest",
        "rpcResponseName": "DeleteControlResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Delete Event",
      "methodName": "DeleteEvent",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DeleteEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_DeleteEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes an event.\n Deleted events are not returned via API. The only way to retrieve them is via GDPR access request.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/1551a333-06bf-4aa7-92b0-58a1ef413b9c' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\"} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteEventRequest",
        "rpcResponseName": "DeleteEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Delete Policy",
      "methodName": "DeletePolicy",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "policyId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "policyId",
          "type": "string",
          "doc": " Policy ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeletePolicy",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_policies_DeletePolicyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a policy.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/policies/{policyId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/policies/0ace566b-ab83-4f7f-ae24-f401d94e81a4' \\\n-H 'Authorization: <AUTH TOKEN>' \\"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeletePolicyRequest",
        "rpcResponseName": "DeletePolicyResponse",
        "artifactId": "com.wixpress.events.events-policy-management-v1-proxy"
      },
      "customLabels": []
    },
        {
      "name": "Delete RSVP",
      "methodName": "DeleteRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Manage Guest List",
        "description": "Request permission to read, create and change event tickets, guest lists and RSVPs."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "rsvps",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " RSVPs to delete. When not returned, all RSVPs associated with this event are deleted.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_DeleteRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes an RSVP.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/rsvp",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/rsvp?rsvps=7c9dbf44-359c-47c7-a3e4-02638ab851c4' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteRsvpRequest",
        "rpcResponseName": "DeleteRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Delete RSVP Check-in",
      "methodName": "DeleteRsvpCheckIn",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "rsvpId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID to delete check-in.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "guestId",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " Guest IDs to delete check-in.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteRsvpCheckIn",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_DeleteRsvpCheckInResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes an RSVP check-in.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/rsvp/check-in",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/rsvp/check-in?eventId=fd56076c-38f4-4705-b9eb-ec322b85c745&rsvpId=7c9dbf44-359c-47c7-a3e4-02638ab851c4&guestId=1' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"rsvp\": {\n  \"id\": \"7c9dbf44-359c-47c7-a3e4-02638ab851c4\",\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n  \"memberId\": \"\",\n  \"created\": \"2020-05-18T15:07:54Z\",\n  \"modified\": \"2020-05-18T16:01:40.012Z\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"status\": \"WAITING\",\n  \"totalGuests\": 1,\n  \"guests\": [  {\n    \"index\": 0,\n    \"fullName\": \"John Doe\",\n    \"id\": 1\n  }],\n  \"anonymized\": false\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteRsvpCheckInRequest",
        "rpcResponseName": "DeleteRsvpCheckInResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Schedule Item",
      "methodName": "DeleteScheduleItem",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "itemIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Schedule items to delete.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteScheduleItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_DeleteScheduleItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes schedule item from draft schedule.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/schedule/draft/items",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/agenda/draft/80a28db1-672b-45db-a62c-5315ee07ae22' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteScheduleItemRequest",
        "rpcResponseName": "DeleteScheduleItemResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Delete Schedule Item Bookmark",
      "methodName": "DeleteBookmark",
      "serviceName": "BookmarkManagement",
      "tag": "Schedule Bookmarks",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "itemId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteBookmark",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_DeleteBookmarkResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Removes schedule item bookmark from current member.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/schedule/{itemId}/bookmark",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/agenda/80a28db1-672b-45db-a62c-5315ee07ae22/bookmark' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteBookmarkRequest",
        "rpcResponseName": "DeleteBookmarkResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Delete Ticket Definition",
      "methodName": "DeleteTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "delete",
          "type": "All APIs.Wix Events._wix_events_ticketing_DeleteTicketDefinitionRequest_delete",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_DeleteTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a ticket definition. (Does not affect tickets that were already ordered).\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions?all=true' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteTicketDefinitionRequest",
        "rpcResponseName": "DeleteTicketDefinitionResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Delete Tickets Check-in",
      "methodName": "DeleteTicketCheckIn",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to to delete check-in.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteTicketCheckIn",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_DeleteTicketCheckInResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes check-in for 1 or more tickets.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/tickets/check-in",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/tickets/check-in?eventId=ad18d12e-a6a9-4c17-abfa-6ff119479be2&ticketNumber=FNVL-NIJT-WP021&ticketNumber=FNVL-O7MZ-0Q021' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"tickets\": [\n    {\n    \"ticketNumber\": \"FNVL-NIJT-WP021\",\n    \"orderNumber\": \"FNVL-NIJT-WP\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"12.34\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"John Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  },\n    {\n    \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n    \"orderNumber\": \"FNVL-O7MZ-0Q\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"11.11\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"orderStatus\": \"OFFLINE_PENDING\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"Jane Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Doe\",\n      \"email\": \"jane.doe@example.com\",\n      \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteTicketCheckInRequest",
        "rpcResponseName": "DeleteTicketCheckInResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Discard Draft",
      "methodName": "DiscardDraft",
      "serviceName": "FormBuilder",
      "tag": "Registration Form",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "PATH",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DiscardDraft",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_form_DiscardDraftResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Clears all changes to the draft form.\n (Does not affect the published form.)\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/form",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DiscardDraftRequest",
        "rpcResponseName": "DiscardDraftResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Discard Draft Schedule",
      "methodName": "DiscardDraft",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "BODY",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DiscardDraft",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_DiscardDraftResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Clears all changes to the draft schedule.\n (Does not affect the published schedule.)\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/schedule/draft",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/agenda/draft' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DiscardDraftRequest",
        "rpcResponseName": "DiscardDraftResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Find Event",
      "methodName": "FindEvent",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["findBy"],
      "params":       [
                {
          "in": "QUERY",
          "name": "findBy",
          "type": "All APIs.Wix Events._wix_events_FindEventRequest_FindBy",
          "doc": "",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "FindEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_FindEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Finds an event by ID or URL slug. In contrast to Get Event endpoint which returns not found error,\n Find Event returns empty response when an event is not found.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/event/find",
        "links": [],
        "examples":         [
                    {
            "title": "Find event by event ID",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event/find?id=1551a333-06bf-4aa7-92b0-58a1ef413b9c&fieldset=DETAILS&fieldset=TEXTS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"073006f0-0799-459a-b2d4-8006f1eff512\",\n  \"location\":   {\n    \"name\": \"New York\",\n    \"coordinates\":     {\n      \"lat\": 40.73926,\n      \"lng\": -74.00946\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\",\n    \"fullAddress\":     {\n      \"country\": \"US\",\n      \"subdivision\": \"NY\",\n      \"city\": \"New York\",\n      \"postalCode\": \"10014\",\n      \"streetAddress\":       {\n        \"number\": \"100\",\n        \"name\": \"Gansevoort Street\",\n        \"apt\": \"\"\n      },\n      \"formattedAddress\": \"100 Gansevoort St, New York, NY 10014, USA\",\n      \"geocode\":       {\n        \"latitude\": 40.73926,\n        \"longitude\": -74.00946\n      },\n      \"countryFullname\": \"United States\",\n      \"subdivisions\":       [\n                {\n          \"code\": \"NY\",\n          \"name\": \"New York\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_1\"\n        },\n                {\n          \"code\": \"New York County\",\n          \"name\": \"New York County\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_2\"\n        },\n                {\n          \"code\": \"New York\",\n          \"name\": \"New York\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_3\"\n        },\n                {\n          \"code\": \"US\",\n          \"name\": \"United States\",\n          \"type\": \"COUNTRY\"\n        }\n      ]\n    },\n    \"tbd\": false\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2022-08-25T17:00:00Z\",\n      \"endDate\": \"2022-08-25T21:00:00Z\",\n      \"timeZoneId\": \"Europe/Dublin\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": false,\n      \"recurrences\":       {\n        \"occurrences\": [],\n        \"status\": \"ONE_TIME\"\n      }\n    },\n    \"formatted\": \"25 August 2022, 18:00–22:00\",\n    \"startDateFormatted\": \"25 August 2022\",\n    \"startTimeFormatted\": \"18:00\"\n  },\n  \"title\": \"My Event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"slug\": \"my-event\",\n  \"language\": \"en\",\n  \"created\": \"2021-09-14T11:40:18.738Z\",\n  \"modified\": \"2021-09-14T11:42:15Z\",\n  \"status\": \"SCHEDULED\",\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+Event&dates=20220825T170000Z%2F20220825T210000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA&details=Thank+you+for+registering+to+our+event%21%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+event+details%3A%0A%0AMy+Event%0A25+August+2022%2C+18%3A00%E2%80%9322%3A00%0ANew+York%2C+100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/073006f0-0799-459a-b2d4-8006f1eff512\"\n  },\n  \"instanceId\": \"91a30747-d5d9-4365-ac3e-050c26e6aed2\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"05cffc33-b0b3-41e7-9d52-7f9b25ab5b20\",\n  \"onlineConferencing\": {\"providerName\": \"\"},\n  \"assignedContactsLabel\": \"custom.a-very-cool-event-8-25-22-6-00-pm\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Find event by event slug",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event/find?slug=my-event&fieldset=DETAILS&fieldset=TEXTS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"073006f0-0799-459a-b2d4-8006f1eff512\",\n  \"location\":   {\n    \"name\": \"New York\",\n    \"coordinates\":     {\n      \"lat\": 40.73926,\n      \"lng\": -74.00946\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\",\n    \"fullAddress\":     {\n      \"country\": \"US\",\n      \"subdivision\": \"NY\",\n      \"city\": \"New York\",\n      \"postalCode\": \"10014\",\n      \"streetAddress\":       {\n        \"number\": \"100\",\n        \"name\": \"Gansevoort Street\",\n        \"apt\": \"\"\n      },\n      \"formattedAddress\": \"100 Gansevoort St, New York, NY 10014, USA\",\n      \"geocode\":       {\n        \"latitude\": 40.73926,\n        \"longitude\": -74.00946\n      },\n      \"countryFullname\": \"United States\",\n      \"subdivisions\":       [\n                {\n          \"code\": \"NY\",\n          \"name\": \"New York\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_1\"\n        },\n                {\n          \"code\": \"New York County\",\n          \"name\": \"New York County\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_2\"\n        },\n                {\n          \"code\": \"New York\",\n          \"name\": \"New York\",\n          \"type\": \"ADMINISTRATIVE_AREA_LEVEL_3\"\n        },\n                {\n          \"code\": \"US\",\n          \"name\": \"United States\",\n          \"type\": \"COUNTRY\"\n        }\n      ]\n    },\n    \"tbd\": false\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2022-08-25T17:00:00Z\",\n      \"endDate\": \"2022-08-25T21:00:00Z\",\n      \"timeZoneId\": \"Europe/Dublin\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": false,\n      \"recurrences\":       {\n        \"occurrences\": [],\n        \"status\": \"ONE_TIME\"\n      }\n    },\n    \"formatted\": \"25 August 2022, 18:00–22:00\",\n    \"startDateFormatted\": \"25 August 2022\",\n    \"startTimeFormatted\": \"18:00\"\n  },\n  \"title\": \"My Event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"slug\": \"my-event\",\n  \"language\": \"en\",\n  \"created\": \"2021-09-14T11:40:18.738Z\",\n  \"modified\": \"2021-09-14T11:42:15Z\",\n  \"status\": \"SCHEDULED\",\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+Event&dates=20220825T170000Z%2F20220825T210000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA&details=Thank+you+for+registering+to+our+event%21%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+event+details%3A%0A%0AMy+Event%0A25+August+2022%2C+18%3A00%E2%80%9322%3A00%0ANew+York%2C+100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/073006f0-0799-459a-b2d4-8006f1eff512\"\n  },\n  \"instanceId\": \"91a30747-d5d9-4365-ac3e-050c26e6aed2\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"05cffc33-b0b3-41e7-9d52-7f9b25ab5b20\",\n  \"onlineConferencing\": {\"providerName\": \"\"},\n  \"assignedContactsLabel\": \"custom.a-very-cool-event-8-25-22-6-00-pm\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Find event by non-existing slug",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event/find?slug=non-existing' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "FindEventRequest",
        "rpcResponseName": "FindEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Checkout Options",
      "methodName": "GetCheckoutOptions",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "GetCheckoutOptions",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_GetCheckoutOptionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns checkout meta data used in checkout UX.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/checkout/options",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/checkout/options' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"paymentMethodConfigured\": true,\n  \"acceptCoupons\": true,\n  \"premiumServices\": true,\n  \"paidTickets\": true\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCheckoutOptionsRequest",
        "rpcResponseName": "GetCheckoutOptionsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Event",
      "methodName": "GetEvent",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["getBy"],
      "params":       [
                {
          "in": "QUERY",
          "name": "getBy",
          "type": "All APIs.Wix Events._wix_events_GetEventRequest_GetBy",
          "doc": "",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_GetEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an event by ID or URL slug.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/event",
        "links": [],
        "examples":         [
                    {
            "title": "Get event by event ID",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event?id=1551a333-06bf-4aa7-92b0-58a1ef413b9c&fieldset=TEXTS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"title\": \"My event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"slug\": \"my-event-123\",\n  \"location\":   {\n    \"name\": \"Wix Playground\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2020-05-16T07:00:00Z\",\n      \"endDate\": \"2020-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2020\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"language\": \"en\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-15T14:56:01Z\",\n  \"status\": \"SCHEDULED\",\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20200516T070000Z/20200516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n  },\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get event by event slug",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event?slug=my-event-123&fieldset=DETAILS&fieldset=TEXTS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"title\": \"My event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"slug\": \"my-event-123\",\n  \"location\":   {\n    \"name\": \"Wix Playground\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2020-05-16T07:00:00Z\",\n      \"endDate\": \"2020-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2020\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"language\": \"en\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-15T14:56:01Z\",\n  \"status\": \"SCHEDULED\",\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20200516T070000Z/20200516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n  },\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get event with full fieldset",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event?id=5a1d5ed9-1c13-4f85-b19b-999a9e86a81c&fieldset=DETAILS&fieldset=TEXTS&fieldset=REGISTRATION&fieldset=URLS&fieldset=FORM&fieldset=DASHBOARD&fieldset=FEED&fieldset=ONLINE_CONFERENCING_SESSION' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"5a1d5ed9-1c13-4f85-b19b-999a9e86a81c\",\n  \"location\":   {\n    \"name\": \"Wix Playground (2nd floor)\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2020-07-07T07:00:00Z\",\n      \"endDate\": \"2020-07-07T11:00:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"July 7, 2020, 7:00 AM – 11:00 AM GMT\",\n    \"startDateFormatted\": \"July 7, 2020\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"title\": \"My event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"slug\": \"my-event-6\",\n  \"language\": \"en\",\n  \"created\": \"2020-06-23T11:45:50.445Z\",\n  \"modified\": \"2020-06-23T11:46:08Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"TICKETS\",\n    \"status\": \"OPEN_TICKETS\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"waitlist\": false\n    }},\n    \"ticketing\":     {\n      \"lowestPrice\": \"$12.34\",\n      \"highestPrice\": \"$12.34\",\n      \"currency\": \"USD\",\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"taxConfig\":         {\n          \"type\": \"INCLUDED\",\n          \"name\": \"TAX\",\n          \"rate\": \"21\"\n        }\n      },\n      \"lowestTicketPrice\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      },\n      \"highestTicketPrice\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      }\n    },\n    \"restrictedTo\": \"VISITOR\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20200707T070000Z/20200707T110000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/5a1d5ed9-1c13-4f85-b19b-999a9e86a81c\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://johndoe.wixsite.com/mysite-123\",\n    \"path\": \"/events/my-event-6\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": false,\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"inputs\": [        {\n          \"name\": \"phone-1a4acde6c958ff66\",\n          \"array\": false,\n          \"label\": \"Work phone (line)\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": false,\n          \"maxLength\": 25,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Work phone (line)\",\n        \"orderIndex\": 2,\n        \"id\": \"phone-1a4acde6c958ff66\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I will attend\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you!\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Proceed\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Check our news page for updates.\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 2,\n      \"currencyLocked\": false,\n      \"orders\": 1\n    }\n  },\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"feed\": {\"token\": \"<FEED TOKEN>\"},\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=<TOKEN>\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=<TOKEN>\"\n    },\n    \"providerName\": \"\"\n  }\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetEventRequest",
        "rpcResponseName": "GetEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Event (Additional Binding 1)",
      "methodName": "GetEvent",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "getBy",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "getBy",
          "type": "All APIs.Wix Events._wix_events_GetEventRequest_GetBy",
          "doc": "",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_GetEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an event by ID or URL slug.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{id}",
        "links": [],
        "examples":         [
                    {
            "title": "Get event by event ID",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event?id=1551a333-06bf-4aa7-92b0-58a1ef413b9c&fieldset=TEXTS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"title\": \"My event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"slug\": \"my-event-123\",\n  \"location\":   {\n    \"name\": \"Wix Playground\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2020-05-16T07:00:00Z\",\n      \"endDate\": \"2020-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2020\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"language\": \"en\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-15T14:56:01Z\",\n  \"status\": \"SCHEDULED\",\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20200516T070000Z/20200516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n  },\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get event by event slug",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event?slug=my-event-123&fieldset=DETAILS&fieldset=TEXTS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"title\": \"My event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"slug\": \"my-event-123\",\n  \"location\":   {\n    \"name\": \"Wix Playground\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2020-05-16T07:00:00Z\",\n      \"endDate\": \"2020-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2020\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"language\": \"en\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-15T14:56:01Z\",\n  \"status\": \"SCHEDULED\",\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20200516T070000Z/20200516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n  },\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Get event with full fieldset",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/event?id=5a1d5ed9-1c13-4f85-b19b-999a9e86a81c&fieldset=DETAILS&fieldset=TEXTS&fieldset=REGISTRATION&fieldset=URLS&fieldset=FORM&fieldset=DASHBOARD&fieldset=FEED&fieldset=ONLINE_CONFERENCING_SESSION' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\"event\": {\n  \"id\": \"5a1d5ed9-1c13-4f85-b19b-999a9e86a81c\",\n  \"location\":   {\n    \"name\": \"Wix Playground (2nd floor)\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2020-07-07T07:00:00Z\",\n      \"endDate\": \"2020-07-07T11:00:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"July 7, 2020, 7:00 AM – 11:00 AM GMT\",\n    \"startDateFormatted\": \"July 7, 2020\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"title\": \"My event\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"slug\": \"my-event-6\",\n  \"language\": \"en\",\n  \"created\": \"2020-06-23T11:45:50.445Z\",\n  \"modified\": \"2020-06-23T11:46:08Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"TICKETS\",\n    \"status\": \"OPEN_TICKETS\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"waitlist\": false\n    }},\n    \"ticketing\":     {\n      \"lowestPrice\": \"$12.34\",\n      \"highestPrice\": \"$12.34\",\n      \"currency\": \"USD\",\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"taxConfig\":         {\n          \"type\": \"INCLUDED\",\n          \"name\": \"TAX\",\n          \"rate\": \"21\"\n        }\n      },\n      \"lowestTicketPrice\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      },\n      \"highestTicketPrice\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      }\n    },\n    \"restrictedTo\": \"VISITOR\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20200707T070000Z/20200707T110000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/5a1d5ed9-1c13-4f85-b19b-999a9e86a81c\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://johndoe.wixsite.com/mysite-123\",\n    \"path\": \"/events/my-event-6\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": false,\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"inputs\": [        {\n          \"name\": \"phone-1a4acde6c958ff66\",\n          \"array\": false,\n          \"label\": \"Work phone (line)\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": false,\n          \"maxLength\": 25,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Work phone (line)\",\n        \"orderIndex\": 2,\n        \"id\": \"phone-1a4acde6c958ff66\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I will attend\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you!\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Proceed\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Check our news page for updates.\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 2,\n      \"currencyLocked\": false,\n      \"orders\": 1\n    }\n  },\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"feed\": {\"token\": \"<FEED TOKEN>\"},\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=<TOKEN>\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=<TOKEN>\"\n    },\n    \"providerName\": \"\"\n  }\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetEventRequest",
        "rpcResponseName": "GetEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Form",
      "methodName": "GetForm",
      "serviceName": "FormBuilder",
      "tag": "Registration Form",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "PATH",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetForm",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_form_GetFormResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an event registration form (both the draft and published versions).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/form",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"draftForm\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": false,\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"inputs\": [        {\n          \"name\": \"phone-1a4acde6c958ff66\",\n          \"array\": false,\n          \"label\": \"Work phone (line)\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": false,\n          \"maxLength\": 25,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Work phone (line)\",\n        \"orderIndex\": 2,\n        \"id\": \"phone-1a4acde6c958ff66\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetFormRequest",
        "rpcResponseName": "GetFormResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Invoice",
      "methodName": "GetInvoice",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Read Basic Events Order Info",
          "description": "Request permission to read basic order info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "reservationId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "withDiscount",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountRequest",
          "doc": " Optional discount to be applied on the returned invoice.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "paidPlanBenefit",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Optional benefit granted by the pricing plan to be applied on the returned invoice.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetInvoice",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_GetInvoiceResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Generates a preview of a reservation invoice, including the given coupon or pricing plan.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/reservation/{reservationId}/invoice",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/reservation/1fe76e20-efa0-4330-be44-2a8b2ca3c208/invoice' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"withDiscount\": {\n                   \"couponCode\": \"<coupon_code>\"\n                 }\n               }'"],
          "response": ["{\"invoice\": {\n  \"items\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"quantity\": 1,\n      \"name\": \"Nice ticket\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"total\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": []\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"quantity\": 2,\n      \"name\": \"VIP ticket\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"total\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"190.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"fees\": []\n    }\n  ],\n  \"total\":   {\n    \"amount\": \"200.00\",\n    \"currency\": \"EUR\"\n  },\n  \"discount\":   {\n    \"amount\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"afterDiscount\":     {\n      \"amount\": \"190.00\",\n      \"currency\": \"EUR\"\n    },\n    \"code\": \"SUMMER\",\n    \"name\": \"SUMMER\",\n    \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n    \"discounts\": [    {\n      \"amount\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"coupon\":       {\n        \"name\": \"SUMMER\",\n        \"code\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n      }\n    }]\n  },\n  \"subTotal\":   {\n    \"amount\": \"200.00\",\n    \"currency\": \"EUR\"\n  },\n  \"grandTotal\":   {\n    \"amount\": \"190.00\",\n    \"currency\": \"EUR\"\n  },\n  \"fees\": [],\n  \"revenue\":   {\n    \"amount\": \"190.00\",\n    \"currency\": \"EUR\"\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetInvoiceRequest",
        "rpcResponseName": "GetInvoiceResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Order",
      "methodName": "GetOrder",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "orderNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_GetOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "  Retrieves an order, including ticket data.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders/{orderNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders/FM9X-EHKF-ZO?fieldset=DETAILS&fieldset=FORM&fieldset=TICKETS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n    \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n    \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n    \"memberId\": \"\",\n    \"created\": \"2020-04-07T06:42:35.381Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@somedomain.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@somedomain.com\"\n      }\n    ]},\n    \"confirmed\": true,\n    \"status\": \"PAID\",\n    \"method\": \"payPal\",\n    \"ticketsQuantity\": 1,\n    \"totalPrice\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [    {\n      \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n      \"orderNumber\": \"FM9X-EHKF-ZO\",\n      \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n      \"name\": \"VIP enterance\",\n      \"price\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestFullName\": \"Sarah Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": true,\n        \"firstName\": \"Sarah\",\n        \"lastName\": \"Doe\",\n        \"email\": \"sarah.doe@somedomain.com\",\n        \"form\": {\"inputValues\":         [\n                    {\n            \"inputName\": \"email\",\n            \"value\": \"sarah.doe@somedomain.com\"\n          },\n                    {\n            \"inputName\": \"lastName\",\n            \"value\": \"Doe\"\n          },\n                    {\n            \"inputName\": \"firstName\",\n            \"value\": \"Sarah\"\n          }\n        ]},\n        \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n      },\n      \"archived\": false,\n      \"ticketPdfUrl\": \"<url_to_pdf>\",\n      \"anonymized\": false\n    }],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"<add_to_google_calendar_url>\",\n    \"ics\": \"<ics_url>\"\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetOrderRequest",
        "rpcResponseName": "GetOrderResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get RSVP",
      "methodName": "GetRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "rsvpId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_rsvp-fieldset).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_GetRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves an RSVP.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/rsvp/{rsvpId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/rsvp/fb97100a-98e2-4579-a61c-e71a3501b085?fieldset=FORM&fieldset=DETAILS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"rsvp\": {\n  \"id\": \"fb97100a-98e2-4579-a61c-e71a3501b085\",\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n  \"memberId\": \"\",\n  \"created\": \"2020-05-18T10:56:56Z\",\n  \"modified\": \"2020-05-18T10:56:56Z\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"rsvpForm\": {\"inputValues\":   [\n        {\n      \"inputName\": \"firstName\",\n      \"value\": \"John\"\n    },\n        {\n      \"inputName\": \"lastName\",\n      \"value\": \"Doe\"\n    },\n        {\n      \"inputName\": \"email\",\n      \"value\": \"john.doe@example.com\"\n    }\n  ]},\n  \"status\": \"YES\",\n  \"totalGuests\": 1,\n  \"guests\": [  {\n    \"index\": 0,\n    \"fullName\": \"John Doe\",\n    \"id\": 1\n  }],\n  \"anonymized\": false\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetRsvpRequest",
        "rpcResponseName": "GetRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Schedule Item",
      "methodName": "GetScheduleItem",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["itemId"],
      "params":       [
                {
          "in": "PATH",
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "includeDraft",
          "type": "boolean",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetScheduleItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_GetScheduleItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves schedule item by ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/schedule/{itemId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/agenda/80a28db1-672b-45db-a62c-5315ee07ae22' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetScheduleItemRequest",
        "rpcResponseName": "GetScheduleItemResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Get Summary",
      "methodName": "GetSummary",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "QUERY",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "GetSummary",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_GetSummaryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a summary of total ticket sales.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/orders/summary",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://api.wix.com/events/v1/orders/summary?eventId=619d52c0-c93b-4155-a55c-108048f20b3f' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"sales\": [{\n  \"total\":   {\n    \"amount\": \"14.00\",\n    \"currency\": \"EUR\"\n  },\n  \"totalOrders\": 4,\n  \"totalTickets\": 8,\n  \"revenue\":   {\n    \"amount\": \"14.00\",\n    \"currency\": \"EUR\"\n  }\n}]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetSummaryRequest",
        "rpcResponseName": "GetSummaryResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Ticket",
      "methodName": "GetTicket",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "ticketNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTicket",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_GetTicketResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a ticket by unique ticket number.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/{ticketNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets/FNVL-NIJT-WP021?fieldset=GUEST_DETAILS&fieldset=TICKET_DETAILS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"ticket\": {\n  \"ticketNumber\": \"FNVL-NIJT-WP021\",\n  \"orderNumber\": \"FNVL-NIJT-WP\",\n  \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n  \"name\": \"Early Bird\",\n  \"price\":   {\n    \"amount\": \"12.34\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n  \"orderStatus\": \"PAID\",\n  \"orderArchived\": false,\n  \"orderFullName\": \"John Doe\",\n  \"guestDetails\":   {\n    \"guestAssigned\": false,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n  },\n  \"archived\": false,\n  \"anonymized\": false,\n  \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTicketRequest",
        "rpcResponseName": "GetTicketResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Ticket Definition",
      "methodName": "GetTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["definitionId"],
      "params":       [
                {
          "in": "PATH",
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_GetTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a ticket definition.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets/definitions/{definitionId}",
        "links": [],
        "examples": [        {
          "title": "Get single ticket definition",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/tickets/definitions/d092fd27-35e9-433e-838c-7980708981a0?fieldset=POLICY&fieldset=DASHBOARD' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\"definition\": {\n  \"id\": \"d092fd27-35e9-433e-838c-7980708981a0\",\n  \"price\":   {\n    \"amount\": \"100.00\",\n    \"currency\": \"USD\",\n    \"value\": \"100.00\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 1,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": true,\n    \"quantity\": 100,\n    \"unsold\": 100\n  },\n  \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n  \"salePeriod\":   {\n    \"startDate\": \"2029-01-01T09:51:00Z\",\n    \"endDate\": \"2030-09-27T09:55:00Z\",\n    \"hideNotOnSale\": true\n  },\n  \"saleStatus\": \"SALE_SCHEDULED\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTicketDefinitionRequest",
        "rpcResponseName": "GetTicketDefinitionResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Get Tokens",
      "methodName": "GetTokens",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "tokensFieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_policies_TokensFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_token-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "policyFieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_policies_PolicyFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_policy-fieldset).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTokens",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_policies_GetTokensResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves policy agreement tokens for the given event IDs, including a list of policies if POLICIES fieldset is provided.\n Tokens are hashes generated from all an event's policies, and must be passed during checkout and RSVP registration in order to validate approval of the event's policies.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/policies/tokens",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/policies/tokens?tokensFieldset=POLICIES&policyFieldset=BODY&eventId=54bb06d8-467b-4c57-831f-cb3c04874044' \\\n-H 'Authorization: <AUTH TOKEN>' \\"],
          "response": ["{\n  \"tokens\": {\"54bb06d8-467b-4c57-831f-cb3c04874044\": \"6398f1ce06c6581fb6df54067277b145\"},\n  \"policies\":   [\n        {\n      \"id\": \"49365385-d154-493a-9518-3b355495f08e\",\n      \"name\": \"Policy 1\",\n      \"body\": \"<p>Event policy text<\\/p>\",\n      \"updatedDate\": \"2020-07-23T08:43:08.061Z\",\n      \"sortIndex\": 1,\n      \"eventId\": \"54bb06d8-467b-4c57-831f-cb3c04874044\"\n    },\n        {\n      \"id\": \"91c95b4f-e1a1-4434-b92d-1bfc6d0d62c6\",\n      \"name\": \"Policy 2\",\n      \"body\": \"<p>Event policy text<\\/p>\",\n      \"updatedDate\": \"2020-07-28T17:13:26.500Z\",\n      \"sortIndex\": 2,\n      \"eventId\": \"54bb06d8-467b-4c57-831f-cb3c04874044\"\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTokensRequest",
        "rpcResponseName": "GetTokensResponse",
        "artifactId": "com.wixpress.events.events-policy-management-v1-proxy"
      },
      "customLabels": []
    },
        {
      "name": "List Available Tickets",
      "methodName": "ListAvailableTickets",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID. If not provided, available tickets for all events in the site will be returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionStateEnum_State"]
          },
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListAvailableTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListAvailableTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns tickets available to reserve.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets/available",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/tickets/available?limit=100&eventId=fd56076c-38f4-4705-b9eb-ec322b85c745&order=orderIndex:asc' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  },\n  \"definitions\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListAvailableTicketsRequest",
        "rpcResponseName": "ListAvailableTicketsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List Event Categories",
      "methodName": "ListEventCategories",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "PATH",
        "name": "eventId",
        "type": "string",
        "doc": "",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "ListEventCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_ListEventCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Lists visible event categories.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/categories/{eventId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/categories/e8e784a9-8f2b-47ed-9c42-238c0922da7e' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"categories\": [\n    {\n    \"id\": \"0101ca01-aa44-44fb-9cfe-fe9492af9e14\",\n    \"name\": \"7\",\n    \"createdDate\": \"2021-03-25T10:16:55.886Z\"\n  },\n    {\n    \"id\": \"025b69ec-38be-415e-a9b3-30b9a4478238\",\n    \"name\": \"2\",\n    \"createdDate\": \"2021-03-25T10:16:52.951Z\"\n  },\n    {\n    \"id\": \"027ac25d-cc64-4eb1-8666-4ea53cf7f134\",\n    \"name\": \"2\",\n    \"createdDate\": \"2021-03-25T10:16:57.486Z\"\n  },\n    {\n    \"id\": \"03268763-286b-4320-86e9-21a6c4fdd481\",\n    \"name\": \"7\",\n    \"createdDate\": \"2021-03-25T10:16:52.951Z\"\n  },\n    {\n    \"id\": \"06829518-6726-4a01-8d5c-ea7658c48ca9\",\n    \"name\": \"2\",\n    \"createdDate\": \"2021-03-25T10:16:46.998Z\"\n  },\n    {\n    \"id\": \"07d0626b-7c02-4aff-a3cc-5299ea322ff9\",\n    \"name\": \"3\",\n    \"createdDate\": \"2021-03-25T10:17:01.799Z\"\n  },\n    {\n    \"id\": \"106172c1-ce50-4b88-83a2-c8e6088eed00\",\n    \"name\": \"cool events\",\n    \"createdDate\": \"2021-03-25T10:21:01.066Z\"\n  },\n    {\n    \"id\": \"180f8f96-be1d-4906-83bf-92c4507ed1ab\",\n    \"name\": \"1\",\n    \"createdDate\": \"2021-03-25T10:16:55.886Z\"\n  },\n    {\n    \"id\": \"34bd2d0e-2d2f-4d7c-912e-80a785177bc4\",\n    \"name\": \"4\",\n    \"createdDate\": \"2021-03-25T10:16:54.327Z\"\n  },\n    {\n    \"id\": \"ce10e20d-06ad-485a-8339-56861932b0b4\",\n    \"name\": \"very nice )\",\n    \"createdDate\": \"2021-03-12T07:28:24.472Z\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListEventCategoriesRequest",
        "rpcResponseName": "ListEventCategoriesResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List Events",
      "methodName": "ListEvents",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency of the service.\n Use minimum set of required fieldset for best performance.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventStatus"]
          },
          "doc": " Event status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "slug",
          "type": "string",
          "doc": " Event URL slug.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "userId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " User ID filter, by default any\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "categoryFilter.categorised",
          "type": "boolean",
          "doc": " If true - only categorised events will be returned.\n If false - only not categorised events will be returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "categoryFilter.categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category id filter.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "categoryFilter.states",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_CategoryState_State"]
          },
          "doc": " Category states filter. Default - any state.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "includeDrafts",
          "type": "boolean",
          "doc": " Whether draft events should be returned in the response.\n Requires WIX_EVENTS.MANAGE_EVENTS permission.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "recurrenceStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_RecurrenceStatus_Status"]
          },
          "doc": " Recurrence status filter.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "recurringGroupId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Recurring group id filter.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListEvents",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ListEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 events, given the provided [paging](https://dev.wix.com/api/rest/getting-started/pagination), [filtering & sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events",
        "links": [],
        "examples":         [
                    {
            "title": "List events",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events?limit=1' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\n  \"offset\": 0,\n  \"limit\": 1,\n  \"total\": 3,\n  \"events\": [  {\n    \"id\": \"b4abd505-5ba9-4e93-bc8f-ccd63a911255\",\n    \"location\":     {\n      \"name\": \"Wix Playground\",\n      \"coordinates\":       {\n        \"lat\": -74.00893,\n        \"lng\": 40.739254\n      },\n      \"address\": \"100 Gansevoort St, New York, NY 10014, USA\"\n    },\n    \"scheduling\":     {\n      \"config\":       {\n        \"startDate\": \"2020-05-16T07:00:00Z\",\n        \"endDate\": \"2020-05-16T07:30:00Z\",\n        \"timeZoneId\": \"EST\",\n        \"showTimeZone\": true\n      },\n      \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n      \"startDateFormatted\": \"May 16, 2020\",\n      \"startTimeFormatted\": \"7:00 AM\"\n    },\n    \"title\": \"My event\",\n    \"description\": \"\",\n    \"about\": \"\",\n    \"slug\": \"my-event\",\n    \"language\": \"en\",\n    \"created\": \"2020-05-15T15:02:44.483Z\",\n    \"modified\": \"2020-05-15T15:02:45Z\",\n    \"status\": \"SCHEDULED\",\n    \"instanceId\": \"0f13dcc7-4626-4c9a-a38b-b992cfb04f47\",\n    \"guestListConfig\": {\"publicGuestList\": true},\n    \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n    \"onlineConferencing\": {}\n  }],\n  \"facets\": {}\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "List events with filters and fieldset",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events?offset=0&limit=2&tag=conference&order=start:asc,modified:desc&fieldset=DETAILS&status=SCHEDULED' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\n  \"offset\": 0,\n  \"limit\": 2,\n  \"total\": 3,\n  \"events\":   [\n        {\n      \"id\": \"b4abd505-5ba9-4e93-bc8f-ccd63a911255\",\n      \"location\":       {\n        \"name\": \"Wix Playground\",\n        \"coordinates\":         {\n          \"lat\": -74.00893,\n          \"lng\": 40.739254\n        },\n        \"address\": \"100 Gansevoort St, New York, NY 10014, USA\"\n      },\n      \"scheduling\":       {\n        \"config\":         {\n          \"startDate\": \"2020-05-16T07:00:00Z\",\n          \"endDate\": \"2020-05-16T07:30:00Z\",\n          \"timeZoneId\": \"EST\",\n          \"showTimeZone\": true\n        },\n        \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n        \"startDateFormatted\": \"May 16, 2020\",\n        \"startTimeFormatted\": \"7:00 AM\"\n      },\n      \"title\": \"My event\",\n      \"description\": \"A very cool event!\",\n      \"mainImage\":       {\n        \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n        \"width\": 1920,\n        \"height\": 2704\n      },\n      \"slug\": \"my-event\",\n      \"language\": \"en\",\n      \"created\": \"2020-05-15T15:02:44.483Z\",\n      \"modified\": \"2020-05-15T15:02:45Z\",\n      \"calendarLinks\":       {\n        \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=20200516T070000Z/20200516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n        \"ics\": \"https://www.wixevents.com/media/calendar/b4abd505-5ba9-4e93-bc8f-ccd63a911255\"\n      },\n      \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n      \"guestListConfig\": {\"publicGuestList\": true},\n      \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n      \"onlineConferencing\": {}\n    },\n        {\n      \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n      \"location\":       {\n        \"name\": \"Wix Playground\",\n        \"coordinates\":         {\n          \"lat\": -74.00893,\n          \"lng\": 40.739254\n        },\n        \"address\": \"100 Gansevoort St, New York, NY 10014, USA\"\n      },\n      \"scheduling\":       {\n        \"config\":         {\n          \"startDate\": \"2020-05-16T07:00:00Z\",\n          \"endDate\": \"2020-05-16T07:30:00Z\",\n          \"timeZoneId\": \"EST\",\n          \"showTimeZone\": true\n        },\n        \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n        \"startDateFormatted\": \"May 16, 2020\",\n        \"startTimeFormatted\": \"7:00 AM\"\n      },\n      \"title\": \"My other event\",\n      \"description\": \"A very cool event!\",\n      \"mainImage\":       {\n        \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n        \"width\": 1920,\n        \"height\": 2704\n      },\n      \"slug\": \"my-other-event\",\n      \"language\": \"en\",\n      \"created\": \"2020-05-15T14:56:00.972Z\",\n      \"modified\": \"2020-05-15T14:56:01Z\",\n      \"calendarLinks\":       {\n        \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+other+event&dates=20200516T070000Z/20200516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n        \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n      },\n      \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n      \"guestListConfig\": {\"publicGuestList\": true},\n      \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n      \"onlineConferencing\": {}\n    }\n  ],\n  \"facets\": {}\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Calculate facets by event status",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events?facet=status' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\n  \"total\": 68,\n  \"offset\": 0,\n  \"limit\": 0,\n  \"events\": [],\n  \"facets\": {\"status\": {\"counts\":   {\n    \"SCHEDULED\": 23,\n    \"ENDED\": 36,\n    \"STARTED\": 1,\n    \"CANCELED\": 8\n  }}}\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListEventsRequest",
        "rpcResponseName": "ListEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List Orders",
      "methodName": "ListOrders",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order number.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Field facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"full_name\", \"email\" and \"order_number\".\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderTag"]
          },
          "doc": " Order tag.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListOrders",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListOrdersResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of orders, including ticket data, with basic filter support.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/orders",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://api.wix.com/events/v1/orders?eventId=619d52c0-c93b-4155-a55c-108048f20b3f&offset=0&limit=1&fieldset=DETAILS&fieldset=FORM&fieldset=TICKETS&facet=status' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"total\": 10,\n  \"limit\": 1,\n  \"orders\": [  {\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n    \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n    \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n    \"memberId\": \"\",\n    \"created\": \"2020-04-07T06:42:35.381Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@somedomain.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@somedomain.com\"\n      }\n    ]},\n    \"confirmed\": true,\n    \"status\": \"PAID\",\n    \"method\": \"payPal\",\n    \"ticketsQuantity\": 1,\n    \"totalPrice\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [    {\n      \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n      \"orderNumber\": \"FM9X-EHKF-ZO\",\n      \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n      \"name\": \"VIP enterance\",\n      \"price\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestFullName\": \"Sarah Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": true,\n        \"firstName\": \"Sarah\",\n        \"lastName\": \"Doe\",\n        \"email\": \"sarah.doe@somedomain.com\",\n        \"form\": {\"inputValues\":         [\n                    {\n            \"inputName\": \"email\",\n            \"value\": \"sarah.doe@somedomain.com\"\n          },\n                    {\n            \"inputName\": \"lastName\",\n            \"value\": \"Doe\"\n          },\n                    {\n            \"inputName\": \"firstName\",\n            \"value\": \"Sarah\"\n          }\n        ]},\n        \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n      },\n      \"archived\": false,\n      \"ticketPdfUrl\": \"<url_to_pdf>\",\n      \"anonymized\": false\n    }],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n  }],\n  \"facets\": {\"status\": {\"counts\":   {\n    \"INITIATED\": 6,\n    \"PAID\": 3,\n    \"OFFLINE_PENDING\": 1\n  }}},\n  \"orderFacets\": {\"facets\": {\"status\": {\"counts\":   {\n    \"INITIATED\":     {\n      \"count\": 6,\n      \"tickets\": 20,\n      \"ticketsCheckIn\": 0\n    },\n    \"PAID\":     {\n      \"count\": 3,\n      \"tickets\": 7,\n      \"ticketsCheckIn\": 0\n    },\n    \"OFFLINE_PENDING\":     {\n      \"count\": 1,\n      \"tickets\": 1,\n      \"ticketsCheckIn\": 1\n    }\n  }}}}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListOrdersRequest",
        "rpcResponseName": "ListOrdersResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List RSVP",
      "methodName": "ListRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_rsvp-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "rsvpId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " RSVP ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpStatus"]
          },
          "doc": " RSVP status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Facet counts to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"full_name\" and \"email\".\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator id filter, by default any.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Contact ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpTag"]
          },
          "doc": "RSVP tag\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_ListRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 RSVPs, given the provided [paging](https://dev.wix.com/api/rest/getting-started/pagination), [filtering & sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/rsvp",
        "links": [],
        "examples":         [
                    {
            "title": "List RSVPs with event filter",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/rsvp?offset=0&limit=2&eventId=fd56076c-38f4-4705-b9eb-ec322b85c745&order=created:asc,modified:desc&fieldset=DETAILS&status=YES' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\n  \"total\": 3,\n  \"offset\": 0,\n  \"limit\": 2,\n  \"rsvps\":   [\n        {\n      \"id\": \"fb97100a-98e2-4579-a61c-e71a3501b085\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n      \"memberId\": \"\",\n      \"created\": \"2020-05-18T10:56:56Z\",\n      \"modified\": \"2020-05-18T16:06:59Z\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"status\": \"YES\",\n      \"totalGuests\": 1,\n      \"guests\": [      {\n        \"index\": 0,\n        \"fullName\": \"John Doe\",\n        \"id\": 1\n      }],\n      \"anonymized\": false\n    },\n        {\n      \"id\": \"7c9dbf44-359c-47c7-a3e4-02638ab851c4\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n      \"memberId\": \"\",\n      \"created\": \"2020-05-18T15:07:54Z\",\n      \"modified\": \"2020-05-18T16:06:57Z\",\n      \"firstName\": \"Bob\",\n      \"lastName\": \"Jones\",\n      \"email\": \"bob.jones@example.com\",\n      \"status\": \"YES\",\n      \"totalGuests\": 1,\n      \"guests\": [      {\n        \"index\": 0,\n        \"fullName\": \"Bob Jones\",\n        \"checkIn\": {\"created\": \"2020-05-18T16:02:47.495Z\"},\n        \"id\": 1\n      }],\n      \"anonymized\": false\n    }\n  ],\n  \"facets\": {}\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Calculate facets by RSVP status",
            "body": ["curl -X GET 'https://www.wixapis.com/events/v1/rsvp?limit=0&facet=status' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\n  \"total\": 86,\n  \"offset\": 0,\n  \"limit\": 0,\n  \"rsvps\": [],\n  \"facets\": {\"status\": {\"counts\":   {\n    \"YES\": 82,\n    \"WAITING\": 2,\n    \"NO\": 2\n  }}},\n  \"rsvpFacets\": {\"facets\": {\"status\": {\"counts\":   {\n    \"YES\":     {\n      \"count\": 82,\n      \"guests\": 93,\n      \"guestsCheckIn\": 7\n    },\n    \"WAITING\":     {\n      \"count\": 2,\n      \"guests\": 2,\n      \"guestsCheckIn\": 0\n    },\n    \"NO\":     {\n      \"count\": 2,\n      \"guests\": 2,\n      \"guestsCheckIn\": 0\n    }\n  }}}}\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "List only member RSVPs",
            "body": ["curl -X GET 'https://api.wix.com/events/v1/rsvp?offfset=0&limit=1&membersOnly=true' \\\n-H 'Authorization: <AUTH TOKEN>'"],
            "response": ["{\n  \"total\": 22,\n  \"offset\": 0,\n  \"limit\": 1,\n  \"rsvps\": [  {\n    \"id\": \"49affe71-9001-4840-a4af-4a679d767b89\",\n    \"eventId\": \"697b4a66-4574-4ff5-9536-ab0e50d8e3b9\",\n    \"contactId\": \"4f7f2b89-14a5-425d-8ae8-42beda075c0f\",\n    \"memberId\": \"babf399a-4e8e-4e19-8bcc-f4f9c298ec63\",\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"email\": \"\",\n    \"status\": \"YES\",\n    \"totalGuests\": 0,\n    \"guests\": [],\n    \"anonymized\": false\n  }],\n  \"facets\": {}\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListRsvpRequest",
        "rpcResponseName": "ListRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List Schedule Bookmarks",
      "methodName": "ListBookmarks",
      "serviceName": "BookmarkManagement",
      "tag": "Schedule Bookmarks",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "QUERY",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "ListBookmarks",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_ListBookmarksResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of bookmarked schedule items for current member.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/schedule/bookmarks",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/agenda/bookmarks' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListBookmarksRequest",
        "rpcResponseName": "ListBookmarksResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "List Schedule Items",
      "methodName": "ListScheduleItems",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_schedule_StateFilter"]
          },
          "doc": " Schedule item state filter.\n Defaults to `[PUBLISHED, VISIBLE]` when no filters are specified.\n If neither `PUBLISHED` nor `DRAFT` are specified, assumes `PUBLISHED`, for example: `[HIDDEN]` becomes `[HIDDEN, PUBLISHED]`.\n If neither `VISIBLE` nor `HIDDEN` are specified, assumes `VISIBLE`, for example: `[DRAFT]` becomes `[DRAFT, VISIBLE]`.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "startingFrom",
          "type": "string",
          "doc": " Filters schedule items starting on or after specified point in time. Inclusive.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "startingBefore",
          "type": "string",
          "doc": " Filters schedule items starting before specified point in time. Non-inclusive.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Deprecated, use `paging`.\n Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Deprecated, use `paging`.\n Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-schedule-items).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "itemId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Item IDs filter.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tags filter.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "stageName",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Stage names filter.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to load per page.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListScheduleItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_ListScheduleItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 schedule items, with basic filter support.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/schedule",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/agenda' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListScheduleItemsRequest",
        "rpcResponseName": "ListScheduleItemsResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "List Ticket Definitions",
      "methodName": "ListTicketDefinitions",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Controls which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator id filter, by default any.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketDefinitionsRequest_State"]
          },
          "doc": " Filters by ticket definition state.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "saleStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketSaleStatus"]
          },
          "doc": " Ticket sale status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTicketDefinitions",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketDefinitionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 ticket definitions, with basic filter support.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets/definitions",
        "links": [],
        "examples": [        {
          "title": "List ordered event ticket definitions with facets",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/tickets/definitions?offset=0&limit=2&eventId=fd56076c-38f4-4705-b9eb-ec322b85c745&order=created:asc,modified:desc&fieldset=DASHBOARD&state=VISIBLE&facet=saleStatus' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  },\n  \"definitions\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"policy\": \"\",\n      \"dashboard\":       {\n        \"hidden\": false,\n        \"sold\": 0,\n        \"limited\": false\n      },\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"salePeriod\":       {\n        \"startDate\": \"2021-09-27T09:51:00Z\",\n        \"endDate\": \"2021-09-27T09:55:00Z\",\n        \"hideNotOnSale\": false\n      },\n      \"saleStatus\": \"SALE_ENDED\"\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"policy\": \"\",\n      \"dashboard\":       {\n        \"hidden\": false,\n        \"sold\": 0,\n        \"limited\": false\n      },\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"salePeriod\":       {\n        \"startDate\": \"2019-09-27T09:51:00Z\",\n        \"endDate\": \"2110-09-27T09:55:00Z\",\n        \"hideNotOnSale\": true\n      },\n      \"saleStatus\": \"SALE_STARTED\"\n    }\n  ],\n  \"facets\": {\"saleStatus\": {\"counts\":   {\n    \"SALE_STARTED\": 1,\n    \"SALE_ENDED\": 1\n  }}}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTicketDefinitionsRequest",
        "rpcResponseName": "ListTicketDefinitionsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List Tickets",
      "methodName": "ListTickets",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Ticket numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"orderFullName\", \"guestFullName\", and \"ticketNumber\".\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Guest contact ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Order status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"ticket_number:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketsRequest_State"]
          },
          "doc": " Ticket state.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 tickets, given the provided [pagination](https://dev.wix.com/api/rest/getting-started/pagination), [filtering & sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets?limit=10&fieldset=GUEST_DETAILS&fieldset=TICKET_DETAILS&state=PAID' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"total\": 2,\n  \"offset\": 0,\n  \"limit\": 10,\n  \"tickets\":   [\n        {\n      \"ticketNumber\": \"FNVL-NIJT-WP021\",\n      \"orderNumber\": \"FNVL-NIJT-WP\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    },\n        {\n      \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n      \"orderNumber\": \"FNVL-O7MZ-0Q\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"11.11\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"OFFLINE_PENDING\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"Jane Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"email\": \"jane.doe@example.com\",\n        \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    }\n  ],\n  \"facets\": {}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTicketsRequest",
        "rpcResponseName": "ListTicketsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List Tickets (Additional Binding 1)",
      "methodName": "ListTickets",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Ticket numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"orderFullName\", \"guestFullName\", and \"ticketNumber\".\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Order status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketsRequest_State"]
          },
          "doc": " Ticket state.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"ticket_number:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Guest contact ID.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 tickets, given the provided [pagination](https://dev.wix.com/api/rest/getting-started/pagination), [filtering & sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets?limit=10&fieldset=GUEST_DETAILS&fieldset=TICKET_DETAILS&state=PAID' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"total\": 2,\n  \"offset\": 0,\n  \"limit\": 10,\n  \"tickets\":   [\n        {\n      \"ticketNumber\": \"FNVL-NIJT-WP021\",\n      \"orderNumber\": \"FNVL-NIJT-WP\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    },\n        {\n      \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n      \"orderNumber\": \"FNVL-O7MZ-0Q\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"11.11\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"OFFLINE_PENDING\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"Jane Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"email\": \"jane.doe@example.com\",\n        \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    }\n  ],\n  \"facets\": {}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTicketsRequest",
        "rpcResponseName": "ListTicketsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "List User Events",
      "methodName": "ListUserEvents",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "userFilter",
        "userFilter.userId",
        "userFilter.relation"
      ],
      "params":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Paging",
          "doc": "",
          "required": false
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._com_wix_events_upstream_wix_common_Sorting"]
          },
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        },
                {
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventStatus"]
          },
          "doc": " Event status.\n",
          "required": false
        },
                {
          "name": "userFilter",
          "type": "All APIs.Wix Events._wix_events_UserFilter",
          "doc": " Wix user filter, by default any.\n Allows to filter events by user relation to the event among all wix sites.\n",
          "required": true
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListUserEvents",
          "typeParams": ["All APIs.Wix Events._wix_events_ListUserEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "<blockquote class='warning'><p><strong>Error:<\/strong><br/>This endpoint is not exposed via REST. See <a href='https://bo.wix.com/wix-docs/rnd/platformization-guidelines#protobuf.rest'>guidelines<\/a> for more details.<\/p><\/blockquote>\n\n\n Retrieves a list of up to 100 user related events, given the provided [paging](https://dev.wix.com/api/rest/getting-started/pagination), [filtering & sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n \n",
        "description": [],
        "links": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": false,
        "rpcRequestName": "ListUserEventsRequest",
        "rpcResponseName": "ListUserEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Publish Draft",
      "methodName": "PublishDraft",
      "serviceName": "FormBuilder",
      "tag": "Registration Form",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "PATH",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "PublishDraft",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_form_PublishDraftResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Publishes the draft form.\n Sets event registration form equal to contents of draft form.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/form/publish",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/publish' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"form\": {\n  \"controls\":   [\n        {\n      \"type\": \"NAME\",\n      \"system\": true,\n      \"name\": \"name\",\n      \"inputs\":       [\n                {\n          \"name\": \"firstName\",\n          \"array\": false,\n          \"label\": \"First Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        },\n                {\n          \"name\": \"lastName\",\n          \"array\": false,\n          \"label\": \"Last Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }\n      ],\n      \"label\": \"First Name, Last Name\",\n      \"orderIndex\": 0,\n      \"id\": \"name\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": true,\n      \"name\": \"email\",\n      \"inputs\": [      {\n        \"name\": \"email\",\n        \"array\": false,\n        \"label\": \"Email\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": true,\n        \"maxLength\": 50,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Email\",\n      \"orderIndex\": 1,\n      \"id\": \"email\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": false,\n      \"name\": \"phone-1a4acde6c958ff66\",\n      \"inputs\": [      {\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"array\": false,\n        \"label\": \"Work phone (line)\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": false,\n        \"maxLength\": 25,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Work phone (line)\",\n      \"orderIndex\": 2,\n      \"id\": \"phone-1a4acde6c958ff66\"\n    }\n  ],\n  \"messages\":   {\n    \"rsvp\":     {\n      \"rsvpYesOption\": \"I will attend\",\n      \"rsvpNoOption\": \"Not Going\",\n      \"positiveMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Thank you!\",\n          \"message\": \"An email with all the event info was sent to you.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"waitlistMessages\":       {\n        \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n        \"confirmation\":         {\n          \"title\": \"Thanks! You've been added to the waitlist.\",\n          \"message\": \"We'll update you if additional spots become available.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"negativeMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Sorry You Can't Make It\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"submitActionLabel\": \"SUBMIT\"\n    },\n    \"checkout\":     {\n      \"title\": \"Add Your Details\",\n      \"submitActionLabel\": \"Proceed\"\n    },\n    \"registrationClosed\":     {\n      \"message\": \"Check our news page for updates.\",\n      \"exploreEventsActionLabel\": \"See other events\"\n    }\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "PublishDraftRequest",
        "rpcResponseName": "PublishDraftResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Publish Draft Event",
      "methodName": "PublishDraftEvent",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "PublishDraftEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_PublishDraftEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Publishes draft event so that it becomes available to site visitors.\n If recurring events are set, category with state RECURRING_EVENT will be created.\n All recurring events will be assigned to this category.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{id}/publish",
        "links": [],
        "examples": [        {
          "title": "Publish draft event",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/6e56c827-b99f-4314-857e-cb856704994a/publish' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"event\": {\n  \"id\": \"6e56c827-b99f-4314-857e-cb856704994a\",\n  \"location\":   {\n    \"name\": \"Location To Be Decided\",\n    \"type\": \"VENUE\",\n    \"tbd\": true\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": true,\n      \"scheduleTbdMessage\": \"Time To Be Decided\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": false,\n      \"recurrences\":       {\n        \"occurrences\": [],\n        \"status\": \"ONE_TIME\"\n      }\n    },\n    \"formatted\": \"Time To Be Decided\",\n    \"startDateFormatted\": \"\",\n    \"startTimeFormatted\": \"\"\n  },\n  \"title\": \"My event\",\n  \"description\": \"This event is TBD\",\n  \"about\": \"\",\n  \"slug\": \"my-event-3\",\n  \"language\": \"en\",\n  \"created\": \"2021-07-23T06:41:51.022Z\",\n  \"modified\": \"2021-07-23T06:46:17Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"TICKETS\",\n    \"status\": \"CLOSED\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"waitlist\": false\n    }},\n    \"ticketing\":     {\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"ticketLimitPerOrder\": 20\n      },\n      \"soldOut\": true\n    },\n    \"restrictedTo\": \"VISITOR\",\n    \"initialType\": \"TICKETS\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event&dates=&location=&details=Thank+you+for+registering+to+our+event%21+Your+tickets+are+attached+to+this+email.+Don%27t+forget+to+bring+them.%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+details%3A%0A%0AMy+event%0ATime+To+Be+Decided%0ALocation+To+Be+Decided\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/6e56c827-b99f-4314-857e-cb856704994a?token=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiZXZlbnRJZFwiOntcInZhbHVlXCI6XCI2ZTU2YzgyNy1iOTlmLTQzMTQtODU3ZS1jYjg1NjcwNDk5NGFcIn0sXCJvY0xpbmtcIjpudWxsfSIsImlhdCI6MTYyNzAyMjc3N30.S19VDHYT1Qd6DTMdZa_lD-WE6FwMkdJMpQLjKcLv_g8\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://martynasa.wixsite.com/sanity-page\",\n    \"path\": \"/events/my-event-3\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\",\n          \"labels\": []\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      },\n      \"ticketsUnavailable\":       {\n        \"message\": \"Tickets Are Not on Sale\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"17bb9a58-c6fe-4b03-83b9-ae8d4f131a38\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"5f8e2124-5c31-48cd-8464-eaf9c6211054\",\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJzdGFydFwiLFwiaW5zdGFuY2VJZFwiOlwiMTdiYjlhNTgtYzZmZS00YjAzLTgzYjktYWU4ZDRmMTMxYTM4XCIsXCJldmVudElkXCI6XCI2ZTU2YzgyNy1iOTlmLTQzMTQtODU3ZS1jYjg1NjcwNDk5NGFcIn0iLCJpYXQiOjE2MjcwMjI3Nzd9.RqePKIYquUj9mlojB8HAIFzRY_jqyKhLz4T27r0tb0A\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJqb2luXCIsXCJpbnN0YW5jZUlkXCI6XCIxN2JiOWE1OC1jNmZlLTRiMDMtODNiOS1hZThkNGYxMzFhMzhcIixcImV2ZW50SWRcIjpcIjZlNTZjODI3LWI5OWYtNDMxNC04NTdlLWNiODU2NzA0OTk0YVwifSIsImlhdCI6MTYyNzAyMjc3N30.uCAnnBP7LKn_O90zfOrSFnsyWuKJhtYSxlhBNfir20k\"\n    },\n    \"providerName\": \"\"\n  },\n  \"assignedContactsLabel\": \"custom.my-event-time-to-be-decided\",\n  \"agenda\": {\"enabled\": false}\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "PublishDraftEventRequest",
        "rpcResponseName": "PublishDraftEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Publish Schedule",
      "methodName": "PublishDraft",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "BODY",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "PublishDraft",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_PublishDraftResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Publishes the draft schedule.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/schedule/publish",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/agenda/publish' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "PublishDraftRequest",
        "rpcResponseName": "PublishDraftResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Query Available Tickets",
      "methodName": "QueryAvailableTickets",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Ticket definition.\n See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryAvailableTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_QueryAvailableTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns tickets available to reserve.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/tickets/available/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/available/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 100,\n                 \"order\": \"orderIndex:asc\",\n                 \"filter\": {\n                   \"name\": {\n                     \"$contains\": \"ticket\"\n                   }\n                 }\n               }'"],
          "response": ["{\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  },\n  \"definitions\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryAvailableTicketsRequest",
        "rpcResponseName": "QueryAvailableTicketsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Query Categories",
      "methodName": "QueryCategories",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params":       [
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_QueryV2",
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_categories_CategoryFieldset"]
          },
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryCategories",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_QueryCategoriesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "   - `filter` - supported for `name`, `id` and `states` fields.\n   - `sort` - supported for `created` and `name` fields.\n   - `paging` - supported, see [paging](https://dev.wix.com/api/rest/getting-started/pagination).\n   - `fields` - not supported.\n   - `fieldsets` - not supported.\n   - `cursorPaging` - not supported, use offset pagination instead.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/categories/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/categories/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"query\": {\n                   \"filter\": {\n                     \"name\": {\n                       \"$contains\": \"cool\"\n                     }\n                   },\n                   \"sort\": [\n                     {\n                       \"fieldName\": \"created\",\n                       \"order\": \"DESC\"\n                     }\n                   ],\n                   \"paging\": {\n                     \"limit\": 3\n                   }\n                 }\n               }'"],
          "response": ["{\n  \"categories\":   [\n        {\n      \"id\": \"e9779de3-a085-4255-b3a6-9559990d4436\",\n      \"name\": \"A very cool category!\",\n      \"createdDate\": \"2021-04-01T09:49:37.068Z\"\n    },\n        {\n      \"id\": \"106172c1-ce50-4b88-83a2-c8e6088eed00\",\n      \"name\": \"cool events\",\n      \"createdDate\": \"2021-03-25T10:21:01.066Z\"\n    }\n  ],\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryCategoriesRequest",
        "rpcResponseName": "QueryCategoriesResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Query Events",
      "methodName": "Query",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "userId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " User ID filter, by default any\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "includeDrafts",
          "type": "boolean",
          "doc": " Whether draft events should be returned in the response.\n Requires WIX_EVENTS.MANAGE_EVENTS permission.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "Query",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_QueryEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 1,000 events, given the provided [paging](https://dev.wix.com/api/rest/getting-started/pagination), [filtering and sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 2,\n                 \"order\": \"created:desc\",\n                 \"filter\": {\n                   \"status\": {\n                     \"$hasSome\": [ \"SCHEDULED\", \"STARTED\" ]\n                   },\n                   \"title\": {\n                     \"$contains\": \"My\"\n                   }\n                 },\n                 \"fieldset\": [],\n                 \"facet\": [\n                   \"status\"\n                 ],\n                 \"userId\": [],\n                 \"tag\": []\n               }'"],
          "response": ["{\n  \"total\": 6,\n  \"offset\": 0,\n  \"limit\": 2,\n  \"events\":   [\n        {\n      \"id\": \"b4abd505-5ba9-4e93-bc8f-ccd63a911255\",\n      \"location\":       {\n        \"name\": \"Wix Playground\",\n        \"coordinates\":         {\n          \"lat\": -74.00893,\n          \"lng\": 40.739254\n        },\n        \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n        \"type\": \"VENUE\"\n      },\n      \"scheduling\":       {\n        \"config\":         {\n          \"scheduleTbd\": false,\n          \"startDate\": \"2020-05-16T07:00:00Z\",\n          \"endDate\": \"2020-05-16T07:30:00Z\",\n          \"timeZoneId\": \"EST\",\n          \"endDateHidden\": false,\n          \"showTimeZone\": true\n        },\n        \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n        \"startDateFormatted\": \"May 16, 2020\",\n        \"startTimeFormatted\": \"7:00 AM\"\n      },\n      \"title\": \"My event\",\n      \"description\": \"\",\n      \"about\": \"\",\n      \"slug\": \"my-event-4\",\n      \"language\": \"en\",\n      \"created\": \"2020-05-15T15:02:44.483Z\",\n      \"modified\": \"2020-05-15T15:02:45Z\",\n      \"status\": \"SCHEDULED\",\n      \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n      \"guestListConfig\": {\"publicGuestList\": true},\n      \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n      \"onlineConferencing\": {\"providerName\": \"\"}\n    },\n        {\n      \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n      \"location\":       {\n        \"name\": \"Wix Playground\",\n        \"coordinates\":         {\n          \"lat\": -74.00893,\n          \"lng\": 40.739254\n        },\n        \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n        \"type\": \"VENUE\"\n      },\n      \"scheduling\":       {\n        \"config\":         {\n          \"scheduleTbd\": false,\n          \"startDate\": \"2020-05-16T07:00:00Z\",\n          \"endDate\": \"2020-05-16T07:30:00Z\",\n          \"timeZoneId\": \"EST\",\n          \"endDateHidden\": false,\n          \"showTimeZone\": true\n        },\n        \"formatted\": \"May 16, 2020, 7:00 AM – 7:30 AM GMT\",\n        \"startDateFormatted\": \"May 16, 2020\",\n        \"startTimeFormatted\": \"7:00 AM\"\n      },\n      \"title\": \"My event\",\n      \"description\": \"\",\n      \"about\": \"\",\n      \"slug\": \"my-event-3\",\n      \"language\": \"en\",\n      \"created\": \"2020-05-15T14:56:00.972Z\",\n      \"modified\": \"2020-05-15T14:56:01Z\",\n      \"status\": \"SCHEDULED\",\n      \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n      \"guestListConfig\": {\"publicGuestList\": true},\n      \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n      \"onlineConferencing\": {\"providerName\": \"\"}\n    }\n  ],\n  \"facets\": {\"status\": {\"counts\": {\"SCHEDULED\": 6}}}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryEventsRequest",
        "rpcResponseName": "QueryEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Query Events V2",
      "methodName": "QueryEventsV2",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "query",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_QueryV2",
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "includeDrafts",
          "type": "boolean",
          "doc": " Whether draft events should be returned in the response.\n Requires WIX_EVENTS.MANAGE_EVENTS permission.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryEventsV2",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_QueryEventsV2Response"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 1,000 events, given the provided paging, filtering and sorting.\n\n ** Important **:\n   - All results are for one specific business, resolved from the request context.\n\n Query object support:\n   - `filter` - supported, see [filtering and sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n   - `sort` - supported, see [filtering and sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n   - `paging` - supported, see [paging](https://dev.wix.com/api/rest/getting-started/pagination).\n   - `fields` - not supported.\n   - `fieldsets` - not supported, use request-level `fieldset` instead.\n   - `cursorPaging` - not supported, use offset pagination instead.\n\n Defaults:\n   - When filter is not specified, returns all events that caller is authorized to read.\n   - When sorting is not specified, defaults to `created` in `DESC` order.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v2/events/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryEventsV2Request",
        "rpcResponseName": "QueryEventsV2Response",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Query Policies",
      "methodName": "QueryPolicies",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_policies_PolicyFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_policy-fieldset).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryPolicies",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_policies_QueryPoliciesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of policies, given the provided paging and filter.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/policies/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/policies/query?fieldset=BODY' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 2,\n                 \"filter\": {\n                   \"eventId\": {\n                     \"$hasSome\": [ \"54bb06d8-467b-4c57-831f-cb3c04874044\" ]\n                   }\n                 }\n               }'\n\n{\n  \"metaData\": {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 6\n  },\n  \"policies\": [\n    {\n      \"id\": \"49365385-d154-493a-9518-3b355495f08e\",\n      \"name\": \"Policy 1\",\n      \"body\": \"<p>Event policy text<\/p>\",\n      \"updatedDate\": \"2020-07-23T08:43:08.061Z\",\n      \"sortIndex\": 1,\n      \"eventId\": \"54bb06d8-467b-4c57-831f-cb3c04874044\"\n    },\n    {\n      \"id\": \"91c95b4f-e1a1-4434-b92d-1bfc6d0d62c6\",\n      \"name\": \"Policy 2\",\n      \"body\": \"<p>Event policy text<\/p>\",\n      \"updatedDate\": \"2020-07-28T17:13:26.500Z\",\n      \"sortIndex\": 2,\n      \"eventId\": \"54bb06d8-467b-4c57-831f-cb3c04874044\"\n    }\n  ]\n}\n"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryPoliciesRequest",
        "rpcResponseName": "QueryPoliciesResponse",
        "artifactId": "com.wixpress.events.events-policy-management-v1-proxy"
      },
      "customLabels": []
    },
        {
      "name": "Query RSVP",
      "methodName": "QueryRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpFieldset"]
          },
          "doc": " Control which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_rsvp-fieldset).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"guests.full_name\".\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator ID.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Contact ID.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpTag"]
          },
          "doc": " RSVP tag\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_QueryRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 RSVPs, supporting [structurized queries](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/rsvp/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/rsvp/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 2,\n                 \"order\": \"created:desc\",\n                 \"filter\": {\n                   \"status\": {\n                     \"$hasSome\": [ \"YES\", \"NO\" ]\n                   }\n                 },\n                 \"fieldset\": [],\n                 \"facet\": [\n                   \"status\"\n                 ]\n               }'"],
          "response": ["{\n  \"total\": 102,\n  \"offset\": 0,\n  \"limit\": 2,\n  \"rsvps\":   [\n        {\n      \"id\": \"8234bc18-65d9-4016-9937-003f67666aa5\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"contactId\": \"c9294dfd-ea55-4f51-a4a0-1c0df504c962\",\n      \"memberId\": \"\",\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"email\": \"\",\n      \"status\": \"NO\",\n      \"totalGuests\": 0,\n      \"guests\": [],\n      \"anonymized\": false\n    },\n        {\n      \"id\": \"fb97100a-98e2-4579-a61c-e71a3501b085\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n      \"memberId\": \"\",\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"email\": \"\",\n      \"status\": \"YES\",\n      \"totalGuests\": 0,\n      \"guests\": [],\n      \"anonymized\": false\n    }\n  ],\n  \"facets\": {\"status\": {\"counts\":   {\n    \"YES\": 95,\n    \"NO\": 7\n  }}},\n  \"rsvpFacets\": {\"facets\": {\"status\": {\"counts\":   {\n    \"YES\":     {\n      \"count\": 95,\n      \"guests\": 98,\n      \"guestsCheckIn\": 4\n    },\n    \"NO\":     {\n      \"count\": 7,\n      \"guests\": 9,\n      \"guestsCheckIn\": 3\n    }\n  }}}}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryRsvpRequest",
        "rpcResponseName": "QueryRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Query Schedule Items",
      "methodName": "QueryScheduleItems",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_QueryV2",
        "doc": "",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "QueryScheduleItems",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_QueryScheduleItemsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 schedule items, given the provided [paging](https://dev.wix.com/api/rest/getting-started/pagination), [filtering](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-schedule-items).\n\n ** Important **:\n   - All results are for one specific business, resolved from the request context.\n\n Query object support:\n   - `filter` - supported, see [filtering and sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-schedule-items).\n   - `sort` - supported, see [filtering and sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-schedule-items).\n   - `paging` - supported, see [paging](https://dev.wix.com/api/rest/getting-started/pagination).\n   - `fields` - not supported.\n   - `fieldsets` - not supported.\n   - `cursorPaging` - not supported, use offset pagination instead.\n\n Defaults:\n   - When filter is not specified, returns all schedule items that caller is authorized to read.\n   - When sorting is not specified, defaults to `time_slot.start` and `time_slot.end` in `ASC` order.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/schedule/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryScheduleItemsRequest",
        "rpcResponseName": "QueryScheduleItemsResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Query Ticket Definitions",
      "methodName": "QueryTicketDefinitions",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryTicketDefinitions",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_QueryTicketDefinitionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 ticket definitions, supporting [structurized queries](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/tickets/definitions/query",
        "links": [],
        "examples":         [
                    {
            "title": "Query ticket definitions with filter and order params",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/definitions/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 2,\n                 \"order\": \"created:desc\",\n                 \"filter\": {\n                   \"eventId\": {\n                     \"$hasSome\": [ \"fd56076c-38f4-4705-b9eb-ec322b85c745\" ]\n                   }\n                 }\n               }'"],
            "response": ["{\n  \"total\": 2,\n  \"offset\": 0,\n  \"limit\": 2,\n  \"definitions\":   [\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"policy\": \"\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    },\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"policy\": \"\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    }\n  ]\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Query ticket definitions with sale status filter and facets",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/definitions/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 2,\n                 \"order\": \"created:desc\",\n                 \"filter\": {\n                   \"eventId\": {\n                     \"$hasSome\": [ \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\" ]\n                   },\n                   \"saleStatus\": {\n                     \"$hasSome\": [ \"SALE_STARTED\", \"SALE_SCHEDULED\" ]\n                   }\n                 },\n                 \"facet\": [\"saleStatus\"]\n               }'"],
            "response": ["{\n  \"total\": 8,\n  \"offset\": 0,\n  \"limit\": 2,\n  \"definitions\":   [\n        {\n      \"id\": \"5bc9cb0d-5a4e-4251-97e9-e9c5a7ee9960\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\",\n        \"value\": \"0.00\"\n      },\n      \"free\": true,\n      \"name\": \"Early Bird\",\n      \"description\": \"Buy it while it lasts\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 1,\n      \"policy\": \"\",\n      \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n      \"saleStatus\": \"SALE_STARTED\"\n    },\n        {\n      \"id\": \"d092fd27-35e9-433e-838c-7980708981a0\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\",\n        \"value\": \"0.00\"\n      },\n      \"free\": true,\n      \"name\": \"Late Bird\",\n      \"description\": \"In case you missed 'Early Bird' ticket\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"policy\": \"\",\n      \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n      \"saleStatus\": \"SALE_STARTED\"\n    }\n  ],\n  \"facets\": {\"saleStatus\": {\"counts\":   {\n    \"SALE_SCHEDULED\": 1,\n    \"SALE_STARTED\": 7\n  }}}\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryTicketDefinitionsRequest",
        "rpcResponseName": "QueryTicketDefinitionsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Reschedule Draft",
      "methodName": "RescheduleDraft",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "timeZoneId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "timeZoneId",
          "type": "string",
          "doc": " Time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "timeSlotOffset",
          "type": "All APIs.Wix Events._google_protobuf_Duration",
          "doc": " Offset added or subtracted from schedule item start & end times.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "RescheduleDraft",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_RescheduleDraftResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Adjusts time of all draft schedule items (per event).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/schedule/draft/reschedule",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RescheduleDraftRequest",
        "rpcResponseName": "RescheduleDraftResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Unassign Events",
      "methodName": "UnassignEvents",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "categoryId",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "categoryId",
          "type": "string",
          "doc": "",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UnassignEvents",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_UnassignEventsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Unassigns events from a single category.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/categories/{categoryId}/events",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/categories/e9779de3-a085-4255-b3a6-9559990d4436/events?eventId=539a564e-48d2-4eac-8e14-d7a91be6b1c2&eventId=abd39eb7-844c-4321-9ea2-0d43040be05e' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UnassignEventsRequest",
        "rpcResponseName": "UnassignEventsResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Category",
      "methodName": "UpdateCategory",
      "serviceName": "CategoryManagement",
      "tag": "Category",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["category"],
      "params":       [
                {
          "in": "PATH",
          "name": "category.id",
          "type": "string",
          "doc": " Category ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "category",
          "type": "All APIs.Wix Events._wix_events_categories_Category",
          "doc": "",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCategory",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_UpdateCategoryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an existing category.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/categories/{category.id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/categories/6c313b96-1961-4f0f-b6d7-61788e1a25df' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"category\": {\n    \"name\": \"Not so nice\"\n  }\n}\nEOF"],
          "response": ["{\"category\": {\n  \"id\": \"6c313b96-1961-4f0f-b6d7-61788e1a25df\",\n  \"name\": \"Not so nice\",\n  \"createdDate\": \"2021-04-01T09:55:31.335Z\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCategoryRequest",
        "rpcResponseName": "UpdateCategoryResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Checkout",
      "methodName": "UpdateCheckout",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "orderNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "buyer",
          "type": "All APIs.Wix Events._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "paidPlanBenefit",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCheckout",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_UpdateCheckoutResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates order and tickets (supported only for unconfirmed orders).\n Guest details must be sent according to Registration Form input fields.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/checkout/{orderNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/checkout/FM9X-EHKF-ZO' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"buyer\": {\n                   \"firstName\": \"Ms Sarah\",\n                   \"lastName\": \"Doe\",\n                   \"email\": \"john.doe@wix.com\"\n                 },\n                 \"guests\": [\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"John\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"john.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Sarah\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"sarah.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Mathew\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"mathew.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   }\n                 ]\n               }'"],
          "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FNNU-XRQ9-QR\",\n    \"reservationId\": \"1fe76e20-efa0-4330-be44-2a8b2ca3c208\",\n    \"snapshotId\": \"ed37fbec-e065-473e-b079-6dbde2dff218\",\n    \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"contactId\": \"\",\n    \"memberId\": \"\",\n    \"created\": \"2020-05-22T13:36:39.158Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@wix.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"Ms Sarah\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@wix.com\"\n      }\n    ]},\n    \"confirmed\": false,\n    \"status\": \"INITIATED\",\n    \"method\": \"\",\n    \"ticketsQuantity\": 3,\n    \"totalPrice\":     {\n      \"amount\": \"190.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"invoice\":     {\n      \"items\":       [\n                {\n          \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n          \"quantity\": 1,\n          \"name\": \"Nice ticket\",\n          \"price\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"fees\": []\n        },\n                {\n          \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n          \"quantity\": 2,\n          \"name\": \"VIP ticket\",\n          \"price\":           {\n            \"amount\": \"100.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"200.00\",\n            \"currency\": \"EUR\"\n          },\n          \"discount\":           {\n            \"amount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"afterDiscount\":             {\n              \"amount\": \"190.00\",\n              \"currency\": \"EUR\"\n            },\n            \"code\": \"SUMMER\",\n            \"name\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n            \"discounts\": [            {\n              \"amount\":               {\n                \"amount\": \"10.00\",\n                \"currency\": \"EUR\"\n              },\n              \"coupon\":               {\n                \"name\": \"SUMMER\",\n                \"code\": \"SUMMER\",\n                \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n              }\n            }]\n          },\n          \"fees\": []\n        }\n      ],\n      \"total\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"190.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"subTotal\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"grandTotal\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": [],\n      \"revenue\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      }\n    },\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"\"\n  },\n  \"expires\": \"2020-05-22T13:12:54.804Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"VIP ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCheckoutRequest",
        "rpcResponseName": "UpdateCheckoutResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Control",
      "methodName": "UpdateControl",
      "serviceName": "FormBuilder",
      "tag": "Registration Form",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "control",
        "eventId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Unique input control ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "orderIndex",
          "type": "integer",
          "doc": " Index used to sort input controls in ascending order.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "control",
          "type": "All APIs.Wix Events._wix_events_form_UpdateControlRequest_control",
          "doc": "",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateControl",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_form_UpdateControlResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an existing input control in the draft form.\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/form/controls/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PUT 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/controls/phone-1a4acde6c958ff66' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"eventId\": \"ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"orderIndex\": 3,\n  \"phone\": {\n    \"mandatory\": false,\n    \"label\": \"Work phone (line)\"\n  }\n}\nEOF"],
          "response": ["{\"form\": {\n  \"controls\":   [\n        {\n      \"type\": \"NAME\",\n      \"system\": true,\n      \"name\": \"name\",\n      \"inputs\":       [\n                {\n          \"name\": \"firstName\",\n          \"array\": false,\n          \"label\": \"First Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        },\n                {\n          \"name\": \"lastName\",\n          \"array\": false,\n          \"label\": \"Last Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }\n      ],\n      \"label\": \"First Name, Last Name\",\n      \"orderIndex\": 0,\n      \"id\": \"name\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": true,\n      \"name\": \"email\",\n      \"inputs\": [      {\n        \"name\": \"email\",\n        \"array\": false,\n        \"label\": \"Email\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": true,\n        \"maxLength\": 50,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Email\",\n      \"orderIndex\": 1,\n      \"id\": \"email\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": false,\n      \"name\": \"phone\",\n      \"inputs\": [      {\n        \"name\": \"phone\",\n        \"array\": false,\n        \"label\": \"Home phone\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": false,\n        \"maxLength\": 25,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Home phone\",\n      \"orderIndex\": 2,\n      \"id\": \"phone\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": false,\n      \"name\": \"phone-1a4acde6c958ff66\",\n      \"inputs\": [      {\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"array\": false,\n        \"label\": \"Work phone (line)\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": false,\n        \"maxLength\": 25,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Work phone (line)\",\n      \"orderIndex\": 3,\n      \"id\": \"phone-1a4acde6c958ff66\"\n    }\n  ],\n  \"messages\":   {\n    \"rsvp\":     {\n      \"rsvpYesOption\": \"I'm Going\",\n      \"rsvpNoOption\": \"Not Going\",\n      \"positiveMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Thank you! See you soon.\",\n          \"message\": \"An email with all the event info was sent to you.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"waitlistMessages\":       {\n        \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n        \"confirmation\":         {\n          \"title\": \"Thanks! You've been added to the waitlist.\",\n          \"message\": \"We'll update you if additional spots become available.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"negativeMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Sorry You Can't Make It\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"submitActionLabel\": \"SUBMIT\"\n    },\n    \"checkout\":     {\n      \"title\": \"Add Your Details\",\n      \"submitActionLabel\": \"Continue\"\n    },\n    \"registrationClosed\":     {\n      \"message\": \"Registration is Closed\",\n      \"exploreEventsActionLabel\": \"See other events\"\n    }\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateControlRequest",
        "rpcResponseName": "UpdateControlResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Event",
      "methodName": "UpdateEvent",
      "serviceName": "EventManagement",
      "tag": "Event",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data to update (partial)\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n <!--ONLY:REST-->\n Fields will be auto-populated from the `event` entity unless added to the request explicitly.\n <!--END:ONLY:REST-->\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "required": false,
          "fieldMask": "RPC"
        },
                {
          "in": "BODY",
          "name": "language",
          "type": "string",
          "doc": " Content language code in ISO 639-1 format.\n Used for translating ticket PDF labels, registration form, automatic emails, etc.\n Supported languages: ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hu, id, it, ja, ko, ms, nl, no, pl, pt, ro, ru, sv, th, tl, tr, uk, zh.\n Defaults to en.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateEvent",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_UpdateEventResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an event's parameters. See [Partial Updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{id}",
        "links": [],
        "examples":         [
                    {
            "title": "Override event schedule and location",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/1551a333-06bf-4aa7-92b0-58a1ef413b9c' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"event\": {\n    \"scheduleConfig\": {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2021-05-16T10:00:00.000+03:00\",\n      \"endDate\": \"2021-05-16T10:30:00.000+03:00\",\n      \"timeZoneId\": \"EST\"\n    },\n    \"location\": {\n      \"name\": \"Wix Playground (2nd floor)\",\n      \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n      \"coordinates\": {\n        \"lat\": -74.008925,\n        \"lng\": 40.739254\n      },\n      \"type\": \"VENUE\"\n    }\n  },\n  \"fields\": {\n    \"paths\": [\n      \"event.location\",\n      \"event.scheduleConfig\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"location\":   {\n    \"name\": \"Wix Playground (2nd floor)\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2021-05-16T07:00:00Z\",\n      \"endDate\": \"2021-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2021, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2021\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"title\": \"My event (rescheduled & relocated)\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"slug\": \"my-event-rescheduled-relocated\",\n  \"language\": \"es\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-16T10:45:53Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"RSVP\",\n    \"status\": \"OPEN_RSVP\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"limit\": 20,\n      \"waitlist\": true\n    }},\n    \"ticketing\": {},\n    \"restrictedTo\": \"VISITOR\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event+%28rescheduled+%26+relocated%29&dates=20210516T070000Z/20210516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://johndoe.wixsite.com/mysite-123\",\n    \"path\": \"/events/my-event-rescheduled-relocated\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"feed\": {\"token\": \"<FEED TOKEN>\"},\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Partially update specific event fields",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/1551a333-06bf-4aa7-92b0-58a1ef413b9c' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"event\": {\n    \"title\": \"My event (rescheduled & relocated)\",\n    \"scheduleConfig\": {\n      \"startDate\": \"2021-05-16T10:00:00.000+03:00\",\n      \"endDate\": \"2021-05-16T10:30:00.000+03:00\"\n    },\n    \"location\": {\n      \"name\": \"Wix Playground (2nd floor)\"\n    }\n  },\n  \"language\": \"es\",\n  \"fields\": {\n    \"paths\": [\n      \"event.title\",\n      \"event.scheduleConfig.startDate\",\n      \"event.scheduleConfig.endDate\",\n      \"event.location.name\",\n      \"language\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"location\":   {\n    \"name\": \"Wix Playground (2nd floor)\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2021-05-16T07:00:00Z\",\n      \"endDate\": \"2021-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2021, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2021\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"title\": \"My event (rescheduled & relocated)\",\n  \"description\": \"A very cool event!\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"slug\": \"my-event-rescheduled-relocated\",\n  \"language\": \"es\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-16T10:45:53Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"RSVP\",\n    \"status\": \"OPEN_RSVP\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"limit\": 20,\n      \"waitlist\": true\n    }},\n    \"ticketing\": {},\n    \"restrictedTo\": \"VISITOR\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event+%28rescheduled+%26+relocated%29&dates=20210516T070000Z/20210516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://johndoe.wixsite.com/mysite-123\",\n    \"path\": \"/events/my-event-rescheduled-relocated\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"feed\": {\"token\": \"<FEED TOKEN>\"},\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Empty description",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/1551a333-06bf-4aa7-92b0-58a1ef413b9c' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"fields\": {\n    \"paths\": [\n      \"event.description\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"event\": {\n  \"id\": \"1551a333-06bf-4aa7-92b0-58a1ef413b9c\",\n  \"location\":   {\n    \"name\": \"Wix Playground (2nd floor)\",\n    \"coordinates\":     {\n      \"lat\": -74.00893,\n      \"lng\": 40.739254\n    },\n    \"address\": \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\": \"VENUE\"\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2021-05-16T07:00:00Z\",\n      \"endDate\": \"2021-05-16T07:30:00Z\",\n      \"timeZoneId\": \"EST\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": true\n    },\n    \"formatted\": \"May 16, 2021, 7:00 AM – 7:30 AM GMT\",\n    \"startDateFormatted\": \"May 16, 2021\",\n    \"startTimeFormatted\": \"7:00 AM\"\n  },\n  \"title\": \"My event (rescheduled & relocated)\",\n  \"description\": \"\",\n  \"about\": \"<p><strong>Register and find out!<\\/strong><\\/p>\",\n  \"mainImage\":   {\n    \"id\": \"921ee6c7e99548de900a8481386e0cd9.jpg\",\n    \"width\": 1920,\n    \"height\": 2704\n  },\n  \"slug\": \"my-event-rescheduled-relocated\",\n  \"language\": \"es\",\n  \"created\": \"2020-05-15T14:56:00.972Z\",\n  \"modified\": \"2020-05-16T10:45:53Z\",\n  \"status\": \"SCHEDULED\",\n  \"registration\":   {\n    \"type\": \"RSVP\",\n    \"status\": \"OPEN_RSVP\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"limit\": 20,\n      \"waitlist\": true\n    }},\n    \"ticketing\": {},\n    \"restrictedTo\": \"VISITOR\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=My+event+%28rescheduled+%26+relocated%29&dates=20210516T070000Z/20210516T073000Z&location=100+Gansevoort+St%2C+New+York%2C+NY+10014%2C+USA\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1551a333-06bf-4aa7-92b0-58a1ef413b9c\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://johndoe.wixsite.com/mysite-123\",\n    \"path\": \"/events/my-event-rescheduled-relocated\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\"\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"686b5432-ae6d-46aa-9efc-ca4a2f724c31\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"49a2a9bb-5d0c-44b1-b62a-52409ce09625\",\n  \"feed\": {\"token\": \"<FEED TOKEN>\"},\n  \"onlineConferencing\": {\"providerName\": \"\"}\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Set up recurring events",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/1b058fc4-addc-433b-a0fc-2a7a439b4514' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"event\": {\n    \"scheduleConfig\": {\n      \"recurrences\": {\n        \"occurrences\": [\n          {\n            \"startDate\": \"2021-09-16T10:00:00.000+03:00\",\n            \"endDate\": \"2021-09-16T10:30:00.000+03:00\",\n            \"timeZoneId\": \"EST\",\n            \"showTimeZone\": true\n          },\n          {\n            \"startDate\": \"2021-10-16T10:00:00.000+03:00\",\n            \"endDate\": \"2021-10-16T10:30:00.000+03:00\",\n            \"timeZoneId\": \"EST\"\n          },\n          {\n            \"startDate\": \"2021-11-16T10:00:00.000+03:00\",\n            \"endDate\": \"2021-11-16T10:30:00.000+03:00\",\n            \"timeZoneId\": \"EST\"\n          }\n        ]\n      }\n    }\n  },\n  \"fields\": {\n    \"paths\": [\n      \"event.scheduleConfig.recurrences\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"event\": {\n  \"id\": \"1b058fc4-addc-433b-a0fc-2a7a439b4514\",\n  \"location\":   {\n    \"name\": \"Location is TBD\",\n    \"type\": \"VENUE\",\n    \"tbd\": true\n  },\n  \"scheduling\":   {\n    \"config\":     {\n      \"scheduleTbd\": false,\n      \"startDate\": \"2021-08-17T18:00:00Z\",\n      \"endDate\": \"2021-08-17T22:00:00Z\",\n      \"timeZoneId\": \"Europe/Dublin\",\n      \"endDateHidden\": false,\n      \"showTimeZone\": false,\n      \"recurrences\":       {\n        \"occurrences\":         [\n                    {\n            \"startDate\": \"2021-09-16T07:00:00Z\",\n            \"endDate\": \"2021-09-16T07:30:00Z\",\n            \"timeZoneId\": \"EST\",\n            \"showTimeZone\": true\n          },\n                    {\n            \"startDate\": \"2021-10-16T07:00:00Z\",\n            \"endDate\": \"2021-10-16T07:30:00Z\",\n            \"timeZoneId\": \"EST\",\n            \"showTimeZone\": false\n          },\n                    {\n            \"startDate\": \"2021-11-16T07:00:00Z\",\n            \"endDate\": \"2021-11-16T07:30:00Z\",\n            \"timeZoneId\": \"EST\",\n            \"showTimeZone\": false\n          }\n        ],\n        \"status\": \"RECURRING\"\n      }\n    },\n    \"formatted\": \"17 August 2021, 19:00 – 23:00\",\n    \"startDateFormatted\": \"17 August 2021\",\n    \"startTimeFormatted\": \"19:00\"\n  },\n  \"title\": \"Recurring event\",\n  \"description\": \"\",\n  \"about\": \"\",\n  \"slug\": \"recurring-event-2021-08-17-19-00\",\n  \"language\": \"en\",\n  \"created\": \"2021-08-03T07:36:49.112Z\",\n  \"modified\": \"2021-08-03T07:40:59Z\",\n  \"status\": \"DRAFT\",\n  \"registration\":   {\n    \"type\": \"RSVP\",\n    \"status\": \"CLOSED\",\n    \"rsvpCollection\": {\"config\":     {\n      \"rsvpStatusOptions\": \"YES_ONLY\",\n      \"waitlist\": false\n    }},\n    \"ticketing\":     {\n      \"config\":       {\n        \"guestAssignedTickets\": false,\n        \"ticketLimitPerOrder\": 20\n      },\n      \"soldOut\": true\n    },\n    \"restrictedTo\": \"VISITOR\",\n    \"initialType\": \"RSVP\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"http://calendar.google.com/calendar/render?action=TEMPLATE&text=Recurring+event&dates=20210817T180000Z%2F20210817T220000Z&location=&details=Thank+you+for+registering+to+our+event%21%0A%0AWe%27re+looking+forward+to+seeing+you+there.%0A%0AHere+are+the+event+details%3A%0A%0ARecurring+event%0A17+August+2021%2C+19%3A00+%E2%80%93+23%3A00%0ALocation+is+TBD\",\n    \"ics\": \"https://www.wixevents.com/media/calendar/1b058fc4-addc-433b-a0fc-2a7a439b4514?token=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiZXZlbnRJZFwiOntcInZhbHVlXCI6XCIxYjA1OGZjNC1hZGRjLTQzM2ItYTBmYy0yYTdhNDM5YjQ1MTRcIn0sXCJvY0xpbmtcIjpudWxsfSIsImlhdCI6MTYyNzk3NjQ1OX0.gu2otDlwfGGdtfGbD7QQ0oH7lz9KLxE2uLjEEvE0Whc\"\n  },\n  \"eventPageUrl\":   {\n    \"base\": \"https://martynasa.wixsite.com/my-site-26\",\n    \"path\": \"/event-details/recurring-event-2021-08-17-19-00\"\n  },\n  \"form\":   {\n    \"controls\":     [\n            {\n        \"type\": \"NAME\",\n        \"system\": true,\n        \"name\": \"name\",\n        \"inputs\":         [\n                    {\n            \"name\": \"firstName\",\n            \"array\": false,\n            \"label\": \"First Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          },\n                    {\n            \"name\": \"lastName\",\n            \"array\": false,\n            \"label\": \"Last Name\",\n            \"additionalLabels\": {},\n            \"options\": [],\n            \"mandatory\": true,\n            \"maxLength\": 50,\n            \"type\": \"TEXT\",\n            \"labels\": []\n          }\n        ],\n        \"label\": \"First Name, Last Name\",\n        \"orderIndex\": 0,\n        \"id\": \"name\"\n      },\n            {\n        \"type\": \"INPUT\",\n        \"system\": true,\n        \"name\": \"email\",\n        \"inputs\": [        {\n          \"name\": \"email\",\n          \"array\": false,\n          \"label\": \"Email\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\",\n          \"labels\": []\n        }],\n        \"label\": \"Email\",\n        \"orderIndex\": 1,\n        \"id\": \"email\"\n      }\n    ],\n    \"messages\":     {\n      \"rsvp\":       {\n        \"rsvpYesOption\": \"I'm Going\",\n        \"rsvpNoOption\": \"Not Going\",\n        \"positiveMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Thank you! See you soon.\",\n            \"message\": \"An email with all the event info was sent to you.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"waitlistMessages\":         {\n          \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n          \"confirmation\":           {\n            \"title\": \"Thanks! You've been added to the waitlist.\",\n            \"message\": \"We'll update you if additional spots become available.\",\n            \"addToCalendarActionLabel\": \"Add to Calendar\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"negativeMessages\":         {\n          \"title\": \"Add Your Details\",\n          \"confirmation\":           {\n            \"title\": \"Sorry You Can't Make It\",\n            \"shareActionLabel\": \"Share\"\n          }\n        },\n        \"submitActionLabel\": \"SUBMIT\"\n      },\n      \"checkout\":       {\n        \"title\": \"Add Your Details\",\n        \"submitActionLabel\": \"Continue\"\n      },\n      \"registrationClosed\":       {\n        \"message\": \"Registration is Closed\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      },\n      \"ticketsUnavailable\":       {\n        \"message\": \"Tickets Are Not on Sale\",\n        \"exploreEventsActionLabel\": \"See other events\"\n      }\n    }\n  },\n  \"dashboard\":   {\n    \"rsvpSummary\":     {\n      \"total\": 0,\n      \"yes\": 0,\n      \"no\": 0,\n      \"waitlist\": 0\n    },\n    \"ticketingSummary\":     {\n      \"tickets\": 0,\n      \"currencyLocked\": false,\n      \"orders\": 0\n    }\n  },\n  \"instanceId\": \"66a805c4-ed86-4763-a7b1-2d876c293294\",\n  \"guestListConfig\": {\"publicGuestList\": true},\n  \"userId\": \"5f8e2124-5c31-48cd-8464-eaf9c6211054\",\n  \"feed\": {\"token\": \"fvOxTvE1k7GtcT_il6HNZ7pcVDtp5070WmPPm3Ob1bc.CgwIi-ajiAYQsJiEjQMSJDE0MDYwM2FkLWFmOGQtODRhNS0yYzgwLWEwZjYwY2I0NzM1MRokMWIwNThmYzQtYWRkYy00MzNiLWEwZmMtMmE3YTQzOWI0NTE0IgZldmVudHMqHQoTd2l4LmZlZWQuRmVlZEFjY2VzcxIGCgQABQQDKiwKHndpeC5jb21tZW50cy52MC5Db21tZW50c0FjY2VzcxIKCgEBEgUBBAIDAComCht3aXguY29tbWVudHMuQ29tbWVudHNBY2Nlc3MSBwoBABICAwIqHwodd2l4LnJlYWN0aW9ucy5SZWFjdGlvbnNBY2Nlc3MyKAokNWY4ZTIxMjQtNWMzMS00OGNkLTg0NjQtZWFmOWM2MjExMDU0EAEyKAokNWY4ZTIxMjQtNWMzMS00OGNkLTg0NjQtZWFmOWM2MjExMDU0EAI\"},\n  \"onlineConferencing\":   {\n    \"session\":     {\n      \"hostLink\": \"https://www.wixevents.com/oc?start=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJzdGFydFwiLFwiaW5zdGFuY2VJZFwiOlwiNjZhODA1YzQtZWQ4Ni00NzYzLWE3YjEtMmQ4NzZjMjkzMjk0XCIsXCJldmVudElkXCI6XCIxYjA1OGZjNC1hZGRjLTQzM2ItYTBmYy0yYTdhNDM5YjQ1MTRcIn0iLCJpYXQiOjE2Mjc5NzY0NTl9.iMP00ublvG0URjwhy4L3H0oO1s8OGd5_NGj3592VQIM\",\n      \"guestLink\": \"https://www.wixevents.com/oc?join=JWS.eyJraWQiOiJpb21iOUJ0eSIsImFsZyI6IkhTMjU2In0.eyJkYXRhIjoie1wiYWN0aW9uXCI6XCJqb2luXCIsXCJpbnN0YW5jZUlkXCI6XCI2NmE4MDVjNC1lZDg2LTQ3NjMtYTdiMS0yZDg3NmMyOTMyOTRcIixcImV2ZW50SWRcIjpcIjFiMDU4ZmM0LWFkZGMtNDMzYi1hMGZjLTJhN2E0MzliNDUxNFwifSIsImlhdCI6MTYyNzk3NjQ1OX0.Upk8o8ti1-tsRNVqLwt5zOVCelLWIeFRvFEg73ouBG8\"\n    },\n    \"providerName\": \"\"\n  },\n  \"assignedContactsLabel\": \"custom.recurring-event-8-17-21-7-00-pm\",\n  \"agenda\": {\"enabled\": false}\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateEventRequest",
        "rpcResponseName": "UpdateEventResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Messages",
      "methodName": "UpdateMessages",
      "serviceName": "FormBuilder",
      "tag": "Registration Form",
      "permissions": [      {
        "name": "Manage Events",
        "description": "Request permission to read, create and change events."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "fields",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of this resource to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "messages",
          "type": "All APIs.Wix Events._wix_events_form_FormMessages",
          "doc": " Set of configured form messages.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateMessages",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_form_UpdateMessagesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates draft form messages, as displayed in the Wix UI before, during, and after the registration flow.\n Configurable messages include form titles, response labels, \"thank you\" messages, and call-to-action texts.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/form/messages",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/form/messages' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"messages\": {\n    \"rsvp\": {\n      \"rsvpYesOption\": \"I will attend\",\n      \"positiveMessages\": {\n        \"confirmation\": {\n          \"title\": \"Thank you!\"\n        }\n      }\n    },\n    \"checkout\": {\n      \"submitActionLabel\": \"Proceed\"\n    },\n    \"registrationClosed\": {\n      \"message\": \"Check our news page for updates.\"\n    }\n  },\n  \"fields\": {\n    \"paths\": [\n      \"messages.rsvp.rsvpYesOption\",\n      \"messages.rsvp.positiveMessages.confirmation.title\",\n      \"messages.checkout.submitActionLabel\",\n      \"messages.registrationClosed.message\"\n    ]\n  }\n}\nEOF"],
          "response": ["{\"form\": {\n  \"controls\":   [\n        {\n      \"type\": \"NAME\",\n      \"system\": true,\n      \"name\": \"name\",\n      \"inputs\":       [\n                {\n          \"name\": \"firstName\",\n          \"array\": false,\n          \"label\": \"First Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        },\n                {\n          \"name\": \"lastName\",\n          \"array\": false,\n          \"label\": \"Last Name\",\n          \"additionalLabels\": {},\n          \"options\": [],\n          \"mandatory\": true,\n          \"maxLength\": 50,\n          \"type\": \"TEXT\"\n        }\n      ],\n      \"label\": \"First Name, Last Name\",\n      \"orderIndex\": 0,\n      \"id\": \"name\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": true,\n      \"name\": \"email\",\n      \"inputs\": [      {\n        \"name\": \"email\",\n        \"array\": false,\n        \"label\": \"Email\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": true,\n        \"maxLength\": 50,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Email\",\n      \"orderIndex\": 1,\n      \"id\": \"email\"\n    },\n        {\n      \"type\": \"INPUT\",\n      \"system\": false,\n      \"name\": \"phone-1a4acde6c958ff66\",\n      \"inputs\": [      {\n        \"name\": \"phone-1a4acde6c958ff66\",\n        \"array\": false,\n        \"label\": \"Work phone (line)\",\n        \"additionalLabels\": {},\n        \"options\": [],\n        \"mandatory\": false,\n        \"maxLength\": 25,\n        \"type\": \"TEXT\"\n      }],\n      \"label\": \"Work phone (line)\",\n      \"orderIndex\": 2,\n      \"id\": \"phone-1a4acde6c958ff66\"\n    }\n  ],\n  \"messages\":   {\n    \"rsvp\":     {\n      \"rsvpYesOption\": \"I will attend\",\n      \"rsvpNoOption\": \"Not Going\",\n      \"positiveMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Thank you!\",\n          \"message\": \"An email with all the event info was sent to you.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"waitlistMessages\":       {\n        \"title\": \"Looks Like This Event Is Full. Join the waiting list\",\n        \"confirmation\":         {\n          \"title\": \"Thanks! You've been added to the waitlist.\",\n          \"message\": \"We'll update you if additional spots become available.\",\n          \"addToCalendarActionLabel\": \"Add to Calendar\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"negativeMessages\":       {\n        \"title\": \"Add Your Details\",\n        \"confirmation\":         {\n          \"title\": \"Sorry You Can't Make It\",\n          \"shareActionLabel\": \"Share\"\n        }\n      },\n      \"submitActionLabel\": \"SUBMIT\"\n    },\n    \"checkout\":     {\n      \"title\": \"Add Your Details\",\n      \"submitActionLabel\": \"Proceed\"\n    },\n    \"registrationClosed\":     {\n      \"message\": \"Check our news page for updates.\",\n      \"exploreEventsActionLabel\": \"See other events\"\n    }\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateMessagesRequest",
        "rpcResponseName": "UpdateMessagesResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Order",
      "methodName": "UpdateOrder",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "orderNumber",
        "fields"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "checkoutForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Checkout form.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether order is archived.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_UpdateOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an order's `checkoutForm` and/or `archived` status.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders/{orderNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders/FM9X-EHKF-ZO' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"fields\": {\n    \"paths\": [\n      \"checkoutForm\"\n    ]\n  },\n  \"checkoutForm\": {\n    \"inputValues\": [\n      {\n        \"inputName\": \"firstName\",\n        \"value\": \"JonnyJohn\"\n      },\n      {\n        \"inputName\": \"lastName\",\n        \"value\": \"DoudyDoe\"\n      },\n      {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@somedomain.com\"\n      }\n    ]\n  }\n}\nEOF"],
          "response": ["{\"order\": {\n  \"orderNumber\": \"FM9X-EHKF-ZO\",\n  \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n  \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n  \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n  \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n  \"memberId\": \"\",\n  \"created\": \"2020-04-07T06:42:35.381Z\",\n  \"firstName\": \"JonnyJohn\",\n  \"lastName\": \"DoudyDoe\",\n  \"email\": \"john.doe@somedomain.com\",\n  \"checkoutForm\": {\"inputValues\":   [\n        {\n      \"inputName\": \"firstName\",\n      \"value\": \"JonnyJohn\"\n    },\n        {\n      \"inputName\": \"lastName\",\n      \"value\": \"DoudyDoe\"\n    },\n        {\n      \"inputName\": \"email\",\n      \"value\": \"john.doe@somedomain.com\"\n    }\n  ]},\n  \"confirmed\": true,\n  \"status\": \"PAID\",\n  \"method\": \"payPal\",\n  \"ticketsQuantity\": 1,\n  \"totalPrice\":   {\n    \"amount\": \"10.00\",\n    \"currency\": \"EUR\"\n  },\n  \"ticketsPdf\": \"<url_to_pdf>\",\n  \"tickets\": [  {\n    \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n    \"name\": \"VIP enterance\",\n    \"price\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"JonnyJohn DoudyDoe\",\n    \"guestFullName\": \"Sarah Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": true,\n      \"firstName\": \"Sarah\",\n      \"lastName\": \"Doe\",\n      \"email\": \"sarah.doe@somedomain.com\",\n      \"form\": {\"inputValues\":       [\n                {\n          \"inputName\": \"email\",\n          \"value\": \"sarah.doe@somedomain.com\"\n        },\n                {\n          \"inputName\": \"lastName\",\n          \"value\": \"Doe\"\n        },\n                {\n          \"inputName\": \"firstName\",\n          \"value\": \"Sarah\"\n        }\n      ]},\n      \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n    },\n    \"archived\": false,\n    \"ticketPdfUrl\": \"<url_to_pdf>\",\n    \"anonymized\": false\n  }],\n  \"archived\": false,\n  \"anonymized\": false,\n  \"fullName\": \"JonnyJohn DoudyDoe\",\n  \"fullyCheckedIn\": false,\n  \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateOrderRequest",
        "rpcResponseName": "UpdateOrderResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Policy",
      "methodName": "UpdatePolicy",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "policyId",
        "policy",
        "policy.name",
        "policy.body"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "policyId",
          "type": "string",
          "doc": " Policy ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "policy",
          "type": "All APIs.Wix Events._wix_events_policies_PolicyData",
          "doc": " Policy data.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdatePolicy",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_policies_UpdatePolicyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a policy.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/policies/{policyId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/policies/0ace566b-ab83-4f7f-ae24-f401d94e81a4' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"eventId\": \"b16f3b55-78a5-4fff-8098-ddafa0607eea\",\n  \"policyId\": \"0ace566b-ab83-4f7f-ae24-f401d94e81a4\",\n  \"policy\": {\n    \"name\": \"Terms and conditions\",\n    \"body\": \"Agree to something\",\n    \"sortIndex\": 3\n  }\n}\nEOF"],
          "response": ["{\"policy\": {\n  \"id\": \"0ace566b-ab83-4f7f-ae24-f401d94e81a4\",\n  \"name\": \"Terms and conditions\",\n  \"body\": \"Agree to something\",\n  \"updatedDate\": \"2020-07-15T09:33:13.208Z\",\n  \"sortIndex\": 3\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdatePolicyRequest",
        "rpcResponseName": "UpdatePolicyResponse",
        "artifactId": "com.wixpress.events.events-policy-management-v1-proxy"
      },
      "customLabels": []
    },
        {
      "name": "Update RSVP",
      "methodName": "UpdateRsvp",
      "serviceName": "RsvpManagement",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Manage Guest List",
        "description": "Request permission to read, create and change event tickets, guest lists and RSVPs."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "rsvpId",
        "fields"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of RSVP to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "rsvpForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " RSVP form response.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " RSVP response status.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "options",
          "type": "All APIs.Wix Events._wix_events_rsvp_ModificationOptions",
          "doc": " Update RSVP options.\n WIX_EVENTS.MANAGE_RSVP permission is required.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateRsvp",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_UpdateRsvpResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an RSVP. See [partial updates](https://dev.wix.com/api/wix-events/partial-updates).\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/rsvp/{rsvpId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/rsvp/7c9dbf44-359c-47c7-a3e4-02638ab851c4' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n\t\"rsvpForm\": {\n        \"inputValues\": [\n          {\n            \"inputName\": \"firstName\",\n            \"value\": \"John\"\n          },\n          {\n            \"inputName\": \"lastName\",\n            \"value\": \"Doe\"\n          },\n          {\n            \"inputName\": \"email\",\n            \"value\": \"john.doe@example.com\"\n          }\n        ]\n     },\n     \"status\": \"NO\",\n      \"fields\": {\n         \"paths\": [\n           \"rsvpForm\",\n           \"status\"\n         ]\n       }\n}\nEOF"],
          "response": ["{\"rsvp\": {\n  \"id\": \"7c9dbf44-359c-47c7-a3e4-02638ab851c4\",\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"contactId\": \"46df035c-a6af-4947-8675-4306255ba88f\",\n  \"memberId\": \"\",\n  \"created\": \"2020-05-18T15:07:54Z\",\n  \"modified\": \"2020-05-18T15:38:20Z\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"rsvpForm\": {\"inputValues\":   [\n        {\n      \"inputName\": \"firstName\",\n      \"value\": \"John\"\n    },\n        {\n      \"inputName\": \"lastName\",\n      \"value\": \"Doe\"\n    },\n        {\n      \"inputName\": \"email\",\n      \"value\": \"john.doe@example.com\"\n    }\n  ]},\n  \"status\": \"NO\",\n  \"totalGuests\": 1,\n  \"guests\": [  {\n    \"index\": 0,\n    \"fullName\": \"John Doe\",\n    \"id\": 1\n  }],\n  \"anonymized\": false\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateRsvpRequest",
        "rpcResponseName": "UpdateRsvpResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Schedule Item",
      "methodName": "UpdateScheduleItem",
      "serviceName": "ScheduleManagement",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "itemId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "item",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItemData",
          "doc": " Schedule item.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateScheduleItem",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_UpdateScheduleItemResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates existing schedule item.\n All modifications are performed on a draft schedule, even if schedule item has already been published.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/schedule/draft/{itemId}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/agenda/draft/80a28db1-672b-45db-a62c-5315ee07ae22' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateScheduleItemRequest",
        "rpcResponseName": "UpdateScheduleItemResponse",
        "artifactId": "com.wixpress.events.wix-events-agenda"
      },
      "customLabels": []
    },
        {
      "name": "Update Ticket",
      "methodName": "UpdateTicket",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Manage Guest List",
        "description": "Request permission to read, create and change event tickets, guest lists and RSVPs."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "fields",
        "eventId",
        "ticketNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of this resource to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is archived.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "guestDetails",
          "type": "All APIs.Wix Events._wix_events_ticketing_UpdateTicketRequest_GuestDetailsUpdate",
          "doc": " Assigned guest details.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateTicket",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_UpdateTicketResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a ticket. See [Partial Updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/{ticketNumber}",
        "links": [],
        "examples":         [
                    {
            "title": "Archive ticket",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets/FNVL-NIJT-WP021' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"archived\": true,\n  \"fields\": {\n    \"paths\": [\n      \"archived\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"ticket\": {\n  \"ticketNumber\": \"FNVL-NIJT-WP021\",\n  \"orderNumber\": \"FNVL-NIJT-WP\",\n  \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n  \"name\": \"Early Bird\",\n  \"price\":   {\n    \"amount\": \"12.34\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n  \"orderStatus\": \"PAID\",\n  \"orderArchived\": false,\n  \"orderFullName\": \"John Doe\",\n  \"guestDetails\":   {\n    \"guestAssigned\": false,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n  },\n  \"archived\": true,\n  \"anonymized\": false,\n  \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n}} "],
            "type": "curl",
            "extra": {"description": "Ticket can be archived and unarchived through ticket update."}
          },
                    {
            "title": "Update form of ticket guest",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets/FNVL-NIJT-WP021' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"guestDetails\": {\n    \"form\": {\n      \"inputValues\": [\n        {\n          \"inputName\": \"custom\",\n          \"values\": [\n            \"Red\",\n            \"green\"\n          ]\n        },\n        {\n          \"inputName\": \"email\",\n          \"value\": \"john.doe@example.com\"\n        },\n        {\n          \"inputName\": \"lastName\",\n          \"value\": \"Doe\"\n        },\n        {\n          \"inputName\": \"firstName\",\n          \"value\": \"Jonh\"\n        }\n      ]\n    }\n  },\n  \"fields\": {\n    \"paths\": [\n      \"guestDetails.form\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"ticket\": {\n  \"ticketNumber\": \"FNVL-NIJT-WP021\",\n  \"orderNumber\": \"FNVL-NIJT-WP\",\n  \"ticketDefinitionId\": \"FNVL-NIJT-WP\",\n  \"name\": \"Early Bird\",\n  \"price\":   {\n    \"amount\": \"10.00\",\n    \"currency\": \"EUR\"\n  },\n  \"free\": false,\n  \"policy\": \"This is your event ticket. Ticket holders must present tickets upon entry.\",\n  \"orderStatus\": \"OFFLINE_PENDING\",\n  \"orderArchived\": false,\n  \"orderFullName\": \"Jonh Doe\",\n  \"guestFullName\": \"Jonh Doe\",\n  \"guestDetails\":   {\n    \"guestAssigned\": true,\n    \"firstName\": \"Jonh\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"form\": {\"inputValues\":     [\n            {\n        \"inputName\": \"custom\",\n        \"value\": \"\",\n        \"values\":         [\n          \"Red\",\n          \"green\"\n        ],\n        \"number\": 0\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\",\n        \"values\": [],\n        \"number\": 0\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\",\n        \"values\": [],\n        \"number\": 0\n      },\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"Jonh\",\n        \"values\": [],\n        \"number\": 0\n      }\n    ]},\n    \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n  },\n  \"archived\": false,\n  \"ticketPdf\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\",\n  \"memberId\": \"babf399a-4e8e-4e19-8bcc-f4f9c298ec63\",\n  \"anonymized\": false,\n  \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n}} "],
            "type": "curl",
            "extra": {"description": "Ticket guest form can be updated if a guest is assigned to the ticket."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateTicketRequest",
        "rpcResponseName": "UpdateTicketResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    },
        {
      "name": "Update Ticket Definition",
      "methodName": "UpdateTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "fields",
        "definition.pricing.price",
        "eventId",
        "definitionId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "definition",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of ticket definition to update.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_UpdateTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a ticket definition. See [partial updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions/{definitionId}",
        "links": [],
        "examples":         [
                    {
            "title": "Update price and limit",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions/fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"price\": {\n      \"amount\": \"49.99\",\n      \"currency\": \"USD\"\n    },\n    \"name\": \"VIP ticket\",\n    \"limited\": false\n  },\n  \"fields\": {\n    \"paths\": [\n      \"price\",\n      \"quantity\",\n      \"limited\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94\",\n  \"price\":   {\n    \"amount\": \"49.99\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 3,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": false\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Hide ticket definition",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions/dd042646-8fc2-4d08-9e90-bfabb98a7b28' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"hidden\": true\n  },\n  \"fields\": {\n    \"paths\": [\n      \"hidden\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"dd042646-8fc2-4d08-9e90-bfabb98a7b28\",\n  \"price\":   {\n    \"amount\": \"49.99\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 1,\n  \"policy\": \"Some policy\",\n  \"dashboard\":   {\n    \"hidden\": true,\n    \"sold\": 0,\n    \"limited\": false\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {"description": "This way ticket definition can be hidden from sales."}
          },
                    {
            "title": "Update ticket definition sale period",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/0f018a42-fdb2-45d9-a008-6d0dd74b90ec/tickets/definitions/d092fd27-35e9-433e-838c-7980708981a0' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"salePeriod\": {\n      \"startDate\": \"2029-01-01T09:51:00Z\",\n      \"endDate\": \"2030-09-27T09:55:00Z\",\n      \"hideNotOnSale\": true\n    }\n  },\n  \"fields\": {\n    \"paths\": [\n      \"salePeriod\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"d092fd27-35e9-433e-838c-7980708981a0\",\n  \"price\":   {\n    \"amount\": \"0.00\",\n    \"currency\": \"EUR\",\n    \"value\": \"0.00\"\n  },\n  \"free\": true,\n  \"name\": \"Secret Ticket\",\n  \"description\": \"Patience is virtue\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 4,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": false\n  },\n  \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n  \"salePeriod\":   {\n    \"startDate\": \"2029-01-01T09:51:00Z\",\n    \"endDate\": \"2030-09-27T09:55:00Z\",\n    \"hideNotOnSale\": true\n  },\n  \"saleStatus\": \"SALE_SCHEDULED\"\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateTicketDefinitionRequest",
        "rpcResponseName": "UpdateTicketDefinitionResponse",
        "artifactId": "com.wixpress.wix-events-web"
      },
      "customLabels": []
    }
  ],
  "events":   [
        {
      "type": "_wix_events_ticketing_events_OrderDeleted",
      "name": "Order Deleted Webhook",
      "docs":       {
        "summary": " This event is triggered when an order is deleted via GDPR request.\n",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/OrderManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventStarted",
      "name": "Event Started Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventReminder",
      "name": "Event Reminder Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventEnded",
      "name": "Event Ended Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_OrderUpdated",
      "name": "Order Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/TicketManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_OrderConfirmed",
      "name": "Order Confirmed Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_OrderPaid",
      "name": "Order Paid Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_ReservationCreated",
      "name": "Reservation Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Read Basic Events Order Info",
          "description": "Request permission to read basic order info."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_ReservationUpdated",
      "name": "Reservation Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Read Basic Events Order Info",
          "description": "Request permission to read basic order info."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_TicketDefinitionUpdated",
      "name": "Ticket Definition Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/TicketDefinitionManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_TicketDefinitionCreated",
      "name": "Ticket Definition Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/TicketDefinitionManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_TicketDefinitionDeleted",
      "name": "Ticket Definition Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/TicketDefinitionManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventUpdated",
      "name": "Event Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventCanceled",
      "name": "Event Canceled Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventCreated",
      "name": "Event Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventPublished",
      "name": "Event Published Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_events_EventDeleted",
      "name": "Event Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/EventManagement.proto"
      },
      "topic": "wix-events.event",
      "tag": "Event",
      "permissions": [      {
        "name": "Read Events",
        "description": "Request permission to read basic event info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_rsvp_events_RsvpCreated",
      "name": "Rsvp Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/rsvp/RsvpManagement.proto"
      },
      "topic": "wix-events.rsvp",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_rsvp_events_RsvpDeleted",
      "name": "Rsvp Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/rsvp/RsvpManagement.proto"
      },
      "topic": "wix-events.rsvp",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_rsvp_events_RsvpUpdated",
      "name": "Rsvp Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/rsvp/RsvpManagement.proto"
      },
      "topic": "wix-events.rsvp",
      "tag": "RSVP",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_PolicyCreatedDomainEvent",
      "name": "Policy Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/policies/PolicyManagement.proto"
      },
      "topic": "domain_events_wix.events.v1.policy",
      "tag": "Policy",
      "permissions": [],
      "customLabels": [],
      "eventType": "wix.events.v1.policy_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_events_PolicyDeletedDomainEvent",
      "name": "Policy Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/policies/PolicyManagement.proto"
      },
      "topic": "domain_events_wix.events.v1.policy",
      "tag": "Policy",
      "permissions": [],
      "customLabels": [],
      "eventType": "wix.events.v1.policy_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_events_PolicyUpdatedDomainEvent",
      "name": "Policy Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/policies/PolicyManagement.proto"
      },
      "topic": "domain_events_wix.events.v1.policy",
      "tag": "Policy",
      "permissions": [],
      "customLabels": [],
      "eventType": "wix.events.v1.policy_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_events_ticketing_events_OrderInitiated",
      "name": "Order Initiated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_events_form_FormInputControlAddedDomainEvent",
      "displayName": "Form Input Control Added Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v1.form`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `form_input_control_added`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Wix Events._wix_events_form_FormInputControlAddedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "FormInputControlAdded ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlAddedActionEvent",
      "displayName": "Form Input Control Added Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Wix Events._wix_events_form_FormInputControlAdded",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlUpdatedDomainEvent",
      "displayName": "Form Input Control Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v1.form`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `form_input_control_updated`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Wix Events._wix_events_form_FormInputControlUpdatedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "FormInputControlUpdated ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlUpdatedActionEvent",
      "displayName": "Form Input Control Updated Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Wix Events._wix_events_form_FormInputControlUpdated",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlDeletedDomainEvent",
      "displayName": "Form Input Control Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v1.form`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `form_input_control_deleted`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Wix Events._wix_events_form_FormInputControlDeletedActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "FormInputControlDeleted ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlDeletedActionEvent",
      "displayName": "Form Input Control Deleted Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "All APIs.Wix Events._wix_events_form_FormInputControlDeleted",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PolicyUpdatedDomainEvent",
      "displayName": "Policy Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v1.policy`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Wix Events._wix_events_PolicyEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Policy ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PolicyEntityUpdatedEvent",
      "displayName": "Policy Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Wix Events._wix_events_Policy",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PolicyDeletedDomainEvent",
      "displayName": "Policy Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v1.policy`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Wix Events._wix_events_PolicyEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Policy ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PolicyEntityDeletedEvent",
      "displayName": "Policy Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PolicyCreatedDomainEvent",
      "displayName": "Policy Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v1.policy`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Wix Events._wix_events_PolicyEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Policy ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PolicyEntityCreatedEvent",
      "displayName": "Policy Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Wix Events._wix_events_Policy",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_NotificationConfigUpdatedDomainEvent",
      "displayName": "Notification Config Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v1.notification_config`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Wix Events._wix_events_notifications_NotificationConfigEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "NotificationConfig ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_NotificationConfigEntityUpdatedEvent",
      "displayName": "Notification Config Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "All APIs.Wix Events._wix_events_notifications_NotificationConfig",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " Country code.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Subdivision. Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Zip/postal code.\n"
        },
                {
          "name": "street",
          "type": "All APIs.Wix Events._wix_common_Address_street",
          "doc": ""
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Free text providing more detailed address info. Usually contains Apt, Suite, and Floor.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Wix Events._wix_common_StreetAddress",
          "doc": " Street name and number.\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line, usually street and number as free text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Subdivision",
      "displayName": "Subdivision Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Short subdivision code.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Subdivision full name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " Address latitude.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Address longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " country code\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " subdivision (usually state or region) code according to ISO 3166-2\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " city name\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " zip/postal code\n"
        },
                {
          "name": "street",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Address_street",
          "doc": ""
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Free text providing more detailed address info. Usually contains Apt, Suite, Floor\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " A string containing the human-readable address of this location\n"
        },
                {
          "name": "hint",
          "type": "string",
          "doc": " Free text for human-to-human textual orientation aid purposes\n"
        },
                {
          "name": "geocode",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_AddressLocation",
          "doc": " coordinates of the physical address\n"
        },
                {
          "name": "countryFullname",
          "type": "string",
          "doc": " country full-name\n"
        },
                {
          "name": "subdivisions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._com_wix_events_upstream_wix_common_Subdivision"]
          },
          "doc": " multi-level subdivisions from top to bottom\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_StreetAddress",
          "doc": " a break down of the street to number and street name\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line (usually street and number) as free text\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Subdivision",
      "displayName": "Subdivision Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " subdivision short code\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " subdivision full-name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " street number\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " street name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": ""
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text. Optional.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Events._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": "Name of the field to sort by\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Events._wix_common_SortOrder",
          "doc": "Sort order (ASC/DESC). Defaults to ASC\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._com_wix_events_upstream_wix_common_Sorting"]
          },
          "doc": " Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paging",
        "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Paging",
        "doc": " Pointer to page of results using offset.\n See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_Money",
      "displayName": "Money Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "string",
          "doc": " Decimal amount representation. Deprecated, use `value` instead.\n",
          "deprecated": true
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " ISO 4217 format of the currency i.e. `USD`.\n"
        },
                {
          "name": "value",
          "type": "string",
          "doc": " Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SiteUrl",
      "displayName": "Site Url Object",
      "locations": [],
      "docs":       {
        "summary": " Site URL components\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "base",
          "type": "string",
          "doc": " Base URL. For premium sites, this will be the domain.\n For free sites, this would be site URL (e.g `mysite.wixsite.com/mysite`)\n"
        },
                {
          "name": "path",
          "type": "string",
          "doc": " The path to that page - e.g `/my-events/weekly-meetup-2`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "countsMapEntry",
      "displayName": "counts Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet counts aggregated per value\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "integer",
        "doc": "`key` of type string, `value` of type integer"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FacetCounts",
      "displayName": "Facet Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "counts",
        "type": "All APIs.Wix Events.countsMapEntry",
        "doc": "Set of key-value pairs. Facet counts aggregated per value\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ResponseMetaData",
      "displayName": "Response Meta Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset of items.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of matching items.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SearchMetaData_Result",
      "displayName": "Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Entity ID\n"
        },
                {
          "name": "score",
          "type": "string",
          "doc": " Entity score.\n Higher is more relevant to search phrase.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SearchMetaData",
      "displayName": "Search Meta Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_SearchMetaData_Result"]
        },
        "doc": " Search results\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CheckIn",
      "displayName": "Check In Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "created",
        "type": "string",
        "doc": " Time of check-in\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TimeDuration",
      "displayName": "Time Duration Object",
      "locations": [],
      "docs":       {
        "summary": " A coarse-grained representation of time duration divided into whole constituting components of days, hours, and minutes.\n For example, 25.5 hours duration is represented as `{ days: 1, hours: 1, minutes: 30 }`.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "days",
          "type": "integer",
          "doc": " Number of days\n"
        },
                {
          "name": "hours",
          "type": "integer",
          "doc": " Number of hours\n"
        },
                {
          "name": "minutes",
          "type": "integer",
          "doc": " Number of minutes\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TimeInterval",
      "displayName": "Time Interval Object",
      "locations": [],
      "docs":       {
        "summary": " Time interval on the timeline between two points in time.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "start",
          "type": "string",
          "doc": " Start of the interval. Inclusive.\n"
        },
                {
          "name": "end",
          "type": "string",
          "doc": " End of the interval. Non-inclusive.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n Defaults to `Etc/UTC` when not set.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OriginatedFrom",
      "displayName": "Originated From Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Instance ID. Indicates the original app instance which current entity originated from.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID. Indicates the original event which current entity originated from.\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Event ID. Indicates the original entity which current entity originated from.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Agenda",
      "displayName": "Agenda Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": ""
        },
                {
          "name": "pageUrl",
          "type": "All APIs.Wix Events._wix_events_SiteUrl",
          "doc": " Agenda page URL.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CalendarLinks",
      "displayName": "Calendar Links Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "google",
          "type": "string",
          "doc": " \"Add to Google calendar\" URL.\n"
        },
                {
          "name": "ics",
          "type": "string",
          "doc": " \"Download ICS calendar file\" URL.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_Category",
      "displayName": "Category Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Category ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Category name.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Category creation timestamp.\n",
          "readOnly": true
        },
                {
          "name": "assignedEventsCount",
          "type": "integer",
          "doc": " Assigned events count. Deleted events are excluded.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "counts",
          "type": "All APIs.Wix Events._wix_events_categories_CategoryCounts",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "states",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_CategoryState_State"]
          },
          "doc": "",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_CategoryCounts",
      "displayName": "Category Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "assignedEventsCount",
          "type": "integer",
          "doc": " Assigned events count. Deleted events are excluded.\n"
        },
                {
          "name": "assignedDraftEventsCount",
          "type": "integer",
          "doc": " Assigned draft events count.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_Form",
      "displayName": "Form Object",
      "locations": [],
      "docs":       {
        "summary": " The form defines which elements are rendered in the Wix UI during the registration process (RSVP or checkout).\n It also contains customizable messages and labels.\n\n\n A form is an ordered list of controls (blocks), which accept guest information into a field input.\n\n Each control contains one or more nested inputs. For example, `Name` control has two inputs:\n - First Name\n - Last Name\n\n By default, name and email controls are always required and are pinned to the top of the form.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "controls",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_form_InputControl"]
          },
          "doc": " Nested fields as an ordered list.\n"
        },
                {
          "name": "messages",
          "type": "All APIs.Wix Events._wix_events_form_FormMessages",
          "doc": " Set of configured form messages.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "additionalLabelsMapEntry",
      "displayName": "additional Labels Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Additional labels for multi-valued fields such as address.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_Input",
      "displayName": "Input Object",
      "locations": [],
      "docs":       {
        "summary": " An input of one or multiple text values\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Field name.\n"
        },
                {
          "name": "array",
          "type": "boolean",
          "doc": " Deprecated: use `ValueType.TEXT_ARRAY`.\n",
          "deprecated": true
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Main field label\n"
        },
                {
          "name": "additionalLabels",
          "type": "All APIs.Wix Events.additionalLabelsMapEntry",
          "doc": "Set of key-value pairs. Additional labels for multi-valued fields such as address.\n"
        },
                {
          "name": "options",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Predefined choice options for fields, such as dropdown.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether field is mandatory.\n"
        },
                {
          "name": "maxLength",
          "type": "integer",
          "doc": " Maximum number of accepted characters (relevant for text fields).\n"
        },
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_form_ValueType",
          "doc": " Type which determines field format.\n Used to validate submitted response.\n"
        },
                {
          "name": "maxSize",
          "type": "integer",
          "doc": " A maximum accepted values for array input.\n Only applicable for inputs of valueType: TEXT_ARRAY.\n"
        },
                {
          "name": "defaultOptionSelection",
          "type": "All APIs.Wix Events._wix_events_form_OptionSelection",
          "doc": " Preselected option.\n Currently only applicable for dropdown.\n"
        },
                {
          "name": "labels",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_form_Label"]
          },
          "doc": " Additional labels for multi-valued fields such as address.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_OptionSelection",
      "displayName": "Option Selection Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "selectedOption",
        "type": "All APIs.Wix Events._wix_events_form_OptionSelection_SelectedOption",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_OptionSelection_SelectedOption",
      "displayName": "Selected Option Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "optionIndex",
          "type": "integer",
          "doc": " 0-based index from predefined `input.options` which is selected initially.\n"
        },
                {
          "name": "placeholderText",
          "type": "string",
          "doc": " Placeholder hint describing expected choices (such as \"Please select\").\n Considered an empty choice.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_form_Label",
      "displayName": "Label Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Field name.\n"
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Field label.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_InputControl",
      "displayName": "Input Control Object",
      "locations": [],
      "docs":       {
        "summary": " A block of nested fields.\n Used to aggregate similar inputs like First Name and Last Name.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_form_InputControlType",
          "doc": " Field control type.\n"
        },
                {
          "name": "system",
          "type": "boolean",
          "doc": " Whether control is mandatory (such as name & email). When true, only label can be changed.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Deprecated: Use `id`.\n",
          "deprecated": true
        },
                {
          "name": "inputs",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_form_Input"]
          },
          "doc": " Child inputs.\n"
        },
                {
          "name": "label",
          "type": "string",
          "doc": " Deprecated: use `inputs.label`.\n",
          "deprecated": true
        },
                {
          "name": "orderIndex",
          "type": "integer",
          "doc": " Field controls are sorted by this value in ascending order.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Unique control ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormMessages",
      "displayName": "Form Messages Object",
      "locations": [],
      "docs":       {
        "summary": " Defines form messages shown in UI before, during, and after registration flow.\n It enables configuration of form titles, response labels, \"thank you\" messages, and call-to-action texts.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvp",
          "type": "All APIs.Wix Events._wix_events_form_RsvpFormMessages",
          "doc": " RSVP form messages.\n"
        },
                {
          "name": "checkout",
          "type": "All APIs.Wix Events._wix_events_form_CheckoutFormMessages",
          "doc": " Checkout form messages.\n"
        },
                {
          "name": "registrationClosed",
          "type": "All APIs.Wix Events._wix_events_form_RegistrationClosedMessages",
          "doc": " Messages shown when event registration is closed.\n"
        },
                {
          "name": "ticketsUnavailable",
          "type": "All APIs.Wix Events._wix_events_form_TicketsUnavailableMessages",
          "doc": " Messages shown when event tickets are unavailable.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Positive_ResponseConfirmation",
      "displayName": "Response Confirmation Object",
      "locations": [],
      "docs":       {
        "summary": " Confirmation messages shown after registration.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Confirmation message title.\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": " Confirmation message text.\n"
        },
                {
          "name": "addToCalendarActionLabel",
          "type": "string",
          "doc": " \"Add to calendar\" call-to-action label text.\n"
        },
                {
          "name": "shareActionLabel",
          "type": "string",
          "doc": " \"Share event\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Positive",
      "displayName": "Positive Object",
      "locations": [],
      "docs":       {
        "summary": " Set of messages shown during registration when RSVP response is positive.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Main form title for positive response.\n"
        },
                {
          "name": "confirmation",
          "type": "All APIs.Wix Events._wix_events_form_RsvpFormMessages_Positive_ResponseConfirmation",
          "doc": " Confirmation messages shown after registration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Negative_ResponseConfirmation",
      "displayName": "Response Confirmation Object",
      "locations": [],
      "docs":       {
        "summary": " Confirmation messages shown after registration.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Confirmation message title.\n"
        },
                {
          "name": "shareActionLabel",
          "type": "string",
          "doc": " \"Share event\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages_Negative",
      "displayName": "Negative Object",
      "locations": [],
      "docs":       {
        "summary": " A set of messages shown during registration with negative response\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Main form title for negative response.\n"
        },
                {
          "name": "confirmation",
          "type": "All APIs.Wix Events._wix_events_form_RsvpFormMessages_Negative_ResponseConfirmation",
          "doc": " Confirmation messages shown after registration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RsvpFormMessages",
      "displayName": "Rsvp Form Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvpYesOption",
          "type": "string",
          "doc": " Label text indicating RSVP `YES` response.\n"
        },
                {
          "name": "rsvpNoOption",
          "type": "string",
          "doc": " Label text indicating RSVP `NO` response.\n"
        },
                {
          "name": "positiveMessages",
          "type": "All APIs.Wix Events._wix_events_form_RsvpFormMessages_Positive",
          "doc": " Messages shown for RSVP = `YES`.\n"
        },
                {
          "name": "waitlistMessages",
          "type": "All APIs.Wix Events._wix_events_form_RsvpFormMessages_Positive",
          "doc": " Messages shown for RSVP = `WAITING` (when event is full and waitlist is available).\n"
        },
                {
          "name": "negativeMessages",
          "type": "All APIs.Wix Events._wix_events_form_RsvpFormMessages_Negative",
          "doc": " Messages shown for RSVP = `NO`.\n"
        },
                {
          "name": "submitActionLabel",
          "type": "string",
          "doc": " \"Submit form\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_CheckoutFormMessages",
      "displayName": "Checkout Form Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Main form title for response.\n"
        },
                {
          "name": "submitActionLabel",
          "type": "string",
          "doc": " Submit form call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RegistrationClosedMessages",
      "displayName": "Registration Closed Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "message",
          "type": "string",
          "doc": " Message shown when event registration is closed.\n"
        },
                {
          "name": "exploreEventsActionLabel",
          "type": "string",
          "doc": " \"Explore other events\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_TicketsUnavailableMessages",
      "displayName": "Tickets Unavailable Messages Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "message",
          "type": "string",
          "doc": " Message shown when event tickets are unavailable.\n"
        },
                {
          "name": "exploreEventsActionLabel",
          "type": "string",
          "doc": " \"Explore other events\" call-to-action label text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Tag",
      "displayName": "Tag Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "string",
          "doc": " SEO tag type. Supported values: `title`, `meta`, `script`, `link`.\n"
        },
                {
          "name": "props",
          "type": "struct",
          "doc": " SEO tag attributes/properties (name, content, rel, href).\n"
        },
                {
          "name": "meta",
          "type": "struct",
          "doc": " Tag meta data, e.g. {height: 300, width: 240}.\n"
        },
                {
          "name": "children",
          "type": "string",
          "doc": " Tag inner content e.g. `<title> inner content <\/title>`.\n"
        },
                {
          "name": "custom",
          "type": "boolean",
          "doc": " Whether the tag is a custom tag.\n"
        },
                {
          "name": "disabled",
          "type": "boolean",
          "doc": " Whether the tag is disabled.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema_Settings",
      "displayName": "Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "preventAutoRedirect",
        "type": "boolean",
        "doc": " disable auto creation of 301 redirects on slug changes (enabled by default).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_advanced_seo_SeoSchema",
      "displayName": "Seo Schema Object",
      "locations": [],
      "docs":       {
        "summary": " The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n The search engines use this information for ranking purposes, or to display snippets in the search results.\n This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._com_wixpress_advanced_seo_SeoSchema_Tag"]
          },
          "doc": " SEO tags information.\n"
        },
                {
          "name": "settings",
          "type": "All APIs.Wix Events._com_wixpress_advanced_seo_SeoSchema_Settings",
          "doc": " SEO general settings.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SeoSettings",
      "displayName": "Seo Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slug",
          "type": "string",
          "doc": " URL slug\n"
        },
                {
          "name": "advancedSeoData",
          "type": "All APIs.Wix Events._com_wixpress_advanced_seo_SeoSchema",
          "doc": " Advanced SEO data\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Hidden from SEO Site Map\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_MapCoordinates",
      "displayName": "Map Coordinates Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "lat",
          "type": "number",
          "doc": " Latitude.\n"
        },
                {
          "name": "lng",
          "type": "number",
          "doc": " Longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "coordinates",
          "type": "All APIs.Wix Events._wix_events_MapCoordinates",
          "doc": " Location map coordinates.\n"
        },
                {
          "name": "address",
          "type": "string",
          "doc": " Single line address representation.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_Location_LocationType",
          "doc": " Location type.\n"
        },
                {
          "name": "fullAddress",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Address",
          "doc": " Full address derived from formatted single line `address`.\n When `full_address` is used to create or update the event, deprecated `address` and `coordinates` are ignored.\n If provided `full_address` has empty `formatted_address` or `coordinates`, it will be auto-completed using Atlas service.\n\n Migration notes:\n - `full_address.formatted_address` is equivalent to `address`.\n - `full_address.geocode` is equivalent to `coordinates`.\n"
        },
                {
          "name": "tbd",
          "type": "boolean",
          "doc": " Defines event location as TBD (To Be Determined).\n When event location is not yet defined, `name` is displayed instead of location address.\n `coordinates`, `address`, `type` and `full_address` are not required when location is TBD.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ScheduleConfig",
      "displayName": "Schedule Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleTbd",
          "type": "boolean",
          "doc": " Defines event as TBD (To Be Determined) schedule.\n When event time is not yet defined, TBD message is displayed instead of event start and end times.\n `startDate`, `endDate` and `timeZoneId` are not required when schedule is TBD.\n"
        },
                {
          "name": "scheduleTbdMessage",
          "type": "string",
          "doc": " TBD message.\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " Event start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Event end timestamp.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n"
        },
                {
          "name": "endDateHidden",
          "type": "boolean",
          "doc": " Whether end date is hidden in the formatted schedule.\n"
        },
                {
          "name": "showTimeZone",
          "type": "boolean",
          "doc": " Whether time zone is displayed in formatted schedule.\n"
        },
                {
          "name": "recurrences",
          "type": "All APIs.Wix Events._wix_events_Recurrences",
          "doc": " Event recurrences.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Recurrences",
      "displayName": "Recurrences Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "occurrences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_Occurrence"]
          },
          "doc": " Event occurrences.\n"
        },
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Recurring event category ID.\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_RecurrenceStatus_Status",
          "doc": " Recurrence status.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Occurrence",
      "displayName": "Occurrence Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": " Event start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Event end timestamp.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n"
        },
                {
          "name": "showTimeZone",
          "type": "boolean",
          "doc": " Whether time zone is displayed in formatted schedule.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Scheduling",
      "displayName": "Scheduling Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "config",
          "type": "All APIs.Wix Events._wix_events_ScheduleConfig",
          "doc": " Schedule configuration.\n"
        },
                {
          "name": "formatted",
          "type": "string",
          "doc": " Formatted schedule representation.\n"
        },
                {
          "name": "startDateFormatted",
          "type": "string",
          "doc": " Formatted start date of the event (empty for TBD schedules).\n"
        },
                {
          "name": "startTimeFormatted",
          "type": "string",
          "doc": " Formatted start time of the event (empty for TBD schedules).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RsvpCollectionConfig",
      "displayName": "Rsvp Collection Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvpStatusOptions",
          "type": "All APIs.Wix Events._wix_events_RsvpCollectionConfig_RsvpStatusOptions",
          "doc": " Defines the supported RSVP statuses.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Total guest limit available to register to the event.\n Additional guests per RSVP are counted towards total guests.\n"
        },
                {
          "name": "waitlist",
          "type": "boolean",
          "doc": " Whether a waitlist is opened when total guest limit is reached, allowing guests to create RSVP with WAITING RSVP status.\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " Registration start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Registration end timestamp.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RsvpCollection",
      "displayName": "Rsvp Collection Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "config",
        "type": "All APIs.Wix Events._wix_events_RsvpCollectionConfig",
        "doc": " RSVP collection configuration.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Ticketing",
      "displayName": "Ticketing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "lowestPrice",
          "type": "string",
          "doc": " Deprecated.\n",
          "deprecated": true
        },
                {
          "name": "highestPrice",
          "type": "string",
          "doc": " Deprecated.\n",
          "deprecated": true
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency used in event transactions.\n"
        },
                {
          "name": "config",
          "type": "All APIs.Wix Events._wix_events_TicketingConfig",
          "doc": " Ticketing configuration.\n"
        },
                {
          "name": "lowestTicketPrice",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Price of lowest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "highestTicketPrice",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Price of highest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "lowestTicketPriceFormatted",
          "type": "string",
          "doc": " Formatted price of lowest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "highestTicketPriceFormatted",
          "type": "string",
          "doc": " Formatted price of highest priced ticket.\n",
          "readOnly": true
        },
                {
          "name": "soldOut",
          "type": "boolean",
          "doc": " Whether all tickets are sold for this event.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TaxConfig",
      "displayName": "Tax Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_TaxType",
          "doc": " Tax application settings.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Tax name.\n"
        },
                {
          "name": "rate",
          "type": "string",
          "doc": " Tax rate (e.g.,`21.55`).\n"
        },
                {
          "name": "appliesToDonations",
          "type": "boolean",
          "doc": " Applies taxes for donations, default true.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TicketingConfig",
      "displayName": "Ticketing Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "guestAssignedTickets",
          "type": "boolean",
          "doc": " Whether the form must be filled out separately for each ticket.\n"
        },
                {
          "name": "taxConfig",
          "type": "All APIs.Wix Events._wix_events_TaxConfig",
          "doc": " Tax configuration.\n"
        },
                {
          "name": "ticketLimitPerOrder",
          "type": "integer",
          "doc": " Limit of tickets that can be purchased per order, default 20.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ExternalEvent",
      "displayName": "External Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "registration",
        "type": "string",
        "doc": " External event registration URL.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Registration",
      "displayName": "Registration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_EventType",
          "doc": " Event type.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_RegistrationStatus",
          "doc": " Event registration status.\n"
        },
                {
          "name": "rsvpCollection",
          "type": "All APIs.Wix Events._wix_events_RsvpCollection",
          "doc": " RSVP collection details.\n"
        },
                {
          "name": "ticketing",
          "type": "All APIs.Wix Events._wix_events_Ticketing",
          "doc": " Ticketing details.\n"
        },
                {
          "name": "external",
          "type": "All APIs.Wix Events._wix_events_ExternalEvent",
          "doc": " External registration details.\n"
        },
                {
          "name": "restrictedTo",
          "type": "All APIs.Wix Events._wix_events_VisitorType",
          "doc": " Types of users allowed to register.\n"
        },
                {
          "name": "initialType",
          "type": "All APIs.Wix Events._wix_events_EventType",
          "doc": " Initial event type which was set when creating an event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RegistrationConfig",
      "displayName": "Registration Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "externalRegistrationUrl",
          "type": "string",
          "doc": " External event registration URL (for external events only).\n"
        },
                {
          "name": "pausedRegistration",
          "type": "boolean",
          "doc": " Whether registration is closed.\n"
        },
                {
          "name": "ticketingConfig",
          "type": "All APIs.Wix Events._wix_events_TicketingConfig",
          "doc": " Ticketing configuration.\n"
        },
                {
          "name": "restrictedTo",
          "type": "All APIs.Wix Events._wix_events_VisitorType",
          "doc": " Types of users allowed to register.\n"
        },
                {
          "name": "disabledRegistration",
          "type": "boolean",
          "doc": " Whether registration is disabled.\n"
        },
                {
          "name": "initialType",
          "type": "All APIs.Wix Events._wix_events_EventType",
          "doc": " Initial event type. Only RSVP and TICKETS are allowed when creating an event.\n Updating this field is not allowed.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Dashboard_RsvpSummary",
      "displayName": "Rsvp Summary Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of RSVPs.\n"
        },
                {
          "name": "yes",
          "type": "integer",
          "doc": " Number of RSVPs with status `YES`.\n"
        },
                {
          "name": "no",
          "type": "integer",
          "doc": " Number of RSVPs with status `NO`.\n"
        },
                {
          "name": "waitlist",
          "type": "integer",
          "doc": " Number of RSVPs in waitlist.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Dashboard_TicketingSummary",
      "displayName": "Ticketing Summary Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tickets",
          "type": "integer",
          "doc": " Number of tickets sold.\n"
        },
                {
          "name": "revenue",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total revenue, excluding fees.\n (taxes and payment provider fees are not deducted.)\n"
        },
                {
          "name": "currencyLocked",
          "type": "boolean",
          "doc": " Whether currency is locked and cannot be changed (generally occurs after the first order in the specified currency has been created).\n"
        },
                {
          "name": "orders",
          "type": "integer",
          "doc": " Number of orders placed.\n"
        },
                {
          "name": "totalSales",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total balance of confirmed transactions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Dashboard",
      "displayName": "Dashboard Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvpSummary",
          "type": "All APIs.Wix Events._wix_events_Dashboard_RsvpSummary",
          "doc": " Guest RSVP summary.\n"
        },
                {
          "name": "ticketingSummary",
          "type": "All APIs.Wix Events._wix_events_Dashboard_TicketingSummary",
          "doc": " Summary of revenue and tickets sold.\n (Archived orders are not included).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GuestListConfig",
      "displayName": "Guest List Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "publicGuestList",
        "type": "boolean",
        "doc": " Whether members can see other members attending the event (defaults to true).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Feed",
      "displayName": "Feed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "token",
        "type": "string",
        "doc": " Event discussion feed token.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OnlineConferencingConfig",
      "displayName": "Online Conferencing Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether online conferencing is enabled (not supported for TBD schedules).\n When enabled, links to join conferencing are generated and provided to guests.\n"
        },
                {
          "name": "providerId",
          "type": "string",
          "doc": " Conferencing provider ID.\n"
        },
                {
          "name": "conferenceType",
          "type": "All APIs.Wix Events._wix_events_ConferenceType",
          "doc": " Conference type\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OnlineConferencingSession",
      "displayName": "Online Conferencing Session Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "hostLink",
          "type": "string",
          "doc": " Link for event host to start the online conference session.\n",
          "readOnly": true
        },
                {
          "name": "guestLink",
          "type": "string",
          "doc": " Link for guests to join the online conference session.\n",
          "readOnly": true
        },
                {
          "name": "password",
          "type": "string",
          "doc": " The password required to join online conferencing session (when relevant).\n",
          "readOnly": true
        },
                {
          "name": "sessionCreated",
          "type": "boolean",
          "doc": " Indicates that session was created successfully on providers side.\n",
          "readOnly": true
        },
                {
          "name": "sessionId",
          "type": "string",
          "doc": " Unique session id\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OnlineConferencing",
      "displayName": "Online Conferencing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "config",
          "type": "All APIs.Wix Events._wix_events_OnlineConferencingConfig",
          "doc": ""
        },
                {
          "name": "session",
          "type": "All APIs.Wix Events._wix_events_OnlineConferencingSession",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Event",
      "displayName": "Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n",
          "readOnly": true
        },
                {
          "name": "location",
          "type": "All APIs.Wix Events._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduling",
          "type": "All APIs.Wix Events._wix_events_Scheduling",
          "doc": " Event scheduling.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Event description.\n"
        },
                {
          "name": "about",
          "type": "string",
          "doc": " Rich-text content displayed in Wix UI - \"About Event\" section (HTML).\n"
        },
                {
          "name": "mainImage",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Image",
          "doc": " Main event image.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Event slug URL (generated from event title).\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " ISO 639-1 language code of the event (used in content translations).\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " Event creation timestamp.\n"
        },
                {
          "name": "modified",
          "type": "string",
          "doc": " Event modified timestamp.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_EventStatus",
          "doc": " Event status.\n"
        },
                {
          "name": "registration",
          "type": "All APIs.Wix Events._wix_events_Registration",
          "doc": " RSVP or ticketing registration details.\n"
        },
                {
          "name": "calendarLinks",
          "type": "All APIs.Wix Events._wix_events_CalendarLinks",
          "doc": " \"Add to calendar\" URLs.\n"
        },
                {
          "name": "eventPageUrl",
          "type": "All APIs.Wix Events._wix_events_SiteUrl",
          "doc": " Event page URL components.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Wix Events._wix_events_form_Form",
          "doc": " Event registration form.\n"
        },
                {
          "name": "dashboard",
          "type": "All APIs.Wix Events._wix_events_Dashboard",
          "doc": " Event dashboard summary of RSVP / ticket sales.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Instance ID of the site where event is hosted.\n"
        },
                {
          "name": "guestListConfig",
          "type": "All APIs.Wix Events._wix_events_GuestListConfig",
          "doc": " Guest list configuration.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        },
                {
          "name": "feed",
          "type": "All APIs.Wix Events._wix_events_Feed",
          "doc": " Event discussion feed. For internal use.\n"
        },
                {
          "name": "onlineConferencing",
          "type": "All APIs.Wix Events._wix_events_OnlineConferencing",
          "doc": " Online conferencing details.\n"
        },
                {
          "name": "seoSettings",
          "type": "All APIs.Wix Events._wix_events_SeoSettings",
          "doc": " SEO settings.\n"
        },
                {
          "name": "assignedContactsLabel",
          "type": "string",
          "doc": " Assigned contacts label key.\n"
        },
                {
          "name": "agenda",
          "type": "All APIs.Wix Events._wix_events_Agenda",
          "doc": " Agenda details.\n"
        },
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_categories_Category"]
          },
          "doc": " Categories this event is assigned to.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_api_ApplicationError",
      "displayName": "Application Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": ""
        },
                {
          "name": "description",
          "type": "string",
          "doc": ""
        },
                {
          "name": "data",
          "type": "struct",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_BulkActionMetadata",
      "displayName": "Bulk Action Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "totalSuccesses",
          "type": "integer",
          "doc": " For how many items the requested action was successful \n"
        },
                {
          "name": "totalFailures",
          "type": "integer",
          "doc": " For how many items the requested action was not successful \n"
        },
                {
          "name": "undetailedFailures",
          "type": "integer",
          "doc": " total number of failures without details because detailed-failure-threshold exceeded\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_ItemMetadata",
      "displayName": "Item Metadata Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Item id. Should always be provided, unless it's impossible (e.g when failing to create an item)\n"
        },
                {
          "name": "originalIndex",
          "type": "integer",
          "doc": " The index of the item within the request array to allow the caller to correlate the request and response items\n"
        },
                {
          "name": "success",
          "type": "boolean",
          "doc": " Whether the action requested was successful for this item. When this value is false, error should be populated\n"
        },
                {
          "name": "error",
          "type": "All APIs.Wix Events._wix_api_ApplicationError",
          "doc": " In case of failure, details about the error\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Wix Events._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UserFilter",
      "displayName": "User Filter Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "userId",
          "type": "string",
          "doc": " User who is related to event\n"
        },
                {
          "name": "relation",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_UserFilter_Relation"]
          },
          "doc": " Relation of user to event\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CategoryFilter",
      "displayName": "Category Filter Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categorised",
          "type": "boolean",
          "doc": " If true - only categorised events will be returned.\n If false - only not categorised events will be returned.\n"
        },
                {
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Category id filter.\n"
        },
                {
          "name": "states",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_CategoryState_State"]
          },
          "doc": " Category states filter. Default - any state.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ListEventsRequest",
      "displayName": "List Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency of the service.\n Use minimum set of required fieldset for best performance.\n"
        },
                {
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventStatus"]
          },
          "doc": " Event status.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Event URL slug.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "userId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " User ID filter, by default any\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "categoryFilter",
          "type": "All APIs.Wix Events._wix_events_CategoryFilter",
          "doc": " Category filter.\n"
        },
                {
          "name": "includeDrafts",
          "type": "boolean",
          "doc": " Whether draft events should be returned in the response.\n Requires WIX_EVENTS.MANAGE_EVENTS permission.\n"
        },
                {
          "name": "recurrenceStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_RecurrenceStatus_Status"]
          },
          "doc": " Recurrence status filter.\n"
        },
                {
          "name": "recurringGroupId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Recurring group id filter.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ListEventsResponse",
      "displayName": "List Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of events that match the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_Event"]
          },
          "doc": " Events list.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ListUserEventsRequest",
      "displayName": "List User Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Paging",
          "doc": ""
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._com_wix_events_upstream_wix_common_Sorting"]
          },
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventStatus"]
          },
          "doc": " Event status.\n"
        },
                {
          "name": "userFilter",
          "type": "All APIs.Wix Events._wix_events_UserFilter",
          "doc": " Wix user filter, by default any.\n Allows to filter events by user relation to the event among all wix sites.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ListUserEventsResponse",
      "displayName": "List User Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Events._wix_common_PagingMetadataV2",
          "doc": ""
        },
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_Event"]
          },
          "doc": " Events list.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_QueryEventsRequest",
      "displayName": "Query Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "userId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " User ID filter, by default any\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "includeDrafts",
          "type": "boolean",
          "doc": " Whether draft events should be returned in the response.\n Requires WIX_EVENTS.MANAGE_EVENTS permission.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_QueryEventsResponse",
      "displayName": "Query Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of events that match the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_Event"]
          },
          "doc": " Events list\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_QueryEventsV2Request",
      "displayName": "Query Events V 2 Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "query",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_QueryV2",
          "doc": ""
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        },
                {
          "name": "includeDrafts",
          "type": "boolean",
          "doc": " Whether draft events should be returned in the response.\n Requires WIX_EVENTS.MANAGE_EVENTS permission.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_QueryEventsV2Response",
      "displayName": "Query Events V 2 Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Events._wix_common_PagingMetadataV2",
          "doc": ""
        },
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_Event"]
          },
          "doc": " Events list\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GetEventRequest",
      "displayName": "Get Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "getBy",
          "type": "All APIs.Wix Events._wix_events_GetEventRequest_GetBy",
          "doc": ""
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GetEventRequest_GetBy",
      "displayName": "Get By Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " URL slug.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_GetEventResponse",
      "displayName": "Get Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FindEventRequest",
      "displayName": "Find Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "findBy",
          "type": "All APIs.Wix Events._wix_events_FindEventRequest_FindBy",
          "doc": ""
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_EventFieldset"]
          },
          "doc": " Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\n Some fields require additional computation that affects latency.\n Use minimum set of required fieldset for best performance.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FindEventRequest_FindBy",
      "displayName": "Find By Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " URL slug.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_FindEventResponse",
      "displayName": "Find Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventData",
      "displayName": "Event Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Event description.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Wix Events._wix_events_Location",
          "doc": " Event location.\n Address is required for non TBD event.\n Location name is required for TBD event.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Wix Events._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration\n"
        },
                {
          "name": "mainImage",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Image",
          "doc": " Main event image. Printed in ticket PDF.\n Currently, only images previously saved in Wix Media are supported.\n"
        },
                {
          "name": "rsvpCollectionConfig",
          "type": "All APIs.Wix Events._wix_events_RsvpCollectionConfig",
          "doc": " RSVP collection configuration. Can be used to set limits.\n"
        },
                {
          "name": "guestListConfig",
          "type": "All APIs.Wix Events._wix_events_GuestListConfig",
          "doc": " Guest list configuration\n"
        },
                {
          "name": "about",
          "type": "string",
          "doc": " Rich-text content for About Event section (HTML).\n"
        },
                {
          "name": "registrationConfig",
          "type": "All APIs.Wix Events._wix_events_RegistrationConfig",
          "doc": " Registration configuration\n"
        },
                {
          "name": "onlineConferencingConfig",
          "type": "All APIs.Wix Events._wix_events_OnlineConferencingConfig",
          "doc": " Online conferencing configuration\n"
        },
                {
          "name": "seoSettings",
          "type": "All APIs.Wix Events._wix_events_SeoSettings",
          "doc": " SEO settings\n"
        },
                {
          "name": "agenda",
          "type": "All APIs.Wix Events._wix_events_Agenda",
          "doc": " Agenda configuration\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CreateEventRequest",
      "displayName": "Create Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Content language code in ISO 639-1 format.\n Used for translating ticket PDF labels, registration form, automatic emails, etc.\n Supported languages: ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hu, id, it, ja, ko, ms, nl, no, pl, pt, ro, ru, sv, th, tl, tr, uk, zh.\n Defaults to en.\n"
        },
                {
          "name": "draft",
          "type": "boolean",
          "doc": " Whether event should be created as draft. Draft events are hidden from site visitors.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CreateEventResponse",
      "displayName": "Create Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Created event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CreateEventV2Request",
      "displayName": "Create Event V 2 Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data.\n"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Content language code in ISO 639-1 format.\n Used for translating ticket PDF labels, registration form, automatic emails, etc.\n Supported languages: ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hu, id, it, ja, ko, ms, nl, no, pl, pt, ro, ru, sv, th, tl, tr, uk, zh.\n Defaults to en.\n"
        },
                {
          "name": "draft",
          "type": "boolean",
          "doc": " Whether event should be created as draft. Draft events are hidden from site visitors.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CreateEventV2Response",
      "displayName": "Create Event V 2 Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Created event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CopyEventRequest",
      "displayName": "Copy Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "draft",
          "type": "boolean",
          "doc": " If true, event will be copied as draft.\n Otherwise copied event will be published, unless it is draft.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CopyEventResponse",
      "displayName": "Copy Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Copied event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CopyEventRequestV2",
      "displayName": "Copy Event Request V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data to update (partial)\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n <!--ONLY:REST-->\n Fields will be auto-populated from the `event` entity unless added to the request explicitly.\n <!--END:ONLY:REST-->\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "fieldMask": "RPC"
        },
                {
          "name": "draft",
          "type": "boolean",
          "doc": " If true, event will be copied as draft.\n Otherwise copied event will be published, unless it is draft.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CopyEventResponseV2",
      "displayName": "Copy Event Response V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Copied event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CopyEventV2Request",
      "displayName": "Copy Event V 2 Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data to update (partial)\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n <!--ONLY:REST-->\n Fields will be auto-populated from the `event` entity unless added to the request explicitly.\n <!--END:ONLY:REST-->\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "fieldMask": "RPC"
        },
                {
          "name": "draft",
          "type": "boolean",
          "doc": " If true, event will be copied as draft.\n Otherwise copied event will be published, unless it is draft.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CopyEventV2Response",
      "displayName": "Copy Event V 2 Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Copied event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UpdateEventRequest",
      "displayName": "Update Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "event",
          "type": "All APIs.Wix Events._wix_events_EventData",
          "doc": " Event data to update (partial)\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n <!--ONLY:REST-->\n Fields will be auto-populated from the `event` entity unless added to the request explicitly.\n <!--END:ONLY:REST-->\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "fieldMask": "RPC"
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Content language code in ISO 639-1 format.\n Used for translating ticket PDF labels, registration form, automatic emails, etc.\n Supported languages: ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hu, id, it, ja, ko, ms, nl, no, pl, pt, ro, ru, sv, th, tl, tr, uk, zh.\n Defaults to en.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UpdateEventResponse",
      "displayName": "Update Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Updated event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PublishDraftEventRequest",
      "displayName": "Publish Draft Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_PublishDraftEventResponse",
      "displayName": "Publish Draft Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Published event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CancelEventRequest",
      "displayName": "Cancel Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CancelEventResponse",
      "displayName": "Cancel Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "event",
        "type": "All APIs.Wix Events._wix_events_Event",
        "doc": " Canceled event.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_BulkCancelEventsRequest",
      "displayName": "Bulk Cancel Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "filter",
        "type": "struct",
        "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_BulkCancelEventsResponse",
      "displayName": "Bulk Cancel Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_DeleteEventRequest",
      "displayName": "Delete Event Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_DeleteEventResponse",
      "displayName": "Delete Event Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Deleted event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_BulkDeleteEventsRequest",
      "displayName": "Bulk Delete Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "filter",
        "type": "struct",
        "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_BulkDeleteEventsResponse",
      "displayName": "Bulk Delete Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GetRecurringEventStateRequest",
      "displayName": "Get Recurring Event State Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categoryId",
        "type": "string",
        "doc": " Recurring event category id.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GetRecurringEventStateResponse",
      "displayName": "Get Recurring Event State Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Recurring event category id.\n"
        },
                {
          "name": "inconsistentState",
          "type": "boolean",
          "doc": ""
        },
                {
          "name": "actual",
          "type": "All APIs.Wix Events._wix_events_RecurringEventState",
          "doc": ""
        },
                {
          "name": "desired",
          "type": "All APIs.Wix Events._wix_events_RecurringEventState",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RecurringEventState",
      "displayName": "Recurring Event State Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "recurringNext",
          "type": "All APIs.Wix Events._wix_events_RecurringEventDetails",
          "doc": ""
        },
                {
          "name": "recurringLastEnded",
          "type": "All APIs.Wix Events._wix_events_RecurringEventDetails",
          "doc": ""
        },
                {
          "name": "recurringLastCanceled",
          "type": "All APIs.Wix Events._wix_events_RecurringEventDetails",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RecurringEventDetails",
      "displayName": "Recurring Event Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " Event slug\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " Event start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Event end timestamp.\n"
        },
                {
          "name": "recurrenceStatus",
          "type": "All APIs.Wix Events._wix_events_RecurrenceStatus_Status",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UpdateRecurringStatusRequest",
      "displayName": "Update Recurring Status Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categoryId",
        "type": "string",
        "doc": " Recurring event category id.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UpdateRecurringStatusResponse",
      "displayName": "Update Recurring Status Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FormResponse",
      "displayName": "Form Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "inputValues",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_InputValue"]
        },
        "doc": " Input values entered upon ticket order.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_InputValue",
      "displayName": "Input Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "inputName",
          "type": "string",
          "doc": " Unique input name.\n"
        },
                {
          "name": "value",
          "type": "string",
          "doc": " Text value representation.\n"
        },
                {
          "name": "values",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Text value vector.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FormattedAddress",
      "displayName": "Formatted Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "formatted",
          "type": "string",
          "doc": " One line address representation.\n"
        },
                {
          "name": "address",
          "type": "All APIs.Wix Events._wix_common_Address",
          "doc": " Address components (optional).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GetReportConfigsRequest",
      "displayName": "Get Report Configs Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Id of the event\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GetReportConfigsResponse",
      "displayName": "Get Report Configs Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "guestRegistration",
        "type": "All APIs.Wix Events._wix_events_GuestRegistrationReportConfig",
        "doc": " Report for new guests in the event.\n The report email sent to site's business email address.\n Site owner email address is used if site business email address is not set.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UpdateReportConfigRequest",
      "displayName": "Update Report Config Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Id of the event\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " A set of field paths, specifying which parts of report to update\n"
        },
                {
          "name": "update",
          "type": "All APIs.Wix Events._wix_events_UpdateReportConfigRequest_update",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UpdateReportConfigRequest_update",
      "displayName": "update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "guestRegistration",
        "type": "All APIs.Wix Events._wix_events_GuestRegistrationReportConfig",
        "doc": " Guest registration reports config patch\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_UpdateReportConfigResponse",
      "displayName": "Update Report Config Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "updated",
        "type": "All APIs.Wix Events._wix_events_UpdateReportConfigResponse_updated",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UpdateReportConfigResponse_updated",
      "displayName": "updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "guestRegistration",
        "type": "All APIs.Wix Events._wix_events_GuestRegistrationReportConfig",
        "doc": " Updated guest registration report config\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_GuestRegistrationReportConfig",
      "displayName": "Guest Registration Report Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Notification on/off toggle\n"
        },
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_GuestRegistrationReportConfig_GuestRegistrationReportType",
          "doc": " Type preset of notification\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_CreateCategoryRequest",
      "displayName": "Create Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Wix Events._wix_events_categories_Category",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_CreateCategoryResponse",
      "displayName": "Create Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Wix Events._wix_events_categories_Category",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkCreateCategoryRequest",
      "displayName": "Bulk Create Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categories",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_Category"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkCreateCategoryResponse",
      "displayName": "Bulk Create Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkCategoryResult"]
          },
          "doc": ""
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Events._wix_common_BulkActionMetadata",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_UpdateCategoryRequest",
      "displayName": "Update Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Wix Events._wix_events_categories_Category",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_UpdateCategoryResponse",
      "displayName": "Update Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "category",
        "type": "All APIs.Wix Events._wix_events_categories_Category",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_DeleteCategoryRequest",
      "displayName": "Delete Category Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categoryId",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_DeleteCategoryResponse",
      "displayName": "Delete Category Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_QueryCategoriesRequest",
      "displayName": "Query Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "query",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_QueryV2",
          "doc": ""
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_categories_CategoryFieldset"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_QueryCategoriesResponse",
      "displayName": "Query Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categories",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_categories_Category"]
          },
          "doc": ""
        },
                {
          "name": "metaData",
          "type": "All APIs.Wix Events._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_AssignEventsRequest",
      "displayName": "Assign Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_AssignEventsResponse",
      "displayName": "Assign Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkAssignEventsRequest",
      "displayName": "Bulk Assign Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkAssignEventsResponse",
      "displayName": "Bulk Assign Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkCategoryResult"]
          },
          "doc": ""
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Events._wix_common_BulkActionMetadata",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkAssignEventsAsyncRequest",
      "displayName": "Bulk Assign Events Async Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkAssignEventsAsyncResponse",
      "displayName": "Bulk Assign Events Async Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_UnassignEventsRequest",
      "displayName": "Unassign Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_UnassignEventsResponse",
      "displayName": "Unassign Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkUnassignEventsRequest",
      "displayName": "Bulk Unassign Events Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkUnassignEventsResponse",
      "displayName": "Bulk Unassign Events Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "results",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_categories_BulkCategoryResult"]
          },
          "doc": ""
        },
                {
          "name": "bulkActionMetadata",
          "type": "All APIs.Wix Events._wix_common_BulkActionMetadata",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkUnassignEventsAsyncRequest",
      "displayName": "Bulk Unassign Events Async Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkUnassignEventsAsyncResponse",
      "displayName": "Bulk Unassign Events Async Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_BulkCategoryResult",
      "displayName": "Bulk Category Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemMetadata",
          "type": "All APIs.Wix Events._wix_common_ItemMetadata",
          "doc": ""
        },
                {
          "name": "item",
          "type": "All APIs.Wix Events._wix_events_categories_Category",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_ListEventCategoriesRequest",
      "displayName": "List Event Categories Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_ListEventCategoriesResponse",
      "displayName": "List Event Categories Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "categories",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_categories_Category"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_SiteSettings",
      "displayName": "Site Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "settings",
          "type": "struct",
          "doc": " Client settings\n"
        },
                {
          "name": "locale",
          "type": "string",
          "doc": " Locale of the site\n",
          "readOnly": true
        },
                {
          "name": "firstEventCreated",
          "type": "boolean",
          "doc": " True if first event is created\n",
          "readOnly": true
        },
                {
          "name": "ticketed",
          "type": "boolean",
          "doc": " True if at least one of events sell tickets\n",
          "readOnly": true
        },
                {
          "name": "eventsSummary",
          "type": "All APIs.Wix Events._wix_events_editor_EventsSummary",
          "doc": ""
        },
                {
          "name": "language",
          "type": "string",
          "doc": " Language of the site\n",
          "readOnly": true
        },
                {
          "name": "premium",
          "type": "string",
          "doc": " Premium tag\n",
          "readOnly": true
        },
                {
          "name": "ticketingOptions",
          "type": "All APIs.Wix Events._wix_events_editor_TicketingOptions",
          "doc": ""
        },
                {
          "name": "appState",
          "type": "string",
          "doc": " App state\n",
          "readOnly": true
        },
                {
          "name": "appStateUpdated",
          "type": "string",
          "doc": " App state update time\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_EventsSummary",
      "displayName": "Events Summary Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "events",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "provisionedEvents",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_TicketingOptions",
      "displayName": "Ticketing Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "wixServiceFee",
        "type": "boolean",
        "doc": " Is wix service fee applied\n",
        "readOnly": true
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_GetSiteSettingsRequest",
      "displayName": "Get Site Settings Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originInstanceId",
          "type": "string",
          "doc": " Settings can be initiated from the other source if does not exist.\n Origin instance id has to be provided.\n Same component id on other instance (site) source.\n"
        },
                {
          "name": "shouldProvision",
          "type": "boolean",
          "doc": " Provision flag\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Site instance id\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_editor_SiteSettingsFieldset"]
          },
          "doc": ""
        },
                {
          "name": "appState",
          "type": "All APIs.Wix Events._wix_events_editor_AppStateEnum_AppState",
          "doc": ""
        },
                {
          "name": "appStateUpdated",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_GetSiteSettingsResponse",
      "displayName": "Get Site Settings Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "settings",
        "type": "All APIs.Wix Events._wix_events_editor_SiteSettings",
        "doc": " Wix Events global site settings\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_UpdateSiteSettingsRequest",
      "displayName": "Update Site Settings Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "settings",
        "type": "struct",
        "doc": " Client settings\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_UpdateSiteSettingsResponse",
      "displayName": "Update Site Settings Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "settings",
        "type": "All APIs.Wix Events._wix_events_editor_SiteSettings",
        "doc": " Wix Events global site settings\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_GetWebComponentRequest",
      "displayName": "Get Web Component Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "componentId",
          "type": "string",
          "doc": " Unique per site component id\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_editor_ComponentFieldset"]
          },
          "doc": " Component can be initiated from the other source if does not exist.\n Origin instance id or origin component id has to be provided to lazily initiate the setting.\n Component response fieldset\n"
        },
                {
          "name": "originInstanceId",
          "type": "string",
          "doc": " Same component id on other instance (site) source.\n",
          "deprecated": true
        },
                {
          "name": "originComponentId",
          "type": "string",
          "doc": " Same site but another component source.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Site instance id.\n"
        },
                {
          "name": "shouldProvision",
          "type": "boolean",
          "doc": " Provision flag\n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_GetWebComponentResponse",
      "displayName": "Get Web Component Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "component",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponent",
          "doc": " Component configuration\n"
        },
                {
          "name": "siteSettings",
          "type": "All APIs.Wix Events._wix_events_editor_SiteSettings",
          "doc": " Wix Events global site settings\n"
        },
                {
          "name": "draftComponent",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponent",
          "doc": " Draft component configuration\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_UpdateWebComponentRequest",
      "displayName": "Update Web Component Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "componentId",
          "type": "string",
          "doc": " Unique per site component id\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " A set of field paths, specifying which parts of web component configuration to update\n"
        },
                {
          "name": "update",
          "type": "All APIs.Wix Events._wix_events_editor_UpdateWebComponentRequest_update",
          "doc": ""
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_editor_ComponentFieldset"]
          },
          "doc": " Component can be initiated from the other source if does not exist.\n Origin instance id or origin component id has to be provided to lazily initiate the setting.\n Component response fieldset\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_UpdateWebComponentRequest_update",
      "displayName": "update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "componentConfig",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponentConfig",
          "doc": " Component configuration\n"
        },
                {
          "name": "draftComponentConfig",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponentConfig",
          "doc": " Draft component configuration\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_editor_UpdateWebComponentResponse",
      "displayName": "Update Web Component Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "component",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponent",
          "doc": " Component configuration\n"
        },
                {
          "name": "draftComponent",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponent",
          "doc": " Draft component configuration\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_ByStatus",
      "displayName": "By Status Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "filter",
        "type": "All APIs.Wix Events._wix_events_editor_StatusFilter",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_ByEventId",
      "displayName": "By Event Id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_ByCategoryId",
      "displayName": "By Category Id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "categoryId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "statusFilter",
          "type": "All APIs.Wix Events._wix_events_editor_StatusFilter",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_WebComponentConfig",
      "displayName": "Web Component Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventsFilter",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponentConfig_EventsFilter",
          "doc": " Defines how events are returned in this component.\n"
        },
                {
          "name": "settings",
          "type": "struct",
          "doc": " Custom defined component settings\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_WebComponentConfig_EventsFilter",
      "displayName": "Events Filter Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "byStatus",
          "type": "All APIs.Wix Events._wix_events_editor_ByStatus",
          "doc": " Returns events by status filter\n"
        },
                {
          "name": "byEventId",
          "type": "All APIs.Wix Events._wix_events_editor_ByEventId",
          "doc": " Returns events by event id\n"
        },
                {
          "name": "byCategoryId",
          "type": "All APIs.Wix Events._wix_events_editor_ByCategoryId",
          "doc": " Returns events by category id and status filter\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_editor_WebComponent",
      "displayName": "Web Component Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique per site web component id\n"
        },
                {
          "name": "config",
          "type": "All APIs.Wix Events._wix_events_editor_WebComponentConfig",
          "doc": " Component configuration\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_events_SiteSettingsUpdated",
      "displayName": "Site Settings Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "timestamp",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_events_WebComponentUpdated",
      "displayName": "Web Component Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "timestamp",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventCanceled",
      "displayName": "Event Canceled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"title\" : \"My event\",\n  \"userId\" : \"01cb99e2-e969-421a-b65f-43bea2a66fa1\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event canceled timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "ticketDefinitionsMapEntry",
      "displayName": "ticket Definitions Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Map of copied ticket definitions from original event.\n Key represents ticket def id in the original event.\n Value represents ticket def id in the newly created event.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventCopied",
      "displayName": "Event Copied Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "Event created timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": "  Event ID.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Wix Events._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Wix Events._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_EventStatus",
          "doc": " Event status.\n"
        },
                {
          "name": "derivedFromInstanceId",
          "type": "string",
          "doc": " Instance ID. Indicates the original app instance which current event was derived from.\n"
        },
                {
          "name": "derivedFromEventId",
          "type": "string",
          "doc": " Event ID. Indicates the original event which current event was derived from.\n"
        },
                {
          "name": "ticketDefinitions",
          "type": "All APIs.Wix Events.ticketDefinitionsMapEntry",
          "doc": "Set of key-value pairs. Map of copied ticket definitions from original event.\n Key represents ticket def id in the original event.\n Value represents ticket def id in the newly created event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventCreated",
      "displayName": "Event Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"location\" : {\n    \"name\" : \"Wix Playground\",\n    \"coordinates\" : {\n      \"lat\" : 40.739254,\n      \"lng\" : -74.008925\n    },\n    \"address\" : \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\" : \"VENUE\"\n  },\n  \"scheduleConfig\" : {\n    \"scheduleTbd\" : false,\n    \"scheduleTbdMessage\" : \"\",\n    \"startDate\" : \"2020-05-10T16:00:00.000Z\",\n    \"endDate\" : \"2020-05-10T20:00:00.000Z\",\n    \"timeZoneId\" : \"EST\"\n  },\n  \"title\" : \"My event\",\n  \"userId\" : \"01cb99e2-e969-421a-b65f-43bea2a66fa1\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "Event created timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": "  Event ID.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Wix Events._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Wix Events._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_EventStatus",
          "doc": " Event status.\n"
        },
                {
          "name": "derivedFromInstanceId",
          "type": "string",
          "doc": " Instance ID. Indicates the original app instance which current event was derived from.\n"
        },
                {
          "name": "derivedFromEventId",
          "type": "string",
          "doc": " Event ID. Indicates the original event which current event was derived from.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventDeleted",
      "displayName": "Event Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"title\" : \"My event\",\n  \"userId\" : \"01cb99e2-e969-421a-b65f-43bea2a66fa1\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "Event deleted timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventEnded",
      "displayName": "Event Ended Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event end timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventPublished",
      "displayName": "Event Published Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event publish timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_EventStatus",
          "doc": " Event status.\n"
        },
                {
          "name": "derivedFromEventId",
          "type": "string",
          "doc": " Event ID. Indicates the original event which current event was derived from.\n Can be used to track the original event and add missing information.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventReminder",
      "displayName": "Event Reminder Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"location\" : {\n    \"name\" : \"Wix Playground\",\n    \"coordinates\" : {\n      \"lat\" : 40.739254,\n      \"lng\" : -74.008925\n    },\n    \"address\" : \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\" : \"VENUE\"\n  },\n  \"scheduleConfig\" : {\n    \"scheduleTbd\" : false,\n    \"scheduleTbdMessage\" : \"\",\n    \"startDate\" : \"2020-05-10T16:00:00.000Z\",\n    \"endDate\" : \"2020-05-10T20:00:00.000Z\",\n    \"timeZoneId\" : \"EST\"\n  },\n  \"title\" : \"My event\",\n  \"userId\" : \"01cb99e2-e969-421a-b65f-43bea2a66fa1\",\n  \"startsIn\" : {\n    \"days\" : 3,\n    \"hours\" : 0,\n    \"minutes\" : 0\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Reminder timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Wix Events._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Wix Events._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        },
                {
          "name": "startsIn",
          "type": "All APIs.Wix Events._wix_events_TimeDuration",
          "doc": " Time until the event starts (currently, reminder is triggered 1 day before event starts).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventStarted",
      "displayName": "Event Started Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event start timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventUpdated",
      "displayName": "Event Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"location\" : {\n    \"name\" : \"Wix Playground\",\n    \"coordinates\" : {\n      \"lat\" : 40.739254,\n      \"lng\" : -74.008925\n    },\n    \"address\" : \"100 Gansevoort St, New York, NY 10014, USA\",\n    \"type\" : \"VENUE\"\n  },\n  \"scheduleConfig\" : {\n    \"scheduleTbd\" : false,\n    \"scheduleTbdMessage\" : \"\",\n    \"startDate\" : \"2020-05-10T16:00:00.000Z\",\n    \"endDate\" : \"2020-05-10T20:00:00.000Z\",\n    \"timeZoneId\" : \"EST\"\n  },\n  \"title\" : \"My event\",\n  \"scheduleConfigUpdated\" : true\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Event update timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Wix Events._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Wix Events._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "scheduleConfigUpdated",
          "type": "boolean",
          "doc": " Whether schedule configuration was updated.\n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_NameControl_Labels",
      "displayName": "Labels Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "firstName",
          "type": "string",
          "doc": " First name input label\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Last name input label\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_NameControl",
      "displayName": "Name Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "labels",
        "type": "All APIs.Wix Events._wix_events_form_NameControl_Labels",
        "doc": " Name control labels of each input\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_EmailControl",
      "displayName": "Email Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "label",
        "type": "string",
        "doc": " Email input label.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_PhoneControl",
      "displayName": "Phone Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Phone input label.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether phone input is required.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_AddressControl_Labels",
      "displayName": "Labels Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Single-line address input label.\n"
        },
                {
          "name": "country",
          "type": "string",
          "doc": " Country input label.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Subdivision input label.\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City input label.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Postal code input label.\n"
        },
                {
          "name": "streetAddress",
          "type": "string",
          "doc": " Street address input label.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_AddressControl",
      "displayName": "Address Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "labels",
          "type": "All APIs.Wix Events._wix_events_form_AddressControl_Labels",
          "doc": " Address control labels for each input.\n"
        },
                {
          "name": "full",
          "type": "boolean",
          "doc": " Whether address is multi-line (consisting of multiple fields such as country, city, postal code). When false, address is single-line.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether address input is required.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_DateControl",
      "displayName": "Date Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Input control label.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether date input is required\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_AdditionalGuestsControl_Labels",
      "displayName": "Labels Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "single",
          "type": "string",
          "doc": " Input label for a single guest.\n"
        },
                {
          "name": "multiple",
          "type": "string",
          "doc": " Input label for multiple guests.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_AdditionalGuestsControl",
      "displayName": "Additional Guests Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "labels",
          "type": "All APIs.Wix Events._wix_events_form_AdditionalGuestsControl_Labels",
          "doc": " Additional guests control labels for each input.\n"
        },
                {
          "name": "namesMandatory",
          "type": "boolean",
          "doc": " Whether individual guest names are required.\n"
        },
                {
          "name": "maxGuests",
          "type": "integer",
          "doc": " Maximum number of additional guests.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_DropdownControl",
      "displayName": "Dropdown Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Input control label.\n"
        },
                {
          "name": "options",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Predefined options guests can choose from.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether choice is required.\n"
        },
                {
          "name": "defaultOptionSelection",
          "type": "All APIs.Wix Events._wix_events_form_OptionSelection",
          "doc": " Preselected option.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_RadioButtonControl",
      "displayName": "Radio Button Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Input control label.\n"
        },
                {
          "name": "options",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Predefined options guests can choose from.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_CheckboxControl",
      "displayName": "Checkbox Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Input control label.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether at least one checkbox is required.\n"
        },
                {
          "name": "options",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Predefined options guests can choose from.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_TextControl",
      "displayName": "Text Control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Input control label.\n"
        },
                {
          "name": "mandatory",
          "type": "boolean",
          "doc": " Whether text input is required.\n"
        },
                {
          "name": "maxLength",
          "type": "integer",
          "doc": " Maximum number of characters allowed.\n"
        },
                {
          "name": "multiLine",
          "type": "boolean",
          "doc": " Whether input control should allow multiple lines in text.\n"
        },
                {
          "name": "comment",
          "type": "boolean",
          "doc": " Whether input control should be displayed as a comment.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_GetFormRequest",
      "displayName": "Get Form Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_GetFormResponse",
      "displayName": "Get Form Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "form",
          "type": "All APIs.Wix Events._wix_events_form_Form",
          "doc": " Currently published event form.\n Published form is visible to site visitors.\n"
        },
                {
          "name": "draftForm",
          "type": "All APIs.Wix Events._wix_events_form_Form",
          "doc": " Draft event form.\n Not available to visitors unless published.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_AddControlRequest",
      "displayName": "Add Control Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "control",
          "type": "All APIs.Wix Events._wix_events_form_AddControlRequest_control",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_AddControlRequest_control",
      "displayName": "control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "phone",
          "type": "All APIs.Wix Events._wix_events_form_PhoneControl",
          "doc": " Phone number input control.\n"
        },
                {
          "name": "address",
          "type": "All APIs.Wix Events._wix_events_form_AddressControl",
          "doc": " Single-line or full address input control.\n"
        },
                {
          "name": "date",
          "type": "All APIs.Wix Events._wix_events_form_DateControl",
          "doc": " Day, month, year date input control.\n"
        },
                {
          "name": "additionalGuests",
          "type": "All APIs.Wix Events._wix_events_form_AdditionalGuestsControl",
          "doc": " Additional guests input control.\n"
        },
                {
          "name": "dropdown",
          "type": "All APIs.Wix Events._wix_events_form_DropdownControl",
          "doc": " Single-choice dropdown style input control.\n"
        },
                {
          "name": "checkbox",
          "type": "All APIs.Wix Events._wix_events_form_CheckboxControl",
          "doc": " Multiple-choice checkbox style input control.\n"
        },
                {
          "name": "text",
          "type": "All APIs.Wix Events._wix_events_form_TextControl",
          "doc": " Free-form text input control.\n"
        },
                {
          "name": "radioButton",
          "type": "All APIs.Wix Events._wix_events_form_RadioButtonControl",
          "doc": " Single-choice radio button style input control.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_form_AddControlResponse",
      "displayName": "Add Control Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Generated unique input control ID.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Wix Events._wix_events_form_Form",
          "doc": " Modified draft event form.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_UpdateControlRequest",
      "displayName": "Update Control Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Unique input control ID.\n"
        },
                {
          "name": "orderIndex",
          "type": "integer",
          "doc": " Index used to sort input controls in ascending order.\n"
        },
                {
          "name": "control",
          "type": "All APIs.Wix Events._wix_events_form_UpdateControlRequest_control",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_UpdateControlRequest_control",
      "displayName": "control Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "phone",
          "type": "All APIs.Wix Events._wix_events_form_PhoneControl",
          "doc": " Phone number input control.\n"
        },
                {
          "name": "address",
          "type": "All APIs.Wix Events._wix_events_form_AddressControl",
          "doc": " Single-line or full address input control.\n"
        },
                {
          "name": "date",
          "type": "All APIs.Wix Events._wix_events_form_DateControl",
          "doc": " Day, month, year date input control.\n"
        },
                {
          "name": "additionalGuests",
          "type": "All APIs.Wix Events._wix_events_form_AdditionalGuestsControl",
          "doc": " Additional guests input control.\n"
        },
                {
          "name": "dropdown",
          "type": "All APIs.Wix Events._wix_events_form_DropdownControl",
          "doc": " Single-choice dropdown style input control.\n"
        },
                {
          "name": "checkbox",
          "type": "All APIs.Wix Events._wix_events_form_CheckboxControl",
          "doc": " Multiple-choice checkbox style input control.\n"
        },
                {
          "name": "text",
          "type": "All APIs.Wix Events._wix_events_form_TextControl",
          "doc": " Free-form text input control.\n"
        },
                {
          "name": "name",
          "type": "All APIs.Wix Events._wix_events_form_NameControl",
          "doc": " Main guest name input control.\n"
        },
                {
          "name": "email",
          "type": "All APIs.Wix Events._wix_events_form_EmailControl",
          "doc": " Main guest email input control.\n"
        },
                {
          "name": "radioButton",
          "type": "All APIs.Wix Events._wix_events_form_RadioButtonControl",
          "doc": " Single-choice radio style input control.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_form_UpdateControlResponse",
      "displayName": "Update Control Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Wix Events._wix_events_form_Form",
        "doc": " Modified draft event form.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_DeleteControlRequest",
      "displayName": "Delete Control Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Unique input control ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_DeleteControlResponse",
      "displayName": "Delete Control Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Wix Events._wix_events_form_Form",
        "doc": " Modified draft event form\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_UpdateMessagesRequest",
      "displayName": "Update Messages Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of this resource to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n"
        },
                {
          "name": "messages",
          "type": "All APIs.Wix Events._wix_events_form_FormMessages",
          "doc": " Set of configured form messages.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_UpdateMessagesResponse",
      "displayName": "Update Messages Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Wix Events._wix_events_form_Form",
        "doc": " Modified draft event form.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_PublishDraftRequest",
      "displayName": "Publish Draft Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_PublishDraftResponse",
      "displayName": "Publish Draft Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Wix Events._wix_events_form_Form",
        "doc": " Published event form.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_DiscardDraftRequest",
      "displayName": "Discard Draft Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_DiscardDraftResponse",
      "displayName": "Discard Draft Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlAdded",
      "displayName": "Form Input Control Added Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "inputControl",
          "type": "All APIs.Wix Events._wix_events_form_InputControl",
          "doc": " Input control.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlUpdated",
      "displayName": "Form Input Control Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "updatedInputControl",
          "type": "All APIs.Wix Events._wix_events_form_InputControl",
          "doc": " Input control.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_FormInputControlDeleted",
      "displayName": "Form Input Control Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "deletedInputControl",
          "type": "All APIs.Wix Events._wix_events_form_InputControl",
          "doc": " Input control.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_EmailTemplate",
      "displayName": "Email Template Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": " Title of the message.\n Email subject will be the name of the event.\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": " Plain text message body.\n"
        },
                {
          "name": "showDescriptionLink",
          "type": "boolean",
          "doc": " When true the link to the Wix site event description page is added right after the body text.\n If however Wix Events are removed from the site the link will lead to Wix site home page.\n"
        },
                {
          "name": "descriptionLink",
          "type": "string",
          "doc": " Text of the link to event page.\n"
        },
                {
          "name": "showCalendarLink",
          "type": "boolean",
          "doc": " When true the link to ICS calendar file of event is added to the email.\n"
        },
                {
          "name": "calendarLink",
          "type": "string",
          "doc": " Text of the link to ICS file.\n"
        },
                {
          "name": "showOnlineConferencingLink",
          "type": "boolean",
          "doc": " When true the link to online conferencing of event is added to the email.\n"
        },
                {
          "name": "onlineConferencingLink",
          "type": "string",
          "doc": " Text of the link to online conferencing.\n"
        },
                {
          "name": "attachTickets",
          "type": "boolean",
          "doc": " When true the tickets are attached to the order confirmation email.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_EmailNotification",
      "displayName": "Email Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "All APIs.Wix Events._wix_events_notifications_EmailNotificationId",
          "doc": " Predefined id of the notification\n"
        },
                {
          "name": "template",
          "type": "All APIs.Wix Events._wix_events_notifications_EmailTemplate",
          "doc": " Email template values\n"
        },
                {
          "name": "timing",
          "type": "All APIs.Wix Events._wix_events_notifications_EmailNotificationTiming",
          "doc": " Desired timing of the notification in hours respectfully to event start time.\n For example if value is 0 then notification is sent at the start of the event.\n"
        },
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " When true the notification will be sent when certain trigger occurs.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_NotificationConfig",
      "displayName": "Notification Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "config",
          "type": "All APIs.Wix Events._wix_events_notifications_NotificationConfig_config",
          "doc": ""
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": "Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_NotificationConfig_config",
      "displayName": "config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "emailNotification",
        "type": "All APIs.Wix Events._wix_events_notifications_EmailNotification",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_notifications_ListNotificationsRequest",
      "displayName": "List Notifications Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Id of event notification configurations to retrieve\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_ListNotificationsResponse",
      "displayName": "List Notifications Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "notifications",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_notifications_NotificationConfig"]
        },
        "doc": " Collection of all notification configurations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_UpdateNotificationRequest_Update",
      "displayName": "Update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " A set of field paths, specifying which parts of notification to update\n"
        },
                {
          "name": "config",
          "type": "All APIs.Wix Events._wix_events_notifications_UpdateNotificationRequest_Update_config",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_UpdateNotificationRequest_Update_config",
      "displayName": "config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "emailNotification",
        "type": "All APIs.Wix Events._wix_events_notifications_EmailNotification",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_notifications_UpdateNotificationRequest",
      "displayName": "Update Notification Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Id of event templates to update\n"
        },
                {
          "name": "updates",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_notifications_UpdateNotificationRequest_Update"]
          },
          "doc": " Notification configuration update data\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_UpdateNotificationResponse",
      "displayName": "Update Notification Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "notifications",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_notifications_NotificationConfig"]
        },
        "doc": " Updated notification configurations\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationRequest_RsvpContact",
      "displayName": "Rsvp Contact Object",
      "locations": [],
      "docs":       {
        "summary": " Single contact associated to the RSVP\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationRequest_OrderContact",
      "displayName": "Order Contact Object",
      "locations": [],
      "docs":       {
        "summary": " Single contact associated to the Order\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationRequest_TicketContact",
      "displayName": "Ticket Contact Object",
      "locations": [],
      "docs":       {
        "summary": " Single contact associated to the Ticket\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": ""
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationRequest_EventContacts",
      "displayName": "Event Contacts Object",
      "locations": [],
      "docs":       {
        "summary": " All event contacts from RSVPs and Orders\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationRequest",
      "displayName": "Trigger Notification Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "notification",
          "type": "All APIs.Wix Events._wix_events_notifications_TriggerNotificationRequest_notification",
          "doc": " The notification body that has to be delivered\n"
        },
                {
          "name": "contacts",
          "type": "All APIs.Wix Events._wix_events_notifications_TriggerNotificationRequest_contacts",
          "doc": " Contacts who has to receive the notification\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationRequest_notification",
      "displayName": "notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "emailNotificationId",
          "type": "All APIs.Wix Events._wix_events_notifications_EmailNotificationId",
          "doc": ""
        },
                {
          "name": "pushNotificationId",
          "type": "All APIs.Wix Events._wix_events_notifications_PushNotificationId",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationRequest_contacts",
      "displayName": "contacts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvpContact",
          "type": "All APIs.Wix Events._wix_events_notifications_TriggerNotificationRequest_RsvpContact",
          "doc": ""
        },
                {
          "name": "orderContact",
          "type": "All APIs.Wix Events._wix_events_notifications_TriggerNotificationRequest_OrderContact",
          "doc": ""
        },
                {
          "name": "eventContacts",
          "type": "All APIs.Wix Events._wix_events_notifications_TriggerNotificationRequest_EventContacts",
          "doc": ""
        },
                {
          "name": "ticketContact",
          "type": "All APIs.Wix Events._wix_events_notifications_TriggerNotificationRequest_TicketContact",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_notifications_TriggerNotificationResponse",
      "displayName": "Trigger Notification Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Policy",
      "displayName": "Policy Object",
      "locations": [],
      "docs":       {
        "summary": " Each event can have up to 3 policies - free-text that define terms & conditions, refunds & exchanges and/or other policies, as relevant.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Policy ID (generated automatically)\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Policy name.\n"
        },
                {
          "name": "body",
          "type": "string",
          "doc": " Policy body.\n"
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date policy was updated.\n"
        },
                {
          "name": "sortIndex",
          "type": "integer",
          "doc": " Custom sort index.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_PolicyData",
      "displayName": "Policy Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Policy name.\n"
        },
                {
          "name": "body",
          "type": "string",
          "doc": " Policy body.\n"
        },
                {
          "name": "sortIndex",
          "type": "integer",
          "doc": " Custom sort index.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_CreatePolicyRequest",
      "displayName": "Create Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "policy",
          "type": "All APIs.Wix Events._wix_events_policies_PolicyData",
          "doc": " Policy data.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_CreatePolicyResponse",
      "displayName": "Create Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Wix Events._wix_events_Policy",
        "doc": " Created policy.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_UpdatePolicyRequest",
      "displayName": "Update Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "policyId",
          "type": "string",
          "doc": " Policy ID.\n"
        },
                {
          "name": "policy",
          "type": "All APIs.Wix Events._wix_events_policies_PolicyData",
          "doc": " Policy data.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_UpdatePolicyResponse",
      "displayName": "Update Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Wix Events._wix_events_Policy",
        "doc": " Updated policy.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_DeletePolicyRequest",
      "displayName": "Delete Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "policyId",
          "type": "string",
          "doc": " Policy ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_DeletePolicyResponse",
      "displayName": "Delete Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_QueryPoliciesRequest",
      "displayName": "Query Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_policies_PolicyFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_policy-fieldset).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_QueryPoliciesResponse",
      "displayName": "Query Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaData",
          "type": "All APIs.Wix Events._wix_events_ResponseMetaData",
          "doc": " Meta data of query results.\n"
        },
                {
          "name": "policies",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_Policy"]
          },
          "doc": " List of event policies.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_GetTokensRequest",
      "displayName": "Get Tokens Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "tokensFieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_policies_TokensFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_token-fieldset).\n"
        },
                {
          "name": "policyFieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_policies_PolicyFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_policy-fieldset).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "tokensMapEntry",
      "displayName": "tokens Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Policy tokens by event ID.\n Used to validate policy agreement on RSVP or Checkout.\n Token is changed every time an event policy is updated.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_GetTokensResponse",
      "displayName": "Get Tokens Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "tokens",
          "type": "All APIs.Wix Events.tokensMapEntry",
          "doc": "Set of key-value pairs. Policy tokens by event ID.\n Used to validate policy agreement on RSVP or Checkout.\n Token is changed every time an event policy is updated.\n"
        },
                {
          "name": "policies",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_Policy"]
          },
          "doc": " Event policies.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_Rsvp",
      "displayName": "Rsvp Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " RSVP ID.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this RSVP.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this RSVP.\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " RSVP created timestamp.\n"
        },
                {
          "name": "modified",
          "type": "string",
          "doc": " RSVP modified timestamp.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " First name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "rsvpForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " RSVP form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " RSVP response status.\n"
        },
                {
          "name": "totalGuests",
          "type": "integer",
          "doc": " Total number of attendees.\n"
        },
                {
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_Guest"]
          },
          "doc": " List of guests.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether RSVP is anonymized by GDPR delete.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_Guest",
      "displayName": "Guest Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "index",
          "type": "integer",
          "doc": " Index in the RSVP guest list.\n"
        },
                {
          "name": "fullName",
          "type": "string",
          "doc": " Guest full name.\n"
        },
                {
          "name": "checkIn",
          "type": "All APIs.Wix Events._wix_events_CheckIn",
          "doc": " Guest check-in.\n"
        },
                {
          "name": "id",
          "type": "integer",
          "doc": " Unique guest ID per RSVP.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_ListRsvpRequest",
      "displayName": "List Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_rsvp-fieldset).\n"
        },
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " RSVP ID.\n"
        },
                {
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpStatus"]
          },
          "doc": " RSVP status.\n"
        },
                {
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Facet counts to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n"
        },
                {
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"full_name\" and \"email\".\n"
        },
                {
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator id filter, by default any.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n"
        },
                {
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Contact ID.\n"
        },
                {
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpTag"]
          },
          "doc": "RSVP tag\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_RsvpFacetCounts_Counts",
      "displayName": "Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of RSVPs.\n"
        },
                {
          "name": "guests",
          "type": "integer",
          "doc": " Number of guests within RSVPs.\n"
        },
                {
          "name": "guestsCheckIn",
          "type": "integer",
          "doc": " Number of guests who have checked-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "countsMapEntry",
      "displayName": "counts Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet totals, aggregated per filter.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_rsvp_RsvpFacetCounts_Counts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_RsvpFacetCounts",
      "displayName": "Rsvp Facet Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "counts",
        "type": "All APIs.Wix Events.countsMapEntry",
        "doc": "Set of key-value pairs. Facet totals, aggregated per filter.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_rsvp_RsvpFacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_RsvpFacets",
      "displayName": "Rsvp Facets Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "facets",
        "type": "All APIs.Wix Events.facetsMapEntry",
        "doc": "Set of key-value pairs. Filter facets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet query result.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_ListRsvpResponse",
      "displayName": "List Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total RSVPs matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "rsvps",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_Rsvp"]
          },
          "doc": " RSVP list.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Facet query result.\n"
        },
                {
          "name": "searchMetaData",
          "type": "All APIs.Wix Events._wix_events_SearchMetaData",
          "doc": " Meta data of search results.\n"
        },
                {
          "name": "rsvpFacets",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpFacets",
          "doc": " Rsvp data enriched facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_QueryRsvpRequest",
      "displayName": "Query Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpFieldset"]
          },
          "doc": " Control which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_rsvp-fieldset).\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n"
        },
                {
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n"
        },
                {
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"guests.full_name\".\n"
        },
                {
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator ID.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to `\"created:asc\"`.\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-rsvps).\n"
        },
                {
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Contact ID.\n"
        },
                {
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpTag"]
          },
          "doc": " RSVP tag\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet query result.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_QueryRsvpResponse",
      "displayName": "Query Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total RSVPs matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "rsvps",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_Rsvp"]
          },
          "doc": " RSVP list.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Facet query result.\n"
        },
                {
          "name": "searchMetaData",
          "type": "All APIs.Wix Events._wix_events_SearchMetaData",
          "doc": " Meta data of search results.\n"
        },
                {
          "name": "rsvpFacets",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpFacets",
          "doc": " Rsvp data enriched facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_GetRsvpRequest",
      "displayName": "Get Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_RsvpFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_rsvp-fieldset).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_GetRsvpResponse",
      "displayName": "Get Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvp",
        "type": "All APIs.Wix Events._wix_events_rsvp_Rsvp",
        "doc": " RSVP.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_ModificationOptions",
      "displayName": "Modification Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "silent",
          "type": "boolean",
          "doc": "  Whether to ignore notification settings (when hen true, no notifications to contact or user are sent).\n"
        },
                {
          "name": "ignoreLimits",
          "type": "boolean",
          "doc": " Whether to create/update regardless of event guest limit.\n"
        },
                {
          "name": "ignoreFormValidation",
          "type": "boolean",
          "doc": " Whether to ignore the form validation.\n"
        },
                {
          "name": "ignorePoliciesAgreement",
          "type": "boolean",
          "doc": " Whether to ignore the policies agreement.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_CreateRsvpRequest",
      "displayName": "Create Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " RSVP form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " RSVP status.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID of the RSVP.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Wix Events._wix_events_rsvp_ModificationOptions",
          "doc": " Create RSVP options.\n WIX_EVENTS.MANAGE_RSVP permission is required.\n"
        },
                {
          "name": "policyAgreementToken",
          "type": "string",
          "doc": " Policy agreement token.  Required when the event has one or more policies.\n Token must match with the token from [GetTokens](https://dev.wix.com/api/rest/wix-events/wix-events/policy/get-tokens) response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_CreateRsvpResponse",
      "displayName": "Create Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rsvp",
          "type": "All APIs.Wix Events._wix_events_rsvp_Rsvp",
          "doc": " Created RSVP.\n"
        },
                {
          "name": "calendarLinks",
          "type": "All APIs.Wix Events._wix_events_CalendarLinks",
          "doc": " \"Add to calendar\" links.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_UpdateRsvpRequest",
      "displayName": "Update Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of RSVP to update.\n"
        },
                {
          "name": "rsvpForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " RSVP form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " RSVP response status.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Wix Events._wix_events_rsvp_ModificationOptions",
          "doc": " Update RSVP options.\n WIX_EVENTS.MANAGE_RSVP permission is required.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_UpdateRsvpResponse",
      "displayName": "Update Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvp",
        "type": "All APIs.Wix Events._wix_events_rsvp_Rsvp",
        "doc": " Updated RSVP.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_BulkUpdateRequest",
      "displayName": "Bulk Update Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " RSVPs to update.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " New RSVP status.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_BulkUpdateResponse",
      "displayName": "Bulk Update Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvps",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_Rsvp"]
        },
        "doc": " Updated RSVPs.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_BulkUpdateRsvpRequest",
      "displayName": "Bulk Update Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " RSVPs to update.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " New RSVP status.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_BulkUpdateRsvpResponse",
      "displayName": "Bulk Update Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvps",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_rsvp_Rsvp"]
        },
        "doc": " Updated RSVPs.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_DeleteRsvpRequest",
      "displayName": "Delete Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvps",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " RSVPs to delete. When not returned, all RSVPs associated with this event are deleted.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_DeleteRsvpResponse",
      "displayName": "Delete Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_CheckInRequest",
      "displayName": "Check In Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID to check-in.\n"
        },
                {
          "name": "guestId",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " Guest IDs to check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_CheckInResponse",
      "displayName": "Check In Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvp",
        "type": "All APIs.Wix Events._wix_events_rsvp_Rsvp",
        "doc": " Updated RSVP.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_CheckInRsvpRequest",
      "displayName": "Check In Rsvp Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID to check-in.\n"
        },
                {
          "name": "guestId",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " Guest IDs to check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_CheckInRsvpResponse",
      "displayName": "Check In Rsvp Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvp",
        "type": "All APIs.Wix Events._wix_events_rsvp_Rsvp",
        "doc": " Updated RSVP.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_DeleteCheckInRequest",
      "displayName": "Delete Check In Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID to delete check-in.\n"
        },
                {
          "name": "guestId",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " Guest IDs to delete check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_DeleteCheckInResponse",
      "displayName": "Delete Check In Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvp",
        "type": "All APIs.Wix Events._wix_events_rsvp_Rsvp",
        "doc": " Updated RSVP.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_DeleteRsvpCheckInRequest",
      "displayName": "Delete Rsvp Check In Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID to delete check-in.\n"
        },
                {
          "name": "guestId",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": " Guest IDs to delete check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_DeleteRsvpCheckInResponse",
      "displayName": "Delete Rsvp Check In Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rsvp",
        "type": "All APIs.Wix Events._wix_events_rsvp_Rsvp",
        "doc": " Updated RSVP.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_events_RsvpCreated",
      "displayName": "Rsvp Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-27T12:37:22.444Z\",\n  \"eventId\" : \"0adc383d-db6b-4c4a-8fb8-5fe77c6569bb\",\n  \"rsvpId\" : \"4160c868-35b8-49f3-bff2-9d3912be9c0a\",\n  \"status\" : \"YES\",\n  \"contactId\" : \"2b1df22d-cfcf-447e-9afe-27b782aecd8c\",\n  \"memberId\" : \"c2b48f6f-5964-46ad-9888-1e9d3f81b83b\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"rsvpForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"date\",\n      \"value\" : \"2020-04-27\"\n    }, {\n      \"inputName\" : \"additionalGuests\",\n      \"value\" : \"2\"\n    }, {\n      \"inputName\" : \"guestNames\",\n      \"values\" : [ \"Jane Doe\", \"Baby Doe\" ]\n    }, {\n      \"inputName\" : \"comment\",\n      \"value\" : \"A comment\"\n    }, {\n      \"inputName\" : \"custom\",\n      \"value\" : \"Another comment\"\n    }, {\n      \"inputName\" : \"address\",\n      \"values\" : [ \"Wix Playground, 100 Gansevoort St, New York, NY 10014, USA\" ]\n    }, {\n      \"inputName\" : \"phone\",\n      \"value\" : \"(555) 555-1234\"\n    } ]\n  },\n  \"guests\" : [ {\n    \"index\" : 0,\n    \"fullName\" : \"John Doe\",\n    \"id\" : 1\n  }, {\n    \"index\" : 1,\n    \"fullName\" : \"Jane Doe\",\n    \"id\" : 2\n  }, {\n    \"index\" : 2,\n    \"fullName\" : \"Baby Doe\",\n    \"id\" : 3\n  } ]\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " RSVP created timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID. \n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this RSVP.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this RSVP.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "rsvpForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " RSVP form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " RSVP response status.\n"
        },
                {
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_Guest"]
          },
          "doc": " List of all guests.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_events_RsvpDeleted",
      "displayName": "Rsvp Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-27T13:37:22.444Z\",\n  \"eventId\" : \"0adc383d-db6b-4c4a-8fb8-5fe77c6569bb\",\n  \"rsvpId\" : \"4160c868-35b8-49f3-bff2-9d3912be9c0a\",\n  \"contactId\" : \"2b1df22d-cfcf-447e-9afe-27b782aecd8c\",\n  \"memberId\" : \"c2b48f6f-5964-46ad-9888-1e9d3f81b83b\",\n  \"anonymized\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " RSVP deleted timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID. \n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this RSVP.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this RSVP.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether RSVP was anonymized by GDPR delete.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_events_RsvpUpdated",
      "displayName": "Rsvp Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-27T13:37:22.444Z\",\n  \"eventId\" : \"0adc383d-db6b-4c4a-8fb8-5fe77c6569bb\",\n  \"rsvpId\" : \"4160c868-35b8-49f3-bff2-9d3912be9c0a\",\n  \"status\" : \"YES\",\n  \"contactId\" : \"2b1df22d-cfcf-447e-9afe-27b782aecd8c\",\n  \"memberId\" : \"c2b48f6f-5964-46ad-9888-1e9d3f81b83b\",\n  \"created\" : \"2020-04-27T12:37:22.444Z\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"rsvpForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"date\",\n      \"value\" : \"2020-04-27\"\n    }, {\n      \"inputName\" : \"additionalGuests\",\n      \"value\" : \"2\"\n    }, {\n      \"inputName\" : \"guestNames\",\n      \"values\" : [ \"Jane Doe\", \"Baby Doe\" ]\n    }, {\n      \"inputName\" : \"comment\",\n      \"value\" : \"A comment\"\n    }, {\n      \"inputName\" : \"custom\",\n      \"value\" : \"Another comment\"\n    }, {\n      \"inputName\" : \"address\",\n      \"values\" : [ \"Wix Playground, 100 Gansevoort St, New York, NY 10014, USA\" ]\n    }, {\n      \"inputName\" : \"phone\",\n      \"value\" : \"(555) 555-1234\"\n    } ]\n  },\n  \"guests\" : [ {\n    \"index\" : 0,\n    \"fullName\" : \"John Doe\",\n    \"id\" : 1\n  }, {\n    \"index\" : 1,\n    \"fullName\" : \"Jane Doe\",\n    \"id\" : 2\n  }, {\n    \"index\" : 2,\n    \"fullName\" : \"Baby Doe\",\n    \"id\" : 3\n  } ]\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " RSVP updated timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "rsvpId",
          "type": "string",
          "doc": " RSVP ID. \n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this RSVP.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this RSVP.\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " RSVP created timestamp.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "rsvpForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " RSVP form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_rsvp_RsvpStatus",
          "doc": " RSVP response status.\n"
        },
                {
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_rsvp_Guest"]
          },
          "doc": " List of the guests.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_ScheduleItem",
      "displayName": "Schedule Item Object",
      "locations": [],
      "docs":       {
        "summary": " Schedule item describes the schedule within an event. Each event may contain multiple schedule items.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Schedule item ID.\n",
          "readOnly": true
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Whether schedule item is hidden from guests.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Schedule item name.\n"
        },
                {
          "name": "timeSlot",
          "type": "All APIs.Wix Events._wix_events_TimeInterval",
          "doc": " Time slot of an schedule item.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Rich-text content displayed in Wix UI when viewing schedule item details (HTML).\n"
        },
                {
          "name": "stageName",
          "type": "string",
          "doc": " Stage or room name in which session takes place.\n"
        },
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tags are used to organize schedule items by assigning them to a general theme or field of study.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleStatus",
          "doc": " Schedule item status.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Schedule item created timestamp.\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Schedule item modified timestamp.\n",
          "readOnly": true
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_ScheduleItemData",
      "displayName": "Schedule Item Data Object",
      "locations": [],
      "docs":       {
        "summary": " Schedule item describes the schedule within an event. Each event may contain multiple schedule items.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Whether schedule item is hidden from guests.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Schedule item name.\n"
        },
                {
          "name": "timeSlot",
          "type": "All APIs.Wix Events._wix_events_TimeInterval",
          "doc": ""
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Rich-text content displayed in Wix UI when viewing schedule item details (HTML).\n"
        },
                {
          "name": "stageName",
          "type": "string",
          "doc": " Stage or room name in which session takes place.\n"
        },
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tags are used to organize schedule items by assigning them to a general theme or field of study.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleStatus",
          "doc": " Schedule item status.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_ListBookmarksRequest",
      "displayName": "List Bookmarks Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_ListBookmarksResponse",
      "displayName": "List Bookmarks Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "items",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_schedule_ScheduleItem"]
        },
        "doc": " Schedule items.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_CreateBookmarkRequest",
      "displayName": "Create Bookmark Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_CreateBookmarkResponse",
      "displayName": "Create Bookmark Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_DeleteBookmarkRequest",
      "displayName": "Delete Bookmark Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_DeleteBookmarkResponse",
      "displayName": "Delete Bookmark Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Duration",
      "displayName": "Duration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "seconds",
          "type": "string",
          "doc": " Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n"
        },
                {
          "name": "nanos",
          "type": "integer",
          "doc": " Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_ListScheduleItemsRequest",
      "displayName": "List Schedule Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_schedule_StateFilter"]
          },
          "doc": " Schedule item state filter.\n Defaults to `[PUBLISHED, VISIBLE]` when no filters are specified.\n If neither `PUBLISHED` nor `DRAFT` are specified, assumes `PUBLISHED`, for example: `[HIDDEN]` becomes `[HIDDEN, PUBLISHED]`.\n If neither `VISIBLE` nor `HIDDEN` are specified, assumes `VISIBLE`, for example: `[DRAFT]` becomes `[DRAFT, VISIBLE]`.\n"
        },
                {
          "name": "startingFrom",
          "type": "string",
          "doc": " Filters schedule items starting on or after specified point in time. Inclusive.\n"
        },
                {
          "name": "startingBefore",
          "type": "string",
          "doc": " Filters schedule items starting before specified point in time. Non-inclusive.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Deprecated, use `paging`.\n Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "deprecated": true
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Deprecated, use `paging`.\n Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "deprecated": true
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-schedule-items).\n"
        },
                {
          "name": "itemId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Item IDs filter.\n"
        },
                {
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tags filter.\n"
        },
                {
          "name": "stageName",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Stage names filter.\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_Paging",
          "doc": " Pointer to page of results using offset.\n See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_ListScheduleItemsResponse",
      "displayName": "List Schedule Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Deprecated, use `paging_metadata.total`.\n Total schedule items matching the given filters.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Deprecated.\n Limit.\n",
          "deprecated": true
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Deprecated, use `paging_metadata.offset`.\n Offset.\n",
          "deprecated": true
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_schedule_ScheduleItem"]
          },
          "doc": " Schedule items.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Facets.\n",
          "readOnly": true
        },
                {
          "name": "draftNotPublished",
          "type": "boolean",
          "doc": " Whether there are draft changes which have not been published yet.\n Returned only when filtering by single `event_id` with `WIX_EVENTS.MANAGE_AGENDA` permission.\n",
          "readOnly": true
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Events._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_QueryScheduleItemsRequest",
      "displayName": "Query Schedule Items Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Wix Events._com_wix_events_upstream_wix_common_QueryV2",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_QueryScheduleItemsResponse",
      "displayName": "Query Schedule Items Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "pagingMetadata",
          "type": "All APIs.Wix Events._wix_common_PagingMetadataV2",
          "doc": ""
        },
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_schedule_ScheduleItem"]
          },
          "doc": " Schedule items.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_GetScheduleItemRequest",
      "displayName": "Get Schedule Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n"
        },
                {
          "name": "includeDraft",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_GetScheduleItemResponse",
      "displayName": "Get Schedule Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "item",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItem",
          "doc": " Schedule item.\n"
        },
                {
          "name": "draft",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItem",
          "doc": " Draft of the Schedule item.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_AddScheduleItemRequest",
      "displayName": "Add Schedule Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItemData",
          "doc": " Schedule item.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_AddScheduleItemResponse",
      "displayName": "Add Schedule Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "item",
        "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItem",
        "doc": " Schedule item.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_UpdateScheduleItemRequest",
      "displayName": "Update Schedule Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "itemId",
          "type": "string",
          "doc": " Schedule item ID.\n"
        },
                {
          "name": "item",
          "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItemData",
          "doc": " Schedule item.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_UpdateScheduleItemResponse",
      "displayName": "Update Schedule Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "item",
        "type": "All APIs.Wix Events._wix_events_schedule_ScheduleItem",
        "doc": " Schedule item.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_DeleteScheduleItemRequest",
      "displayName": "Delete Schedule Item Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "itemIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Schedule items to delete.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_DeleteScheduleItemResponse",
      "displayName": "Delete Schedule Item Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_DiscardDraftRequest",
      "displayName": "Discard Draft Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_DiscardDraftResponse",
      "displayName": "Discard Draft Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_PublishDraftRequest",
      "displayName": "Publish Draft Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_PublishDraftResponse",
      "displayName": "Publish Draft Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_RescheduleDraftRequest",
      "displayName": "Reschedule Draft Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n"
        },
                {
          "name": "timeSlotOffset",
          "type": "All APIs.Wix Events._google_protobuf_Duration",
          "doc": " Offset added or subtracted from schedule item start & end times.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_RescheduleDraftResponse",
      "displayName": "Reschedule Draft Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Discount",
      "displayName": "Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total discount amount.\n"
        },
                {
          "name": "afterDiscount",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total charge after applied discount.\n"
        },
                {
          "name": "code",
          "type": "string",
          "doc": " Discount coupon code.\n",
          "deprecated": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Discount coupon name.\n",
          "deprecated": true
        },
                {
          "name": "couponId",
          "type": "string",
          "doc": " Discount coupon ID.\n",
          "deprecated": true
        },
                {
          "name": "discounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_DiscountItem"]
          },
          "doc": " Discount items.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountItem",
      "displayName": "Discount Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total discount amount.\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountItem_discount",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountItem_discount",
      "displayName": "discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "coupon",
          "type": "All APIs.Wix Events._wix_events_ticketing_CouponDiscount",
          "doc": " Coupon discount.\n"
        },
                {
          "name": "paidPlan",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanDiscount",
          "doc": " Pricing plan discount.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_CouponDiscount",
      "displayName": "Coupon Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Discount coupon name.\n"
        },
                {
          "name": "code",
          "type": "string",
          "doc": " Discount coupon code.\n"
        },
                {
          "name": "couponId",
          "type": "string",
          "doc": " Discount coupon ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaidPlanDiscount",
      "displayName": "Paid Plan Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Name of pricing plan.\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanDiscount_discount",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaidPlanDiscount_discount",
      "displayName": "discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "percentDiscount",
        "type": "All APIs.Wix Events._wix_events_ticketing_PercentDiscount",
        "doc": " Discount by percentage applied to tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_PercentDiscount",
      "displayName": "Percent Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rate",
          "type": "string",
          "doc": " Percent rate.\n"
        },
                {
          "name": "quantityDiscounted",
          "type": "integer",
          "doc": " Number of discounted tickets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Fee",
      "displayName": "Fee Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "All APIs.Wix Events._wix_events_ticketing_FeeName",
          "doc": " Fee identifier.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_FeeType",
          "doc": " How fee is calculated.\n"
        },
                {
          "name": "rate",
          "type": "string",
          "doc": " Fee rate.\n",
          "readOnly": true
        },
                {
          "name": "amount",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total amount of fee charges.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Item",
      "displayName": "Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique line item ID.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Line item quantity.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Line item mame.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Line item price.\n"
        },
                {
          "name": "total",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total price for line items. Always equal to price * quantity.\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_Discount",
          "doc": " Discount applied to the line item.\n"
        },
                {
          "name": "tax",
          "type": "All APIs.Wix Events._wix_events_ticketing_Tax",
          "doc": " Tax applied to the item.\n"
        },
                {
          "name": "fees",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Fee"]
          },
          "doc": " Fees applied to the item.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Tax",
      "displayName": "Tax Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Wix Events._wix_events_TaxType",
          "doc": " Tax type.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Tax name.\n",
          "readOnly": true
        },
                {
          "name": "rate",
          "type": "string",
          "doc": " Tax rate.\n"
        },
                {
          "name": "taxable",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Taxable amount.\n"
        },
                {
          "name": "amount",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total tax amount.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Invoice",
      "displayName": "Invoice Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Item"]
          },
          "doc": ""
        },
                {
          "name": "total",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total cart amount.\n",
          "deprecated": true
        },
                {
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_Discount",
          "doc": " Discount applied to cart.\n"
        },
                {
          "name": "tax",
          "type": "All APIs.Wix Events._wix_events_ticketing_Tax",
          "doc": " Tax applied to cart.\n"
        },
                {
          "name": "subTotal",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total cart amount before discount, tax, and fees.\n"
        },
                {
          "name": "grandTotal",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total amount of cart after discount, tax, and fees.\n Grand total is calculated in the following order:\n   1. Total prices of all items in the cart are calculated.\n   2. Discount is subtracted from the cart (if applicable).\n   3. Tax is added (if applicable).\n   4. Wix service fee is added.\n"
        },
                {
          "name": "fees",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Fee"]
          },
          "doc": " Fees applied to the cart.\n",
          "readOnly": true
        },
                {
          "name": "revenue",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total revenue, excluding fees. (Taxes and payment provider fees are not deducted).\n"
        },
                {
          "name": "previewUrl",
          "type": "string",
          "doc": " URL to invoice preview. Returned only if order is paid.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDetails",
      "displayName": "Ticket Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "seatId",
          "type": "string",
          "doc": " Unique seat id in the event venue.\n"
        },
                {
          "name": "sectionLabel",
          "type": "string",
          "doc": " Optional sector label.\n",
          "readOnly": true
        },
                {
          "name": "areaLabel",
          "type": "string",
          "doc": " Area label.\n",
          "readOnly": true
        },
                {
          "name": "tableLabel",
          "type": "string",
          "doc": " Table label.\n",
          "readOnly": true
        },
                {
          "name": "rowLabel",
          "type": "string",
          "doc": " Row label.\n",
          "readOnly": true
        },
                {
          "name": "seatLabel",
          "type": "string",
          "doc": " Seat label in a row or table.\n",
          "readOnly": true
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": " Number of places in the spot. If not provided - defaults to 1.\n"
        },
                {
          "name": "priceOverride",
          "type": "string",
          "doc": " Custom pricing of ticket.\n"
        },
                {
          "name": "pricingOptionId",
          "type": "string",
          "doc": " Pricing option id.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketSalePeriod",
      "displayName": "Ticket Sale Period Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": " Ticket sale start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Ticket sale end timestamp.\n"
        },
                {
          "name": "hideNotOnSale",
          "type": "boolean",
          "doc": " Whether to hide this ticket if it's not on sale\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Ticket",
      "displayName": "Ticket Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number (issued automatically).\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Associated order number.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket name.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "free",
          "type": "boolean",
          "doc": " Whether ticket requires payment.\n",
          "readOnly": true
        },
                {
          "name": "policy",
          "type": "string",
          "doc": " Ticket policy (as displayed in PDF).\n"
        },
                {
          "name": "qrCode",
          "type": "string",
          "doc": " Deprecated, use `check_in_url`.\n",
          "deprecated": true
        },
                {
          "name": "checkIn",
          "type": "All APIs.Wix Events._wix_events_CheckIn",
          "doc": " Ticket check-in.\n"
        },
                {
          "name": "orderStatus",
          "type": "All APIs.Wix Events._wix_events_ticketing_OrderStatus",
          "doc": " Associated order status.\n"
        },
                {
          "name": "orderArchived",
          "type": "boolean",
          "doc": " Whether order and ticket are visible in order list.\n"
        },
                {
          "name": "orderFullName",
          "type": "string",
          "doc": " Buyer full name.\n"
        },
                {
          "name": "guestFullName",
          "type": "string",
          "doc": " Guest full name.\n"
        },
                {
          "name": "guestDetails",
          "type": "All APIs.Wix Events._wix_events_ticketing_GuestDetails",
          "doc": " Guest personal details.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is visible in guest list.\n"
        },
                {
          "name": "ticketPdf",
          "type": "string",
          "doc": " Deprecated, use `ticket_pdf_url`.\n",
          "deprecated": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Ticket owner member ID.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether ticket was anonymized by GDPR delete.\n Anonymized tickets no longer contain personally identifiable information (PII).\n"
        },
                {
          "name": "checkInUrl",
          "type": "string",
          "doc": " Ticket check-in URL.\n Shown as QR code image in PDF.\n Format: `https://www.wixevents.com/check-in/{ticket number},{event id}`\n Example: `https://www.wixevents.com/check-in/AAAA-AAAA-BB021,00000000-0000-0000-0000-000000000000`\n"
        },
                {
          "name": "ticketPdfUrl",
          "type": "string",
          "doc": " URL for ticket PDF download.\n"
        },
                {
          "name": "channel",
          "type": "All APIs.Wix Events._wix_events_ticketing_ChannelType",
          "doc": " Associated order checkout channel type\n"
        },
                {
          "name": "walletPassUrl",
          "type": "string",
          "doc": " URL to download ticket in .pkpass format for Apple Wallet\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GuestDetails",
      "displayName": "Guest Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "guestAssigned",
          "type": "boolean",
          "doc": " Whether ticket belongs to assigned guest.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Full form response.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this guest.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Order",
      "displayName": "Order Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n"
        },
                {
          "name": "snapshotId",
          "type": "string",
          "doc": " Payment snapshot ID.\n Empty for FREE order.\n",
          "readOnly": true
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID of buyer (resolved using email address).\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID of buyer (if relevant).\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " RSVP created timestamp.\n",
          "readOnly": true
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Checkout form response. When each purchased ticket is assigned to a guest, guest forms are returned for each ticket, and buyer info is returned.\n"
        },
                {
          "name": "confirmed",
          "type": "boolean",
          "doc": " Whether the order is confirmed (triggered once payment gateway processes the payment and funds reach the merchant's account).\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Payment method used for purchase, e.g., \"payPal\", \"creditCard\", etc.\n"
        },
                {
          "name": "ticketsQuantity",
          "type": "integer",
          "doc": " Tickets ordered.\n"
        },
                {
          "name": "totalPrice",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total order price.\n"
        },
                {
          "name": "ticketsPdf",
          "type": "string",
          "doc": " URL to ticket PDF.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
          },
          "doc": " Tickets (generated after payment).\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether the order is archived.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether the order is anonymized by GDPR delete.\n"
        },
                {
          "name": "fullName",
          "type": "string",
          "doc": " Guest full name.\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Wix Events._wix_events_ticketing_Invoice",
          "doc": " Order invoice.\n"
        },
                {
          "name": "fullyCheckedIn",
          "type": "boolean",
          "doc": " Whether all tickets in order are checked-in.\n"
        },
                {
          "name": "paymentDetails",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaymentDetails",
          "doc": " Internal order payment details\n"
        },
                {
          "name": "channel",
          "type": "All APIs.Wix Events._wix_events_ticketing_ChannelType",
          "doc": " Checkout channel type\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentTransaction",
      "displayName": "Payment Transaction Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactionId",
          "type": "string",
          "doc": " Wix Payments transaction id\n",
          "readOnly": true
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Transaction Payment method e.g., \"payPal\", \"creditCard\", etc.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentDetails",
      "displayName": "Payment Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "transaction",
        "type": "All APIs.Wix Events._wix_events_ticketing_PaymentTransaction",
        "doc": " Wix Payments transaction\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_WixFeeConfig",
      "displayName": "Wix Fee Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "type",
        "type": "All APIs.Wix Events._wix_events_FeeType",
        "doc": " Fee calculation method.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketPricing",
      "displayName": "Ticket Pricing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "price",
        "type": "All APIs.Wix Events._wix_events_ticketing_TicketPricing_price",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketPricing_price",
      "displayName": "price Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fixedPrice",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Ticket price which is read only.\n"
        },
                {
          "name": "minPrice",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Min price per ticket, customizable.\n"
        },
                {
          "name": "pricingOptions",
          "type": "All APIs.Wix Events._wix_events_ticketing_PricingOptions",
          "doc": " Ticket pricing options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_PricingOptions",
      "displayName": "Pricing Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "options",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_PricingOption"]
        },
        "doc": " Multiple ticket pricing options.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PricingOption",
      "displayName": "Pricing Option Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Ticket pricing option ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket pricing option name.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Ticket pricing option price.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinition_Dashboard",
      "displayName": "Dashboard Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Whether ticket is hidden and cannot be sold.\n"
        },
                {
          "name": "sold",
          "type": "integer",
          "doc": " Number of tickets sold and reserved.\n",
          "deprecated": true
        },
                {
          "name": "limited",
          "type": "boolean",
          "doc": " Whether the ticket has limited quantity.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Ticket limit (NULL for unlimited ticket definition).\n"
        },
                {
          "name": "unsold",
          "type": "integer",
          "doc": " Number of unsold tickets (NULL for unlimited ticket definition).\n"
        },
                {
          "name": "ticketsSold",
          "type": "integer",
          "doc": " Number of tickets sold.\n"
        },
                {
          "name": "ticketsReserved",
          "type": "integer",
          "doc": " Number of tickets reserved.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinition",
      "displayName": "Ticket Definition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "free",
          "type": "boolean",
          "doc": " Whether the ticket is free (read only).\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket name.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Ticket description.\n"
        },
                {
          "name": "limitPerCheckout",
          "type": "integer",
          "doc": " Limit of tickets that can be purchased per checkout.\n Set to 20 for unlimited ticket definition.\n"
        },
                {
          "name": "orderIndex",
          "type": "integer",
          "doc": " Custom sort index.\n"
        },
                {
          "name": "policy",
          "type": "string",
          "doc": " Policy information plain text block, as printed on the ticket.\n"
        },
                {
          "name": "dashboard",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinition_Dashboard",
          "doc": " Sensitive dashboard data.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID associated with the ticket.\n"
        },
                {
          "name": "wixFeeConfig",
          "type": "All APIs.Wix Events._wix_events_ticketing_WixFeeConfig",
          "doc": " Whether the fixed-rate service fee is applied at checkout to each ticket sold.\n",
          "readOnly": true
        },
                {
          "name": "salePeriod",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketSalePeriod",
          "doc": " Ticket sale period.\n"
        },
                {
          "name": "saleStatus",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketSaleStatus",
          "doc": " Ticket sale status.\n",
          "readOnly": true
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionStateEnum_State"]
          },
          "doc": " Ticket state.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:  \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Events._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Events._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Wix Events._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsRequest",
      "displayName": "Query Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset).\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsResponse",
      "displayName": "Query Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total ticket definitions matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsRequestV2",
      "displayName": "Query Ticket Definitions Request V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Wix Events._wix_common_QueryV2",
        "doc": " Query request object.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsResponseV2",
      "displayName": "Query Ticket Definitions Response V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Wix Events._wix_common_PagingMetadataV2",
          "doc": " Paging metadata definitions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketDefinitionsRequest",
      "displayName": "List Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Controls which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n"
        },
                {
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator id filter, by default any.\n"
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketDefinitionsRequest_State"]
          },
          "doc": " Filters by ticket definition state.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n"
        },
                {
          "name": "saleStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketSaleStatus"]
          },
          "doc": " Ticket sale status.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketDefinitionsResponse",
      "displayName": "List Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaData",
          "type": "All APIs.Wix Events._wix_events_ResponseMetaData",
          "doc": " Meta data.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinitionData",
      "displayName": "Ticket Definition Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket name.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Ticket description.\n"
        },
                {
          "name": "limited",
          "type": "boolean",
          "doc": " Whether this ticket type is limited in quantity.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Limit of tickets available for this type.\n NULL = unlimited.\n"
        },
                {
          "name": "orderIndex",
          "type": "integer",
          "doc": " Custom sort index for manual tickets ordering implementation.\n"
        },
                {
          "name": "policy",
          "type": "string",
          "doc": " Policy information in plain text (as listed on the ticket).\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Ticket is not visible to customers and cannot be purchased.\n"
        },
                {
          "name": "wixFeeConfig",
          "type": "All APIs.Wix Events._wix_events_ticketing_WixFeeConfig",
          "doc": " Configuration of the fixed-rate Wix service fee that is applied to each ticket sold.\n Defaults to: FEE_ADDED_AT_CHECKOUT.\n"
        },
                {
          "name": "salePeriod",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketSalePeriod",
          "doc": " Ticket sale period.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketDefinitionRequest",
      "displayName": "Get Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketDefinitionResponse",
      "displayName": "Get Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definition",
        "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinition",
        "doc": " Ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateTicketDefinitionRequest",
      "displayName": "Create Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "definition",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateTicketDefinitionResponse",
      "displayName": "Create Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definition",
        "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinition",
        "doc": " Created ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketDefinitionRequest",
      "displayName": "Update Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "definition",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of ticket definition to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketDefinitionResponse",
      "displayName": "Update Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definition",
        "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinition",
        "doc": " Updated ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionRequest_ById",
      "displayName": "By Id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definitionId",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Ticket definition IDs.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionRequest",
      "displayName": "Delete Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "delete",
          "type": "All APIs.Wix Events._wix_events_ticketing_DeleteTicketDefinitionRequest_delete",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionRequest_delete",
      "displayName": "delete Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "byId",
          "type": "All APIs.Wix Events._wix_events_ticketing_DeleteTicketDefinitionRequest_ById",
          "doc": " Delete definitions by ID.\n"
        },
                {
          "name": "all",
          "type": "boolean",
          "doc": " Whether to delete all event tickets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionResponse",
      "displayName": "Delete Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ChangeCurrencyRequest",
      "displayName": "Change Currency Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Event currency.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ChangeCurrencyResponse",
      "displayName": "Change Currency Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetCheckoutOptionsRequest",
      "displayName": "Get Checkout Options Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetCheckoutOptionsResponse",
      "displayName": "Get Checkout Options Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paymentMethodConfigured",
          "type": "boolean",
          "doc": " Whether any payment method is configured and available for payment.\n"
        },
                {
          "name": "acceptCoupons",
          "type": "boolean",
          "doc": " Whether coupons are accepted at checkout.\n"
        },
                {
          "name": "premiumServices",
          "type": "boolean",
          "doc": " Whether premium services are enabled. Enabled for free if site does not sell any paid tickets. Selling tickets for a fee requires a premium feature \"events_sell_tickets\".\n"
        },
                {
          "name": "paidTickets",
          "type": "boolean",
          "doc": " Whether there are any paid tickets available for sale.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListAvailableTicketsRequest",
      "displayName": "List Available Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID. If not provided, available tickets for all events in the site will be returned.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n"
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionStateEnum_State"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListAvailableTicketsResponse",
      "displayName": "List Available Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaData",
          "type": "All APIs.Wix Events._wix_events_ResponseMetaData",
          "doc": " Ticket definitions meta data.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryAvailableTicketsRequest",
      "displayName": "Query Available Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Ticket definition.\n See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": ""
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryAvailableTicketsResponse",
      "displayName": "Query Available Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaData",
          "type": "All APIs.Wix Events._wix_events_ResponseMetaData",
          "doc": " Ticket definitions meta data.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketReservationQuantity",
      "displayName": "Ticket Reservation Quantity Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Quantity of tickets to reserve.\n"
        },
                {
          "name": "priceOverride",
          "type": "string",
          "doc": " Ticket price to charge - overriding the ticket price.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateReservationRequest",
      "displayName": "Create Reservation Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketQuantities",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketReservationQuantity"]
          },
          "doc": " Tickets to reserve.\n"
        },
                {
          "name": "ignoreLimits",
          "type": "boolean",
          "doc": " Whether to ignore the available ticket limits upon reservation.\n"
        },
                {
          "name": "allowHiddenTickets",
          "type": "boolean",
          "doc": " Whether to allow reservation for hidden tickets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketReservation",
      "displayName": "Ticket Reservation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Quantity of reserved tickets.\n"
        },
                {
          "name": "ticket",
          "type": "All APIs.Wix Events._wix_events_ticketing_TicketDefinition",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateReservationResponse",
      "displayName": "Create Reservation Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Reservation ID.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Reservation expiration timestamp.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Wix Events._wix_events_ticketing_Invoice",
          "doc": " Reservation invoice.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CancelReservationRequest",
      "displayName": "Cancel Reservation Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Reservation ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CancelReservationResponse",
      "displayName": "Cancel Reservation Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountRequest",
      "displayName": "Discount Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "couponCode",
        "type": "string",
        "doc": " Discount coupon code.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountErrors_Error",
      "displayName": "Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "code",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountErrors",
      "displayName": "Discount Errors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "error",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_DiscountErrors_Error"]
        },
        "doc": " Error.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetInvoiceRequest",
      "displayName": "Get Invoice Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n"
        },
                {
          "name": "withDiscount",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountRequest",
          "doc": " Optional discount to be applied on the returned invoice.\n"
        },
                {
          "name": "paidPlanBenefit",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Optional benefit granted by the pricing plan to be applied on the returned invoice.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetInvoiceResponse",
      "displayName": "Get Invoice Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "invoice",
          "type": "All APIs.Wix Events._wix_events_ticketing_Invoice",
          "doc": " Invoice with applied discount.\n"
        },
                {
          "name": "discountErrors",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountErrors",
          "doc": " Discount errors, if relevant.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Time when the reservation expires.\n"
        },
                {
          "name": "reservationStatus",
          "type": "All APIs.Wix Events._wix_events_ticketing_ReservationStatus",
          "doc": " Reservation status.\n"
        },
                {
          "name": "reservationOccupied",
          "type": "boolean",
          "doc": " Whether this reservation is already used in checkout.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Buyer",
      "displayName": "Buyer Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "firstName",
          "type": "string",
          "doc": " Buyer first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Buyer last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Buyer email.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Guest",
      "displayName": "Guest Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Wix Events._wix_events_FormResponse",
        "doc": " Specific guest info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaidPlanBenefit",
      "displayName": "Paid Plan Benefit Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "planOrderId",
          "type": "string",
          "doc": " Pricing plan ID.\n"
        },
                {
          "name": "benefitId",
          "type": "string",
          "doc": " Pricing plan benefit ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckoutRequest",
      "displayName": "Checkout Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Ticket reservation ID.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n"
        },
                {
          "name": "buyer",
          "type": "All APIs.Wix Events._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n"
        },
                {
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n"
        },
                {
          "name": "paidPlanBenefit",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Wix Events._wix_events_ticketing_CheckoutOptions",
          "doc": " Options controlling the checkout process.\n"
        },
                {
          "name": "policyAgreementToken",
          "type": "string",
          "doc": " Policy agreement token. Required when the event has one or more policies.\n Token must match with the token from [GetTokens](https://dev.wix.com/api/rest/wix-events/wix-events/policy/get-tokens) response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckoutOptions",
      "displayName": "Checkout Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "silent",
          "type": "boolean",
          "doc": " Whether to ignore settings to notify contacts or users.\n"
        },
                {
          "name": "payInPerson",
          "type": "boolean",
          "doc": " Whether the payment is to be done in person between the buyer and the merchant. When true, the completed order is created with status OFFLINE_PENDING and inPerson payment method.\n"
        },
                {
          "name": "ignoreFormValidation",
          "type": "boolean",
          "doc": " Whether to ignore form validation.\n"
        },
                {
          "name": "ignorePoliciesAgreement",
          "type": "boolean",
          "doc": " Whether to ignore the policies agreement.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckoutResponse",
      "displayName": "Checkout Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "order",
          "type": "All APIs.Wix Events._wix_events_ticketing_Order",
          "doc": " Created order.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Time when the order expires, applies to orders with status = INITIATED.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateCheckoutRequest",
      "displayName": "Update Checkout Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "buyer",
          "type": "All APIs.Wix Events._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n"
        },
                {
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Wix Events._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n"
        },
                {
          "name": "paidPlanBenefit",
          "type": "All APIs.Wix Events._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateCheckoutResponse",
      "displayName": "Update Checkout Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "order",
        "type": "All APIs.Wix Events._wix_events_ticketing_Order",
        "doc": " Updated order.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PosCheckoutRequest",
      "displayName": "Pos Checkout Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Ticket reservation ID.\n"
        },
                {
          "name": "paymentDetailsId",
          "type": "string",
          "doc": " Payment details ID.\n Not required if reservation total is 0. In this case the order will be created with status Free and no payment.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PosCheckoutResponse",
      "displayName": "Pos Checkout Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "order",
          "type": "All APIs.Wix Events._wix_events_ticketing_Order",
          "doc": " Created order.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Time when the order expires, applies to orders with status = INITIATED.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "headersMapEntry",
      "displayName": "headers Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_rest_RawHttpResponse",
      "displayName": "Raw Http Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "body",
          "type": "string",
          "doc": ""
        },
                {
          "name": "statusCode",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "headers",
          "type": "All APIs.Wix Events.headersMapEntry",
          "doc": "Set of key-value pairs."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListOrdersRequest",
      "displayName": "List Orders Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n"
        },
                {
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Status.\n"
        },
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order number.\n"
        },
                {
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Field facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n"
        },
                {
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"full_name\", \"email\" and \"order_number\".\n"
        },
                {
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator ID.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n"
        },
                {
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderTag"]
          },
          "doc": " Order tag.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFacetCounts_Counts",
      "displayName": "Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number or orders\n"
        },
                {
          "name": "tickets",
          "type": "integer",
          "doc": " Number of tickets within orders\n"
        },
                {
          "name": "ticketsCheckIn",
          "type": "integer",
          "doc": " Number of tickets with check-in\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "countsMapEntry",
      "displayName": "counts Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet counts aggregated per value\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_ticketing_OrderFacetCounts_Counts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFacetCounts",
      "displayName": "Order Facet Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "counts",
        "type": "All APIs.Wix Events.countsMapEntry",
        "doc": "Set of key-value pairs. Facet counts aggregated per value\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_ticketing_OrderFacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFacets",
      "displayName": "Order Facets Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "facets",
        "type": "All APIs.Wix Events.facetsMapEntry",
        "doc": "Set of key-value pairs. Filter facets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListOrdersResponse",
      "displayName": "List Orders Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total orders matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "orders",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Order"]
          },
          "doc": " Orders.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        },
                {
          "name": "searchMetaData",
          "type": "All APIs.Wix Events._wix_events_SearchMetaData",
          "doc": " Meta data of search results.\n"
        },
                {
          "name": "orderFacets",
          "type": "All APIs.Wix Events._wix_events_ticketing_OrderFacets",
          "doc": " Order data enriched facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetOrderRequest",
      "displayName": "Get Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetOrderResponse",
      "displayName": "Get Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "order",
          "type": "All APIs.Wix Events._wix_events_ticketing_Order",
          "doc": " Requested order.\n"
        },
                {
          "name": "calendarLinks",
          "type": "All APIs.Wix Events._wix_events_CalendarLinks",
          "doc": " \"Add to calendar\" links.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateOrderRequest",
      "displayName": "Update Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Checkout form.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether order is archived.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateOrderResponse",
      "displayName": "Update Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "order",
        "type": "All APIs.Wix Events._wix_events_ticketing_Order",
        "doc": " Updated order.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateRequest",
      "displayName": "Bulk Update Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether to archive the order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateResponse",
      "displayName": "Bulk Update Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orders",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Order"]
        },
        "doc": " Updated orders.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateOrdersRequest",
      "displayName": "Bulk Update Orders Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether to archive the order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateOrdersResponse",
      "displayName": "Bulk Update Orders Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orders",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Order"]
        },
        "doc": " Updated orders.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ConfirmOrderRequest",
      "displayName": "Confirm Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ConfirmOrderResponse",
      "displayName": "Confirm Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orders",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Order"]
        },
        "doc": " Confirmed orders.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetSummaryRequest",
      "displayName": "Get Summary Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetSummaryResponse",
      "displayName": "Get Summary Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "sales",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketSales"]
        },
        "doc": " Ticket sales grouped by currency.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketSales",
      "displayName": "Ticket Sales Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total balance of confirmed transactions.\n"
        },
                {
          "name": "totalOrders",
          "type": "integer",
          "doc": " Total number of confirmed orders.\n"
        },
                {
          "name": "totalTickets",
          "type": "integer",
          "doc": " Total number of tickets purchased.\n"
        },
                {
          "name": "revenue",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Total revenue, excluding fees (taxes and payment provider fees are not deducted).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetInvoicePreviewRequest",
      "displayName": "Get Invoice Preview Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Order number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetPaymentInfoRequest",
      "displayName": "Get Payment Info Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Order number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetPaymentInfoResponse",
      "displayName": "Get Payment Info Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_PaymentTransactionSummary"]
          },
          "doc": ""
        },
                {
          "name": "status",
          "type": "string",
          "doc": ""
        },
                {
          "name": "transactionId",
          "type": "string",
          "doc": "",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentTransactionSummary",
      "displayName": "Payment Transaction Summary Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactionId",
          "type": "string",
          "doc": " Wix Payments transaction id\n",
          "readOnly": true
        },
                {
          "name": "finalTransactionStatus",
          "type": "string",
          "doc": " Final transaction status\n",
          "readOnly": true
        },
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_PaymentTransactionEvent"]
          },
          "doc": " Transaction events\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentTransactionEvent",
      "displayName": "Payment Transaction Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "snapshotId",
          "type": "string",
          "doc": " Order snapshot id\n",
          "readOnly": true
        },
                {
          "name": "transactionStatus",
          "type": "string",
          "doc": " Transaction status\n",
          "readOnly": true
        },
                {
          "name": "paymentMethod",
          "type": "string",
          "doc": " Transaction Payment method e.g., \"payPal\", \"creditCard\", etc.\n",
          "readOnly": true
        },
                {
          "name": "paymentAmount",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Transaction payment amount\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Crated date\n",
          "readOnly": true
        },
                {
          "name": "reasonCode",
          "type": "string",
          "doc": " Reason code\n",
          "readOnly": true
        },
                {
          "name": "refundedAmount",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Refunded amount\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketsRequest",
      "displayName": "List Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Ticket numbers.\n"
        },
                {
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"orderFullName\", \"guestFullName\", and \"ticketNumber\".\n"
        },
                {
          "name": "orderStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Order status.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n"
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_ListTicketsRequest_State"]
          },
          "doc": " Ticket state.\n"
        },
                {
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"ticket_number:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n"
        },
                {
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Guest contact ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Wix Events._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketsResponse",
      "displayName": "List Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total tickets matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
          },
          "doc": " Tickets.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Wix Events.facetsMapEntry",
          "doc": "Set of key-value pairs. Facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketRequest",
      "displayName": "Get Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketResponse",
      "displayName": "Get Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticket",
        "type": "All APIs.Wix Events._wix_events_ticketing_Ticket",
        "doc": " Ticket.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckInRequest",
      "displayName": "Check In Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckInResponse",
      "displayName": "Check In Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckInTicketRequest",
      "displayName": "Check In Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckInTicketResponse",
      "displayName": "Check In Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteCheckInRequest",
      "displayName": "Delete Check In Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to to delete check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteCheckInResponse",
      "displayName": "Delete Check In Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketCheckInRequest",
      "displayName": "Delete Ticket Check In Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to to delete check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketCheckInResponse",
      "displayName": "Delete Ticket Check In Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketRequest_GuestDetailsUpdate",
      "displayName": "Guest Details Update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Wix Events._wix_events_FormResponse",
        "doc": " Assigned guest form.\n To update non-assigned guest form, use [Update Order](https://dev.wix.com/api/rest/wix-events/wix-events/order/update-order).\n\n Does not support partial updates - entire form object will be replaced when `guestDetails.form` is masked.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketRequest",
      "displayName": "Update Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Wix Events._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of this resource to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is archived.\n"
        },
                {
          "name": "guestDetails",
          "type": "All APIs.Wix Events._wix_events_ticketing_UpdateTicketRequest_GuestDetailsUpdate",
          "doc": " Assigned guest details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketResponse",
      "displayName": "Update Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticket",
        "type": "All APIs.Wix Events._wix_events_ticketing_Ticket",
        "doc": " Updated ticket.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateTicketRequest",
      "displayName": "Bulk Update Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Unique ticket numbers.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether tickets are archived.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateTicketResponse",
      "displayName": "Bulk Update Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateTicketsRequest",
      "displayName": "Bulk Update Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Unique ticket numbers.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether tickets are archived.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateTicketsResponse",
      "displayName": "Bulk Update Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Events._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetDemoTicketRequest",
      "displayName": "Get Demo Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definitionId",
        "type": "string",
        "doc": " Ticket definition ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetDemoTicketResponse",
      "displayName": "Get Demo Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticket",
        "type": "All APIs.Wix Events._wix_events_ticketing_Ticket",
        "doc": " Ticket.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_Ticket",
      "displayName": "Ticket Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique issued ticket number.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "checkIn",
          "type": "All APIs.Wix Events._wix_events_CheckIn",
          "doc": " Ticket check-in.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Wix Events._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is archived.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this ticket.\n"
        },
                {
          "name": "confirmed",
          "type": "boolean",
          "doc": " Whether ticket is confirmed\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this ticket.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Ticket form response (only assigned tickets contain separate forms).\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Anonymized tickets no longer contain personally identifiable information (PII).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderConfirmed",
      "displayName": "Order Confirmed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:23:57.154Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n  \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n  \"created\" : \"2020-04-28T12:23:51.523Z\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"status\" : \"PAID\",\n  \"method\" : \"payPal\",\n  \"checkoutForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    } ]\n  },\n  \"tickets\" : [ {\n    \"ticketNumber\" : \"FMXC-BZG3-OT021\",\n    \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n    \"price\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"john.doe@somedomain.com\",\n    \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n    \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"john.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"John\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  }, {\n    \"ticketNumber\" : \"FMXC-BZG3-OT041\",\n    \"ticketDefinitionId\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n    \"price\" : {\n      \"amount\" : \"0.00\",\n      \"currency\" : \"USD\"\n    },\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"jane.doe@somedomain.com\",\n    \"contactId\" : \"e11af3d4-c205-4d3a-b687-58d4dda78a6c\",\n    \"memberId\" : \"62bc4004-548c-46ad-a699-55ef307273e3\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"jane.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"Jane\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  } ],\n  \"invoice\" : {\n    \"items\" : [ {\n      \"id\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n      \"quantity\" : 1,\n      \"name\" : \"VIP\",\n      \"price\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"type\" : \"FEE_INCLUDED\",\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"3.08\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    }, {\n      \"id\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n      \"quantity\" : 1,\n      \"name\" : \"Free\",\n      \"price\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"0.00\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    } ],\n    \"fees\" : [ {\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      }\n    }, {\n      \"type\" : \"FEE_INCLUDED\",\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"3.08\",\n        \"currency\" : \"USD\"\n      }\n    } ],\n    \"subTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"grandTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"revenue\" : {\n      \"amount\" : \"119.92\",\n      \"currency\" : \"USD\"\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order confirmation timestamp in ISO UTC.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " Order created timestamp\n",
          "readOnly": true
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Buyer first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Buyer last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Buyer email address.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Checkout form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Payment method used for paid tickets purchase, i.e. \"payPal\", \"creditCard\", etc.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_events_Ticket"]
          },
          "doc": " Tickets (generated after payment).\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Wix Events._wix_events_ticketing_Invoice",
          "doc": " Invoice.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID associated with this order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderDeleted",
      "displayName": "Order Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:24:29.768Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n  \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n  \"anonymized\" : true,\n  \"orderType\" : \"ASSIGNED_TICKETS\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order deleted timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether order was anonymized by GDPR delete.\n"
        },
                {
          "name": "orderType",
          "type": "All APIs.Wix Events._wix_events_ticketing_events_OrderType",
          "doc": " Order type.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether event was triggered by GDPR delete request.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_events_Ticket"]
          },
          "doc": " Tickets generated after payment.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderInitiated",
      "displayName": "Order Initiated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:23:51.523Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"status\" : \"INITIATED\",\n  \"checkoutForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    } ]\n  },\n  \"invoice\" : {\n    \"items\" : [ {\n      \"id\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n      \"quantity\" : 1,\n      \"name\" : \"VIP\",\n      \"price\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"type\" : \"FEE_INCLUDED\",\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"3.08\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    }, {\n      \"id\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n      \"quantity\" : 1,\n      \"name\" : \"Free\",\n      \"price\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"0.00\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    } ],\n    \"fees\" : [ {\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      }\n    }, {\n      \"type\" : \"FEE_INCLUDED\",\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"3.08\",\n        \"currency\" : \"USD\"\n      }\n    } ],\n    \"subTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"grandTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"revenue\" : {\n      \"amount\" : \"119.92\",\n      \"currency\" : \"USD\"\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order initiated timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email address.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Checkout form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Wix Events._wix_events_ticketing_Invoice",
          "doc": " Invoice.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID associated with this order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderPaid",
      "displayName": "Order Paid Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:24:29.768Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order paid timestamp in ISO UTC.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID associated with this order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderUpdated",
      "displayName": "Order Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:24:29.768Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n  \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n  \"created\" : \"2020-04-28T12:23:51.523Z\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"confirmed\" : true,\n  \"status\" : \"PAID\",\n  \"method\" : \"payPal\",\n  \"archived\" : false,\n  \"checkoutForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    } ]\n  },\n  \"tickets\" : [ {\n    \"ticketNumber\" : \"FMXC-BZG3-OT021\",\n    \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n    \"checkIn\" : {\n      \"created\" : \"2020-04-28T12:24:20.102Z\"\n    },\n    \"price\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"archived\" : false,\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"john.doe@somedomain.com\",\n    \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n    \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"john.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"John\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  }, {\n    \"ticketNumber\" : \"FMXC-BZG3-OT041\",\n    \"ticketDefinitionId\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n    \"price\" : {\n      \"amount\" : \"0.00\",\n      \"currency\" : \"USD\"\n    },\n    \"archived\" : false,\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"jane.doe@somedomain.com\",\n    \"contactId\" : \"e11af3d4-c205-4d3a-b687-58d4dda78a6c\",\n    \"memberId\" : \"62bc4004-548c-46ad-a699-55ef307273e3\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"jane.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"Jane\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  } ]\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order updated timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " Order created timestamp.\n",
          "readOnly": true
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Buyer first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Buyer last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Buyer email.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Wix Events._wix_events_FormResponse",
          "doc": " Checkout form response.\n"
        },
                {
          "name": "confirmed",
          "type": "boolean",
          "doc": " Whether order is confirmed - occurs once payment gateway processes the payment and funds reach merchant's account.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Payment method used for paid tickets purchase, i.e. \"payPal\", \"creditCard\", etc.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Events._wix_events_ticketing_events_Ticket"]
          },
          "doc": " Tickets generated after payment.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether order was archived and excluded from results.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether event was triggered by GDPR delete request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_ReservationCreated",
      "displayName": "Reservation Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:00:00.000Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"reservationId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n  \"expires\" : \"2020-04-26T13:20:00.000Z\",\n  \"status\" : \"RESERVATION_PENDING\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Reservation created timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n Can be used to retrieve a reservation invoice.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Reservation expiration timestamp.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_ticketing_ReservationStatus",
          "doc": " Reservation status.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_ReservationUpdated",
      "displayName": "Reservation Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:00:00.000Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"reservationId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n  \"status\" : \"RESERVATION_CONFIRMED\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Reservation updated timestamp.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n Can be used to retrieve a reservation invoice.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Wix Events._wix_events_ticketing_ReservationStatus",
          "doc": " Reservation status.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Reservation expiration timestamp.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_TicketDefinitionCreated",
      "displayName": "Ticket Definition Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Ticket Definition created timestamp in ISO UTC format.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket Definition ID.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "originatedFrom",
          "type": "All APIs.Wix Events._wix_events_OriginatedFrom",
          "doc": " Originated from.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_TicketDefinitionDeleted",
      "displayName": "Ticket Definition Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Ticket definition deleted timestamp in ISO UTC format.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_TicketDefinitionUpdated",
      "displayName": "Ticket Definition Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Ticket definition updated timestamp in ISO UTC format.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Subdivision_SubdivisionType",
      "displayName": "Subdivision Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SUBDIVISION_TYPE <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_1 -  State\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_2 -  County\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_3 -  City/town\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_4 -  Neighborhood/quarter\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_5 -  Street/block\n <\/code><\/li><li><code> COUNTRY -  ADMINISTRATIVE_AREA_LEVEL_0. Indicates the national political entity, and is typically the highest order type returned by the Geocoder.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SUBDIVISION_TYPE",
        "ADMINISTRATIVE_AREA_LEVEL_1",
        "ADMINISTRATIVE_AREA_LEVEL_2",
        "ADMINISTRATIVE_AREA_LEVEL_3",
        "ADMINISTRATIVE_AREA_LEVEL_4",
        "ADMINISTRATIVE_AREA_LEVEL_5",
        "COUNTRY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TaxType",
      "displayName": "Tax Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INCLUDED -  Tax is included in the ticket price\n <\/code><\/li><li><code> ADDED -  Tax is added to the order at the checkout\n <\/code><\/li><li><code> ADDED_AT_CHECKOUT -  Tax is added to the final total at the checkout\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "INCLUDED",
        "ADDED",
        "ADDED_AT_CHECKOUT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FeeType",
      "displayName": "Fee Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FEE_ADDED -  Fee is added to the ticket price at checkout\n <\/code><\/li><li><code> FEE_INCLUDED -  Seller absorbs the fee. It is deducted from the ticket price\n <\/code><\/li><li><code> FEE_ADDED_AT_CHECKOUT -  Fee is added to the ticket price at checkout\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FEE_ADDED",
        "FEE_INCLUDED",
        "FEE_ADDED_AT_CHECKOUT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CategoryState_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> MANUAL -  Created manually with Create endpoint.\n <\/code><\/li><li><code> AUTO -  Created automatically.\n <\/code><\/li><li><code> RECURRING_EVENT -  Created when publishing recurring events.\n <\/code><\/li><li><code> HIDDEN -  Category is hidden.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "MANUAL",
        "AUTO",
        "RECURRING_EVENT",
        "HIDDEN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_InputControlType",
      "displayName": "Input Control Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INPUT -  Single text value field.\n <\/code><\/li><li><code> TEXTAREA -  Single text value field.\n <\/code><\/li><li><code> DROPDOWN -  Single-choice field of predefined values.\n <\/code><\/li><li><code> RADIO -  Single-choice field of predefined values.\n <\/code><\/li><li><code> CHECKBOX -  Multiple-choice field of predefined values.\n <\/code><\/li><li><code> NAME -  First and last name fields.\n <\/code><\/li><li><code> GUEST_CONTROL -  Additional guests and respective guest names fields.\n <\/code><\/li><li><code> ADDRESS_SHORT -  Single-line address field.\n <\/code><\/li><li><code> ADDRESS_FULL -  Full address field.\n <\/code><\/li><li><code> DATE -  Year, month and day fields.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "INPUT",
        "TEXTAREA",
        "DROPDOWN",
        "RADIO",
        "CHECKBOX",
        "NAME",
        "GUEST_CONTROL",
        "ADDRESS_SHORT",
        "ADDRESS_FULL",
        "DATE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_form_ValueType",
      "displayName": "Value Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TEXT <\/code><\/li><li><code> NUMBER <\/code><\/li><li><code> TEXT_ARRAY <\/code><\/li><li><code> DATE_TIME <\/code><\/li><li><code> ADDRESS <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TEXT",
        "NUMBER",
        "TEXT_ARRAY",
        "DATE_TIME",
        "ADDRESS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventStatus",
      "displayName": "Event Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SCHEDULED -  Event is public and scheduled to start\n <\/code><\/li><li><code> STARTED -  Event has started\n <\/code><\/li><li><code> ENDED -  Event has ended\n <\/code><\/li><li><code> CANCELED -  Event was canceled\n <\/code><\/li><li><code> DRAFT -  Event is not public and needs to be published\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SCHEDULED",
        "STARTED",
        "ENDED",
        "CANCELED",
        "DRAFT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventType",
      "displayName": "Event Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NA_EVENT_TYPE -  Type not available for this request fieldset\n <\/code><\/li><li><code> RSVP -  Registration via RSVP\n <\/code><\/li><li><code> TICKETS -  Registration via ticket purchase\n <\/code><\/li><li><code> EXTERNAL -  External registration\n <\/code><\/li><li><code> NO_REGISTRATION -  Registration not available\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NA_EVENT_TYPE",
        "RSVP",
        "TICKETS",
        "EXTERNAL",
        "NO_REGISTRATION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RegistrationStatus",
      "displayName": "Registration Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NA_REGISTRATION_STATUS -  Registration status is not applicable\n <\/code><\/li><li><code> CLOSED -  Registration to event is closed\n <\/code><\/li><li><code> CLOSED_MANUALLY -  Registration to event is closed manually\n <\/code><\/li><li><code> OPEN_RSVP -  Registration is open via RSVP\n <\/code><\/li><li><code> OPEN_RSVP_WAITLIST -  Registration to event waitlist is open via RSVP\n <\/code><\/li><li><code> OPEN_TICKETS -  Registration is open via ticket purchase\n <\/code><\/li><li><code> OPEN_EXTERNAL -  Registration is open via external URL\n <\/code><\/li><li><code> SCHEDULED_RSVP -  Registration will be open via RSVP\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NA_REGISTRATION_STATUS",
        "CLOSED",
        "CLOSED_MANUALLY",
        "OPEN_RSVP",
        "OPEN_RSVP_WAITLIST",
        "OPEN_TICKETS",
        "OPEN_EXTERNAL",
        "SCHEDULED_RSVP"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_VisitorType",
      "displayName": "Visitor Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> VISITOR -  Site visitor (including member)\n <\/code><\/li><li><code> MEMBER -  Site member\n <\/code><\/li><li><code> VISITOR_OR_MEMBER -  Site visitor or member\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "VISITOR",
        "MEMBER",
        "VISITOR_OR_MEMBER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ConferenceType",
      "displayName": "Conference Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> MEETING -  Everyone in the meeting can publish and subscribe video and audio.\n <\/code><\/li><li><code> WEBINAR -  Guests can only subscribe to video and audio.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "MEETING",
        "WEBINAR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Location_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> VENUE <\/code><\/li><li><code> ONLINE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "VENUE",
        "ONLINE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RecurrenceStatus_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ONE_TIME -  Event occurs only once.\n <\/code><\/li><li><code> RECURRING -  Event is recurring.\n <\/code><\/li><li><code> RECURRING_NEXT -  Marks the next upcoming occurrence of the recurring event.\n <\/code><\/li><li><code> RECURRING_LAST_ENDED -  Marks the most recent ended occurrence of the recurring event.\n <\/code><\/li><li><code> RECURRING_LAST_CANCELED -  Marks the most recent canceled occurrence of the recurring event.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ONE_TIME",
        "RECURRING",
        "RECURRING_NEXT",
        "RECURRING_LAST_ENDED",
        "RECURRING_LAST_CANCELED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RsvpCollectionConfig_RsvpStatusOptions",
      "displayName": "Rsvp Status Options Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> YES_ONLY -  Only YES RSVP status is available for RSVP registration\n <\/code><\/li><li><code> YES_AND_NO -  YES and NO RSVP status options are available for the registration\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "YES_ONLY",
        "YES_AND_NO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventFieldset",
      "displayName": "Event Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FULL <\/code><\/li><li><code> DETAILS -  Include `description`, `mainImage` and `calendarLinks` in the response.\n <\/code><\/li><li><code> TEXTS -  Include `about` event rich text in the response.\n <\/code><\/li><li><code> REGISTRATION -  Include `registration` in the response.\n <\/code><\/li><li><code> URLS -  Include `eventPageUrl` in the response.\n <\/code><\/li><li><code> FORM -  Include `form` in the response.\n <\/code><\/li><li><code> DASHBOARD -  Include `dashboard` in the response.\n <\/code><\/li><li><code> FEED -  Include `feed` in the response.\n <\/code><\/li><li><code> ONLINE_CONFERENCING_SESSION -  Include `onlineConferencing` in the response.\n <\/code><\/li><li><code> SEO_SETTINGS -  Include `seoSettings` in the response.\n <\/code><\/li><li><code> AGENDA -  Include `agendaSettings` in the response.\n <\/code><\/li><li><code> CATEGORIES -  Include `categories` in the response.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FULL",
        "DETAILS",
        "TEXTS",
        "REGISTRATION",
        "URLS",
        "FORM",
        "DASHBOARD",
        "FEED",
        "ONLINE_CONFERENCING_SESSION",
        "SEO_SETTINGS",
        "AGENDA",
        "CATEGORIES"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_UserFilter_Relation",
      "displayName": "Relation Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ATTENDING -  User is attending the event.\n User has RSVP with status YES or has ordered tickets.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["ATTENDING"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_GuestRegistrationReportConfig_GuestRegistrationReportType",
      "displayName": "Guest Registration Report Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INSTANT_UPDATE -  A quick update email when someone registers to the event (RSVP or ticket purchase).\n <\/code><\/li><li><code> DAILY_SUMMARY -  Daily summary of all guests registered throughout the day.\n The email is sent around 10pm respectively to event's time zone.\n It contains a summary of all new guests registered in prior 24 hours.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "INSTANT_UPDATE",
        "DAILY_SUMMARY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_categories_CategoryFieldset",
      "displayName": "Category Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> COUNTS -  Include `assignedEventsCount` in the response.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["COUNTS"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_SiteSettingsFieldset",
      "displayName": "Site Settings Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> EVENTS_SUMMARY -  Include summary of events\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["EVENTS_SUMMARY"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_ComponentFieldset",
      "displayName": "Component Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SITE_SETTINGS -  Add site settings in the response\n <\/code><\/li><li><code> DRAFT -  Add draft component to the response\n <\/code><\/li><li><code> EVENTS -  Include events in the response\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SITE_SETTINGS",
        "DRAFT",
        "EVENTS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_StatusFilter",
      "displayName": "Status Filter Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FUTURE_AND_PAST <\/code><\/li><li><code> FUTURE_ONLY <\/code><\/li><li><code> PAST_ONLY <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FUTURE_AND_PAST",
        "FUTURE_ONLY",
        "PAST_ONLY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_editor_AppStateEnum_AppState",
      "displayName": "App State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ENABLED -  App is installed\n <\/code><\/li><li><code> DISABLED -  App is removed\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ENABLED",
        "DISABLED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_EmailNotificationId",
      "displayName": "Email Notification Id Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> EMAIL_RSVP_CONFIRMATION -  Triggered when site user RSVP to the event.\n <\/code><\/li><li><code> EMAIL_WAITING_NEW_SPOTS_AVAILABLE -  Triggered for waiting guests when additional RSVP spots appears in the fully booked event.\n <\/code><\/li><li><code> EMAIL_EVENT_CANCELATION -  Triggered when event is canceled.\n <\/code><\/li><li><code> EMAIL_UPCOMING_EVENT_REMINDER -  Triggered before the event start time.\n <\/code><\/li><li><code> EMAIL_ORDER_CONFIRMATION -  Triggered when site user creates Order.\n <\/code><\/li><li><code> EMAIL_TICKET_CONFIRMATION -  Triggered when resending ticket to ticket holder.\n <\/code><\/li><li><code> EMAIL_INVOICE -  Triggered when sending invoice. Currently only `enabled` flag update is supported.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "EMAIL_RSVP_CONFIRMATION",
        "EMAIL_WAITING_NEW_SPOTS_AVAILABLE",
        "EMAIL_EVENT_CANCELATION",
        "EMAIL_UPCOMING_EVENT_REMINDER",
        "EMAIL_ORDER_CONFIRMATION",
        "EMAIL_TICKET_CONFIRMATION",
        "EMAIL_INVOICE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_EmailNotificationTiming",
      "displayName": "Email Notification Timing Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INSTANT -  Notification is sent instantly\n <\/code><\/li><li><code> BEFORE_1_DAY -  24 hours prior\n <\/code><\/li><li><code> BEFORE_3_DAYS -  3 days prior\n <\/code><\/li><li><code> BEFORE_1_WEEK -  7 days prior\n <\/code><\/li><li><code> BEFORE_1_HOUR -  1 hour prior\n <\/code><\/li><li><code> BEFORE_30_MINUTES -  30 minutes prior\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "INSTANT",
        "BEFORE_1_DAY",
        "BEFORE_3_DAYS",
        "BEFORE_1_WEEK",
        "BEFORE_1_HOUR",
        "BEFORE_30_MINUTES"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_notifications_PushNotificationId",
      "displayName": "Push Notification Id Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PUSH_EVENT_UPDATED -  Triggered when event is updated.\n <\/code><\/li><li><code> PUSH_EVENT_CANCELATION -  Triggered when event is canceled.\n <\/code><\/li><li><code> PUSH_UPCOMING_EVENT_REMINDER -  Triggered before the event start time.\n <\/code><\/li><li><code> PUSH_EVENT_CREATED -  Triggered when event is created.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PUSH_EVENT_UPDATED",
        "PUSH_EVENT_CANCELATION",
        "PUSH_UPCOMING_EVENT_REMINDER",
        "PUSH_EVENT_CREATED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_PolicyFieldset",
      "displayName": "Policy Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> BODY -  Include policy body in the response.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["BODY"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_policies_TokensFieldset",
      "displayName": "Tokens Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> POLICIES -  Include policies in the response.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["POLICIES"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_RsvpStatus",
      "displayName": "Rsvp Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> YES <\/code><\/li><li><code> NO <\/code><\/li><li><code> WAITING <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "YES",
        "NO",
        "WAITING"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_RsvpTag",
      "displayName": "Rsvp Tag Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FULLY_CHECKED_IN -  Return only rsvps with all guests checked-in\n <\/code><\/li><li><code> NOT_FULLY_CHECKED_IN -  Return only rsvps with not all guests checked-in\n <\/code><\/li><li><code> MEMBER -  Return only member rsvp\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FULLY_CHECKED_IN",
        "NOT_FULLY_CHECKED_IN",
        "MEMBER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_rsvp_RsvpFieldset",
      "displayName": "Rsvp Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> DETAILS -  Include RSVP details: created, modified, first_name, last_name, etc.\n <\/code><\/li><li><code> FORM -  Include rsvp_form.\n <\/code><\/li><li><code> CONTACT_DETAILS -  Include RSVP email.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "DETAILS",
        "FORM",
        "CONTACT_DETAILS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_ScheduleStatus",
      "displayName": "Schedule Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SCHEDULED -  Item is scheduled for a future date\n <\/code><\/li><li><code> CANCELED -  Item was canceled\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SCHEDULED",
        "CANCELED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_schedule_StateFilter",
      "displayName": "State Filter Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> PUBLISHED -  Schedule item is published.\n <\/code><\/li><li><code> DRAFT -  Opposite of `PUBLISHED`. Requires `WIX_EVENTS.MANAGE_AGENDA` permission.\n <\/code><\/li><li><code> VISIBLE -  Schedule item is visible to the public.\n <\/code><\/li><li><code> HIDDEN -  Opposite of `VISIBLE`. Requires `WIX_EVENTS.MANAGE_AGENDA` permission.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "PUBLISHED",
        "DRAFT",
        "VISIBLE",
        "HIDDEN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ChannelType",
      "displayName": "Channel Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ONLINE -  Buyer created order via one of the online channels (website, mobile app, etc.)\n <\/code><\/li><li><code> OFFLINE_POS -  Order created and money collected by the sales person\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ONLINE",
        "OFFLINE_POS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_FeeName",
      "displayName": "Fee Name Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> WIX_FEE -  Wix service fee charges applied to the line item.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["WIX_FEE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderStatus",
      "displayName": "Order Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NA_ORDER_STATUS -  Order status not available for this request fieldset\n <\/code><\/li><li><code> FREE -  Order is confirmed, no payment required\n <\/code><\/li><li><code> PENDING -  Order was paid but payment gateway suspended the payment. Eventually changes to PAID\n <\/code><\/li><li><code> PAID -  Order paid via payment gateway\n <\/code><\/li><li><code> OFFLINE_PENDING -  Order confirmed but has to be paid via offline payment and status manually updated to PAID\n <\/code><\/li><li><code> INITIATED -  Order is awaiting for payment in Cashier\n <\/code><\/li><li><code> CANCELED -  Order was canceled\n <\/code><\/li><li><code> DECLINED -  Order payment was declined\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NA_ORDER_STATUS",
        "FREE",
        "PENDING",
        "PAID",
        "OFFLINE_PENDING",
        "INITIATED",
        "CANCELED",
        "DECLINED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketSaleStatus",
      "displayName": "Ticket Sale Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SALE_SCHEDULED -  Ticket sale is scheduled to start\n <\/code><\/li><li><code> SALE_STARTED -  Ticket sale has started\n <\/code><\/li><li><code> SALE_ENDED -  Ticket sale has ended\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SALE_SCHEDULED",
        "SALE_STARTED",
        "SALE_ENDED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ReservationStatus",
      "displayName": "Reservation Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> RESERVATION_PENDING -  Reservation is pending confirmation.\n The reservation will expire after the expiration due time.\n <\/code><\/li><li><code> RESERVATION_CONFIRMED -  The reservation was confirmed and will not expire.\n <\/code><\/li><li><code> RESERVATION_CANCELED -  The reservation was canceled because of non payment.\n <\/code><\/li><li><code> RESERVATION_CANCELED_MANUALLY -  The reservation was canceled manually by the buyer.\n <\/code><\/li><li><code> RESERVATION_EXPIRED -  The reservation has expired.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "RESERVATION_PENDING",
        "RESERVATION_CONFIRMED",
        "RESERVATION_CANCELED",
        "RESERVATION_CANCELED_MANUALLY",
        "RESERVATION_EXPIRED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PricingTypeEnum_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> STANDARD <\/code><\/li><li><code> DONATION <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "STANDARD",
        "DONATION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinitionStateEnum_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INCLUDE_HIDDEN_NOT_ON_SALE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["INCLUDE_HIDDEN_NOT_ON_SALE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinitionFieldset",
      "displayName": "Ticket Definition Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> POLICY -  Include policy in the response.\n <\/code><\/li><li><code> DASHBOARD -  Include dashboard in the response.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "POLICY",
        "DASHBOARD"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketDefinitionsRequest_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> VISIBLE -  Ticket is available for purchase.\n <\/code><\/li><li><code> HIDDEN -  Opposite to VISIBLE.\n <\/code><\/li><li><code> FREE -  Ticket price is 0.\n <\/code><\/li><li><code> PAID -  Ticket price is greater than 0.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "VISIBLE",
        "HIDDEN",
        "FREE",
        "PAID"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderTag",
      "displayName": "Order Tag Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CONFIRMED -  Return only confirmed orders\n <\/code><\/li><li><code> UNCONFIRMED -  Return only unconfirmed orders\n <\/code><\/li><li><code> MEMBER -  Return only member orders\n <\/code><\/li><li><code> ARCHIVED -  Return only archived orders\n <\/code><\/li><li><code> NON_ARCHIVED -  Return only non archived orders\n <\/code><\/li><li><code> FULLY_CHECKED_IN -  Return only orders with all guests checked-in\n <\/code><\/li><li><code> NOT_FULLY_CHECKED_IN -  Return only orders with no guests checked-in\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CONFIRMED",
        "UNCONFIRMED",
        "MEMBER",
        "ARCHIVED",
        "NON_ARCHIVED",
        "FULLY_CHECKED_IN",
        "NOT_FULLY_CHECKED_IN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFieldset",
      "displayName": "Order Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TICKETS -  Include tickets in response\n <\/code><\/li><li><code> DETAILS -  Include order details: status, first_name, last_name, email, created, etc.\n <\/code><\/li><li><code> FORM -  Include checkout_form\n <\/code><\/li><li><code> INVOICE -  Include invoice\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TICKETS",
        "DETAILS",
        "FORM",
        "INVOICE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketFieldset",
      "displayName": "Ticket Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> GUEST_DETAILS -  Include guest details in ticket response\n <\/code><\/li><li><code> TICKET_DETAILS -  Include ticket details in ticket response\n <\/code><\/li><li><code> GUEST_FORM -  Include individual guest form in ticket response\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "GUEST_DETAILS",
        "TICKET_DETAILS",
        "GUEST_FORM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketsRequest_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ORDER_ARCHIVED -  Returns only archived orders' tickets\n <\/code><\/li><li><code> ORDER_ACTIVE -  Returns only non-archived orders' tickets\n <\/code><\/li><li><code> TICKET_ARCHIVED -  Returns only archived tickets\n <\/code><\/li><li><code> TICKET_ACTIVE -  Returns only non-archived tickets\n <\/code><\/li><li><code> CHECKED_IN -  Returns only checked-in tickets\n <\/code><\/li><li><code> NON_CHECKED_IN -  Returns only non-checked-in tickets\n <\/code><\/li><li><code> FREE -  Returns only free tickets\n <\/code><\/li><li><code> PAID -  Returns only paid tickets\n <\/code><\/li><li><code> MEMBER -  Returns only member tickets\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ORDER_ARCHIVED",
        "ORDER_ACTIVE",
        "TICKET_ARCHIVED",
        "TICKET_ACTIVE",
        "CHECKED_IN",
        "NON_CHECKED_IN",
        "FREE",
        "PAID",
        "MEMBER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderType",
      "displayName": "Order Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNASSIGNED_TICKETS -  Buyer form is used for all tickets\n <\/code><\/li><li><code> ASSIGNED_TICKETS -  Each order ticket has its own form\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNASSIGNED_TICKETS",
        "ASSIGNED_TICKETS"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {}
}