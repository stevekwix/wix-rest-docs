{
  "name": "Projects",
  "client_id": "https://github.com/wix-private/photography-server/tree/master/portfolio/projects-service#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage Projects in Portfolio",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Projects",
    "entity": "_com_wixpress_portfolio_projects_Project",
    "src": "https://github.com/wix-private/photography-server/blob/master/portfolio/projects-service/proto/com/wixpress/portfolio/projects/projects_service.proto/com/wixpress/portfolio/projects/project.proto"
  }],
  "relatedGuides":   [
        {
      "path": "../guides/projects/docs/portfolio-introduction.md",
      "name": "Portfolio Introduction"
    },
        {
      "path": "../guides/projects/docs/introduction.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/projects/docs/use-cases.md",
      "name": "Example Flows"
    }
  ],
  "operations":   [
        {
      "name": "Create Project",
      "methodName": "CreateProject",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Manage Portfolio Projects",
        "description": "Request permission to manage a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["project"],
      "params": [      {
        "in": "BODY",
        "name": "project",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
        "doc": " Project to be created\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreateProject",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_CreateProjectResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nCreates a new Project\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/projects-service/api/v1/portfolio/projects",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateProjectRequest",
        "rpcResponseName": "CreateProjectResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Delete Project",
      "methodName": "DeleteProject",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Manage Portfolio Projects",
        "description": "Request permission to manage a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["projectId"],
      "params":       [
                {
          "in": "PATH",
          "name": "projectId",
          "type": "string",
          "doc": " Id of the Project to delete\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Project\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteProject",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_DeleteProjectResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nDelete a Project\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/projects-service/api/v1/portfolio/projects/{projectId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteProjectRequest",
        "rpcResponseName": "DeleteProjectResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Project",
      "methodName": "GetProject",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Read Portfolio Projects",
        "description": "Request permission to read a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["projectId"],
      "params": [      {
        "in": "PATH",
        "name": "projectId",
        "type": "string",
        "doc": " Id of the Project to retrieve\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetProject",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_GetProjectResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nGet a Project by id\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/projects-service/api/v1/portfolio/projects/{projectId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetProjectRequest",
        "rpcResponseName": "GetProjectResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Projects",
      "methodName": "ListProjects",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Read Portfolio Projects",
        "description": "Request permission to read a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "paging.limit",
          "type": "integer",
          "doc": " Number of items to load.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "paging.cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListProjects",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_ListProjectsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nList all projects in portfolio by creation date\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/projects-service/api/v1/portfolio/projects",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListProjectsRequest",
        "rpcResponseName": "ListProjectsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Query Projects",
      "methodName": "QueryProjects",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Read Portfolio Projects",
        "description": "Request permission to read a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Projects._wix_common_QueryV2",
        "doc": " WQL expression\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryProjects",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_QueryProjectsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nQuery Projects using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/projects-service/api/v1/portfolio/projects/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryProjectsRequest",
        "rpcResponseName": "QueryProjectsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Query Projects With Collection Info",
      "methodName": "QueryProjectsWithCollectionInfo",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Read Portfolio Projects",
        "description": "Request permission to read a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Projects._wix_common_QueryV2",
        "doc": " WQL expression\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryProjectsWithCollectionInfo",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_QueryProjectWithCollectionInfoResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nQuery project in collection context using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n\nBecause project can be ordered different in each collection, use this when want to query the projects in a Collection ordered by the order in given collection\n\nSupported Fields for query and ordering: collectionId, projectId, sortOrder, hidden, projectSlug\n\nIf you want to Query project by Project properties please use Query Projects method - link //TODO\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/projects-service/api/\u000b1/portfolio/projects/collections/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryProjectWithCollectionInfoRequest",
        "rpcResponseName": "QueryProjectWithCollectionInfoResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update Project",
      "methodName": "UpdateProject",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Manage Portfolio Projects",
        "description": "Request permission to manage a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "project",
        "project.id",
        "project.revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "project.id",
          "type": "string",
          "doc": " Project ID\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "project",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
          "doc": " Project to be updated, may be partial\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "mask",
          "type": "All APIs.Projects._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateProject",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_UpdateProjectResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nUpdate a Project, supports partial update\nPass the latest `revision` for a successful update\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/projects-service/api/v1/portfolio/projects/{project.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateProjectRequest",
        "rpcResponseName": "UpdateProjectResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update Project Order In Collection",
      "methodName": "UpdateProjectOrderInCollection",
      "serviceName": "ProjectsService",
      "tag": "Projects",
      "permissions": [      {
        "name": "Manage Portfolio Projects",
        "description": "Request permission to manage a site's portfolio projects collection."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "projectId",
        "collectionId",
        "sortOrder"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "projectId",
          "type": "string",
          "doc": " Id of the Project to update its order\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "collectionId",
          "type": "string",
          "doc": " Id of the collection in which the project will be re-ordered\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "sortOrder",
          "type": "number",
          "doc": " The new sort order of the project in the given collection\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateProjectOrderInCollection",
          "statusCode": "200",
          "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_UpdateProjectOrderInCollectionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "*\nUpdates Project's order in a given Collection\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/projects-service/api/v1/portfolio/projects/{projectId}/collections/{collectionId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateProjectOrderInCollectionRequest",
        "rpcResponseName": "UpdateProjectOrderInCollectionResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_portfolio_projects_ProjectCreatedDomainEvent",
      "name": "Project Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/photography-server/blob/master/portfolio/projects-service/proto/com/wixpress/portfolio/projects/projects_service.proto/com/wixpress/portfolio/projects/projects_service.proto"
      },
      "topic": "domain_events_wix.portfolio.projects.v1.project",
      "tag": "Projects",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.portfolio.projects.v1.project_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_portfolio_projects_ProjectOrderInCollectionUpdatedEventDomainEvent",
      "name": "Project Order In Collection Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/photography-server/blob/master/portfolio/projects-service/proto/com/wixpress/portfolio/projects/projects_service.proto/com/wixpress/portfolio/projects/projects_service.proto"
      },
      "topic": "domain_events_wix.portfolio.projects.v1.project",
      "tag": "Projects",
      "permissions": [],
      "customLabels": [{"id": "maturity-beta"}],
      "eventType": "wix.portfolio.projects.v1.project_project_order_in_collection_updated_event",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_portfolio_projects_ProjectUpdatedDomainEvent",
      "name": "Project Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/photography-server/blob/master/portfolio/projects-service/proto/com/wixpress/portfolio/projects/projects_service.proto/com/wixpress/portfolio/projects/projects_service.proto"
      },
      "topic": "domain_events_wix.portfolio.projects.v1.project",
      "tag": "Projects",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.portfolio.projects.v1.project_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_portfolio_projects_ProjectDeletedDomainEvent",
      "name": "Project Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/photography-server/blob/master/portfolio/projects-service/proto/com/wixpress/portfolio/projects/projects_service.proto/com/wixpress/portfolio/projects/projects_service.proto"
      },
      "topic": "domain_events_wix.portfolio.projects.v1.project",
      "tag": "Projects",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.portfolio.projects.v1.project_deleted",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_portfolio_projects_ProjectCreatedDomainEvent",
      "displayName": "Project Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.portfolio.projects.v1.project`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Project ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectEntityCreatedEvent",
      "displayName": "Project Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectOrderInCollectionUpdatedEventDomainEvent",
      "displayName": "Project Order In Collection Updated Event Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.portfolio.projects.v1.project`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `project_order_in_collection_updated_event`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectOrderInCollectionUpdatedEventActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "ProjectOrderInCollectionUpdatedEvent ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectOrderInCollectionUpdatedEventActionEvent",
      "displayName": "Project Order In Collection Updated Event Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectOrderInCollectionUpdatedEvent",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectUpdatedDomainEvent",
      "displayName": "Project Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.portfolio.projects.v1.project`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Project ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectEntityUpdatedEvent",
      "displayName": "Project Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectDeletedDomainEvent",
      "displayName": "Project Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.portfolio.projects.v1.project`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Project ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectEntityDeletedEvent",
      "displayName": "Project Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_upstream_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID. Required when associating an existing Wix Media image.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL. Required when associating an image from an external database.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height. Required.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width. Required.\n"
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename. \n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_exposure_progallery_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Projects._com_wixpress_exposure_progallery_Image_ImageType",
          "doc": ""
        },
                {
          "name": "imageInfo",
          "type": "All APIs.Projects._upstream_wix_common_Image",
          "doc": "\nImage info - can include Wix Media or an external link. Required.\n"
        },
                {
          "name": "focalPoint",
          "type": "All APIs.Projects._com_wixpress_exposure_progallery_Point",
          "doc": " Focal point of the image.\n"
        },
                {
          "name": "exif",
          "type": "struct",
          "doc": " Set of key-value pairs describing the media in [Exchangeable Image File format](https://en.wikipedia.org/wiki/Exif).\n"
        },
                {
          "name": "quality",
          "type": "integer",
          "doc": " Image compression level. Minimum 30, maximum 100.\n"
        },
                {
          "name": "unsharpMasking",
          "type": "All APIs.Projects._com_wixpress_exposure_progallery_UnsharpMasking",
          "doc": " [Unsharp masking](https://en.wikipedia.org/wiki/Unsharp_masking) values of the image.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_exposure_progallery_UnsharpMasking",
      "displayName": "Unsharp Masking Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "number",
          "doc": " Unsharp masking amount. Controls the sharpening strength. Minimum 0, maximum 5.\n"
        },
                {
          "name": "radius",
          "type": "number",
          "doc": " Unsharp masking radius in pixels. Controls the sharpening width.\n"
        },
                {
          "name": "threshold",
          "type": "number",
          "doc": " Unsharp masking threshold. Controls how different neighboring pixels must be for shapening to apply. Minimum 0, maximum 1.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_exposure_progallery_Point",
      "displayName": "Point Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "x",
          "type": "number",
          "doc": " X-coordinate of the focal point.\n"
        },
                {
          "name": "y",
          "type": "number",
          "doc": " Y-coordinate of the focal point.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_Project",
      "displayName": "Project Object",
      "locations": [],
      "docs":       {
        "summary": "*\nProject is the main entity of ProjectsService\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Project ID\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Project name\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Project description\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " indicates if the project should be hidden from Portfolio\n"
        },
                {
          "name": "coverImage",
          "type": "All APIs.Projects._com_wixpress_exposure_progallery_Image",
          "doc": " project's cover photo\n"
        },
                {
          "name": "collectionIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "\nCollections must exist to be added to a project. can be created/updated/deleted using this //TODO\n All collections the project is part of\n"
        },
                {
          "name": "details",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_ProjectDetail"]
          },
          "doc": "Custom project details\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": ""
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Represents the time this Project was created\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Represents the time this Project was last updated\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectDetail",
      "displayName": "Project Detail Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "key",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectDetail_Key",
          "doc": "\nkey of the detail field from predefined list\n"
        },
                {
          "name": "label",
          "type": "string",
          "doc": " display label of the key\n"
        },
                {
          "name": "value",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectDetail_value",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectDetail_value",
      "displayName": "value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "text",
          "type": "string",
          "doc": " text value\n"
        },
                {
          "name": "number",
          "type": "number",
          "doc": " number value\n"
        },
                {
          "name": "date",
          "type": "string",
          "doc": "date value\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Projects._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Projects._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:  \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Projects._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Projects._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Projects._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Projects._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dipatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Projects._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dipatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Projects._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Projects._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Projects._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Projects._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Projects._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_CreateProjectRequest",
      "displayName": "Create Project Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "project",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
        "doc": " Project to be created\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_CreateProjectResponse",
      "displayName": "Create Project Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "project",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
        "doc": " The created Project\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_GetProjectRequest",
      "displayName": "Get Project Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "projectId",
        "type": "string",
        "doc": " Id of the Project to retrieve\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_GetProjectResponse",
      "displayName": "Get Project Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "project",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
        "doc": " The retrieved Project\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ListProjectsRequest",
      "displayName": "List Projects Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paging",
        "type": "All APIs.Projects._wix_common_CursorPaging",
        "doc": " Projects limit per response is maximum 100, In the first request the cursor is None\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ListProjectsResponse",
      "displayName": "List Projects Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "projects",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_Project"]
          },
          "doc": " The retrieved Projects\n"
        },
                {
          "name": "pagingMetadataV2",
          "type": "All APIs.Projects._wix_common_PagingMetadataV2",
          "doc": " Paging metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_UpdateProjectRequest",
      "displayName": "Update Project Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "project",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
          "doc": " Project to be updated, may be partial\n"
        },
                {
          "name": "mask",
          "type": "All APIs.Projects._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_UpdateProjectResponse",
      "displayName": "Update Project Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "project",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
        "doc": " The updated Project\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_DeleteProjectRequest",
      "displayName": "Delete Project Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "projectId",
          "type": "string",
          "doc": " Id of the Project to delete\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Project\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_DeleteProjectResponse",
      "displayName": "Delete Project Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "projectId",
        "type": "string",
        "doc": " Id of the deleted Project\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_QueryProjectsRequest",
      "displayName": "Query Projects Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Projects._wix_common_QueryV2",
        "doc": " WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_QueryProjectsResponse",
      "displayName": "Query Projects Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "projects",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_Project"]
          },
          "doc": " The retrieved Projects\n"
        },
                {
          "name": "pagingMetadataV2",
          "type": "All APIs.Projects._wix_common_PagingMetadataV2",
          "doc": " Paging metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_UpdateProjectOrderInCollectionRequest",
      "displayName": "Update Project Order In Collection Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "projectId",
          "type": "string",
          "doc": " Id of the Project to update its order\n"
        },
                {
          "name": "collectionId",
          "type": "string",
          "doc": " Id of the collection in which the project will be re-ordered\n"
        },
                {
          "name": "sortOrder",
          "type": "number",
          "doc": " The new sort order of the project in the given collection\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_UpdateProjectOrderInCollectionResponse",
      "displayName": "Update Project Order In Collection Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "project",
        "type": "All APIs.Projects._com_wixpress_portfolio_projects_ProjectInCollection",
        "doc": " project with new sort order set\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectInCollection",
      "displayName": "Project In Collection Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "collectionId",
          "type": "string",
          "doc": " Collection ID\n"
        },
                {
          "name": "project",
          "type": "All APIs.Projects._com_wixpress_portfolio_projects_Project",
          "doc": " Project\n"
        },
                {
          "name": "sortOrder",
          "type": "number",
          "doc": " The sort order of the project in the given Collection\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_QueryProjectWithCollectionInfoRequest",
      "displayName": "Query Project With Collection Info Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Projects._wix_common_QueryV2",
        "doc": " WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_QueryProjectWithCollectionInfoResponse",
      "displayName": "Query Project With Collection Info Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "projects",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Projects._com_wixpress_portfolio_projects_ProjectInCollection"]
          },
          "doc": " The retrieved Projects in Collection\n"
        },
                {
          "name": "pagingMetadataV2",
          "type": "All APIs.Projects._wix_common_PagingMetadataV2",
          "doc": " Paging metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectOrderInCollectionUpdatedEvent",
      "displayName": "Project Order In Collection Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "projectId",
          "type": "string",
          "doc": " Id of the Project to update its order\n"
        },
                {
          "name": "collectionId",
          "type": "string",
          "doc": " Id of the collection in which the project will be re-ordered\n"
        },
                {
          "name": "sortOrder",
          "type": "number",
          "doc": " The new sort order of the project in the given collection\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_exposure_progallery_Image_ImageType",
      "displayName": "Image Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> WIX_MEDIA <\/code><\/li><li><code> EXTERNAL <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "WIX_MEDIA",
        "EXTERNAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_portfolio_projects_ProjectDetail_Key",
      "displayName": "Key Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> ROLE <\/code><\/li><li><code> LOCATION <\/code><\/li><li><code> DATE <\/code><\/li><li><code> CUSTOM <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "ROLE",
        "LOCATION",
        "DATE",
        "CUSTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.portfolio.projects-service"}
}