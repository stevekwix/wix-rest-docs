{
  "name": "Authorization",
  "client_id": "https://github.com/wix-private/server-infra/tree/master/core-services/authorization/abac-wix-proto-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Responsible for authorization of requests in Wix. Currently supports USER Identites only.",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "IsPermitted",
      "entity": null
    },
        {
      "name": "UsersAuthorizationQuery",
      "entity": null
    },
        {
      "name": "SubjectsQueryService",
      "entity": null
    },
        {
      "name": "AbacManagementService",
      "entity": null
    },
        {
      "name": "BackOfficeIsPermitted",
      "entity": null
    },
        {
      "name": "SitePoliciesManagementService",
      "entity": null
    },
        {
      "name": "AccountPoliciesManagementService",
      "entity": null
    }
  ],
  "relatedGuides": [],
  "operations":   [
        {
      "name": "Clear Assigned Policies",
      "methodName": "ClearAssignedPolicies",
      "serviceName": "SitePoliciesManagement",
      "tag": "SitePoliciesManagementService",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["accountId"],
      "params": [      {
        "in": "PATH",
        "name": "accountId",
        "type": "string",
        "doc": "assignee account id\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "ClearAssignedPolicies",
          "statusCode": "200",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_ClearAssignedPoliciesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Clear all account assigned policies on a site (site id is extracted from context)\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/authorization-server/v1/account/{accountId}/assigned-policies",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ClearAssignedPoliciesRequest",
        "rpcResponseName": "ClearAssignedPoliciesResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Is Permitted By App Instance",
      "methodName": "IsPermittedByAppInstance",
      "serviceName": "BackOfficeAuthorizationService",
      "tag": "BackOfficeIsPermitted",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "permission",
        "appInstance"
      ],
      "params":       [
                {
          "in": "QUERY",
          "name": "permission",
          "type": "string",
          "doc": " The permission that will be checked.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "appInstance",
          "type": "string",
          "doc": " A signed token of an app instance generated by Wix, representing the user and the resource context.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "IsPermittedByAppInstance",
          "statusCode": "200",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_IsPermittedResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint extracts a user and a resource (for example - a site) from a signed Wix app instance, and allows to ask if the user\n is permitted to work on the resource.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/authorization-server/v1/authorization/bo/is_permitted_by_app_instance",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "IsPermittedByAppInstanceRequest",
        "rpcResponseName": "IsPermittedResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events": [],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_authorization_abac_ResourceContext",
      "displayName": "Resource Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "Context",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_ResourceContext_Context",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_ResourceContext_Context",
      "displayName": "Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "siteContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_SiteResourceContext",
          "doc": ""
        },
                {
          "name": "accountContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_AccountResourceContext",
          "doc": "",
          "deprecated": true
        },
                {
          "name": "organizationContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_OrganizationResourceContext",
          "doc": ""
        },
                {
          "name": "accountContextV2",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_AccountResourceContextV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_FullNameResource",
      "displayName": "Full Name Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ResourceContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_FullNameResource_ResourceContext",
          "doc": ""
        },
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": " A specific resource. We will determine the resource type based on the action.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_FullNameResource_ResourceContext",
      "displayName": "Resource Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "siteContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_SiteResourceContext",
          "doc": " A specific site (we will retrieve the account that the site belongs to)\n"
        },
                {
          "name": "accountContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_AccountResourceContext",
          "doc": " A specific account\n"
        },
                {
          "name": "organizationContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_OrganizationResourceContext",
          "doc": " A specific organization\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_Resource",
      "displayName": "Resource Object",
      "locations": [],
      "docs":       {
        "summary": " A custom resource. Is used to represent some asset that is not a direct resource context (site or account), but something custom.\n For example: payment method, blog post, domain, logo.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " The resource id.\n"
        },
                {
          "name": "type",
          "type": "string",
          "doc": " The resource type\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_SiteResourceContext",
      "displayName": "Site Resource Context Object",
      "locations": [],
      "docs":       {
        "summary": " Site resource context. It indicates that the resource is under a site (can be the site itself or some asset of a site, like a blog post)\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "metasiteId",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_AccountResourceContext",
      "displayName": "Account Resource Context Object",
      "locations": [],
      "docs":       {
        "summary": " Account resource contexts. It indicates that the resource is under the account (can be the account itself or some asset of an account, like a logo or a domain)\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "accountId",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_AccountResourceContextV2",
      "displayName": "Account Resource Context V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "Context",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AccountResourceContextV2_Context",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_AccountResourceContextV2_Context",
      "displayName": "Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " specific account\n"
        },
                {
          "name": "all",
          "type": "boolean",
          "doc": " all accounts\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_OrganizationResourceContext",
      "displayName": "Organization Resource Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_Subject",
      "displayName": "Subject Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": ""
        },
                {
          "name": "subjectType",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_SubjectType",
          "doc": ""
        },
                {
          "name": "context",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_SubjectContext",
          "doc": " The context of the subject. For example - the context of a user subject is his account.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_SubjectContext",
      "displayName": "Subject Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": ""
        },
                {
          "name": "contextType",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_SubjectContextType",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "customAttributesMapEntry",
      "displayName": "custom Attributes Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. The attributes you pass with the call. If the policy was assigned without any condition, you don't need to pass any attributes.\n If the policy was assigned with a condition, in order to get `isPermitted = true` you need to pass the matching attributes.\n For example - in case there is an `msid` condition on one of the statements (common for account level actions assigned to contributors)\n you need to pass the `msid` the contributor is working on as an attribute, alongside an account resource context.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AttributeValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_IsPermittedRequest",
      "displayName": "Is Permitted Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "permission",
          "type": "string",
          "doc": " The permission to check on. All casing will be checked.\n"
        },
                {
          "name": "resourceContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_ResourceContext",
          "doc": " The resource context to check on. The context usually matches the level of the action, which can be found in the permission catalog.\n"
        },
                {
          "name": "resourceId",
          "type": "string",
          "doc": " Optional id of a specific resource. In case there was an assignment of a policy on a specific resource, the id of the resource should be passed here.\n The type of the resource will be derived from the permission catalog (each permission can have a resource type)\n"
        },
                {
          "name": "customAttributes",
          "type": "All APIs.Authorization.customAttributesMapEntry",
          "doc": "Set of key-value pairs. The attributes you pass with the call. If the policy was assigned without any condition, you don't need to pass any attributes.\n If the policy was assigned with a condition, in order to get `isPermitted = true` you need to pass the matching attributes.\n For example - in case there is an `msid` condition on one of the statements (common for account level actions assigned to contributors)\n you need to pass the `msid` the contributor is working on as an attribute, alongside an account resource context.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_ImplicitIsPermittedRequest",
      "displayName": "Implicit Is Permitted Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "permission",
        "type": "string",
        "doc": " The permission to check on. All casing will be checked.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_AttributeValue",
      "displayName": "Attribute Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "Value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AttributeValue_Value",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_AttributeValue_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "stringValue",
          "type": "string",
          "doc": ""
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_IsPermittedResponse",
      "displayName": "Is Permitted Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "isPermitted",
        "type": "boolean",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_GetRestrictionsRequest",
      "displayName": "Get Restrictions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " The subject that you want to check whether or not he has restrictions on the assignment\n"
        },
                {
          "name": "resources",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_RestrictedResource"]
          },
          "doc": " The resource to check on. The context usually matches the level of the action, which can be found in the permission catalog.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_GetRestrictionsResponse",
      "displayName": "Get Restrictions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "restrictions",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_RestrictedResource"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_RestrictedResource",
      "displayName": "Restricted Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "resource",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_ResourceContext",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_BulkIsPermittedRequest",
      "displayName": "Bulk Is Permitted Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "permission",
          "type": "string",
          "doc": " The permission to check on. All casing will be checked.\n"
        },
                {
          "name": "resources",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_IsPermittedResource"]
          },
          "doc": " The resources you want to check on. Limited to 50 resources per request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "customAttributesMapEntry",
      "displayName": "custom Attributes Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. The attributes you pass with the call. If the policy was assigned without any condition, you don't need to pass any attributes.\n If the policy was assigned with a condition, in order to get `isPermitted = true` you need to pass the matching attributes.\n For example - in case there is an `msid` condition on one of the statements (common for account level actions assigned to contributors)\n you need to pass the `msid` the contributor is working on as an attribute, alongside an account resource context.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AttributeValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_IsPermittedResource",
      "displayName": "Is Permitted Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resourceContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_ResourceContext",
          "doc": " The resource context to check on. The context usually matches the level of the action, which can be found in the permission catalog.\n"
        },
                {
          "name": "resourceId",
          "type": "string",
          "doc": " Optional id of a specific resource. In case there was an assignment of a policy on a specific resource, the id of the resource should be passed here.\n The type of the resource will be derived from the permission catalog (each permission can have a resource type)\n"
        },
                {
          "name": "customAttributes",
          "type": "All APIs.Authorization.customAttributesMapEntry",
          "doc": "Set of key-value pairs. The attributes you pass with the call. If the policy was assigned without any condition, you don't need to pass any attributes.\n If the policy was assigned with a condition, in order to get `isPermitted = true` you need to pass the matching attributes.\n For example - in case there is an `msid` condition on one of the statements (common for account level actions assigned to contributors)\n you need to pass the `msid` the contributor is working on as an attribute, alongside an account resource context.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_BulkIsPermittedResponse",
      "displayName": "Bulk Is Permitted Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "resourcesIsPermitted",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_ResourceIsPermitted"]
        },
        "doc": " A map between a resource and the isPermitted result for each one\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_ResourceIsPermitted",
      "displayName": "Resource Is Permitted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_IsPermittedResource",
          "doc": " The queried resource\n"
        },
                {
          "name": "isPermitted",
          "type": "boolean",
          "doc": " The isPermitted result fot that resource\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_BackOfficeIsPermitted",
      "displayName": "Back Office Is Permitted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " The subject to perform the isPermitted ofr\n"
        },
                {
          "name": "request",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_IsPermittedRequest",
          "doc": " The request of `isPermitted` the caller wants to perform\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_BulkBackOfficeIsPermittedRequest",
      "displayName": "Bulk Back Office Is Permitted Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " The subject to check the permission for\n"
        },
                {
          "name": "request",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_BulkIsPermittedRequest",
          "doc": " The bulk request of `isPermitted` to be performed\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_IsPermittedByAppInstanceRequest",
      "displayName": "Is Permitted By App Instance Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "permission",
          "type": "string",
          "doc": " The permission that will be checked.\n"
        },
                {
          "name": "appInstance",
          "type": "string",
          "doc": " A signed token of an app instance generated by Wix, representing the user and the resource context.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_PolicyCondition",
      "displayName": "Policy Condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "condition",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ConditionType",
        "doc": " The type of the condition\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ConditionType",
      "displayName": "Condition Type Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "of",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ConditionType_of",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ConditionType_of",
      "displayName": "of Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "simpleCondition",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_SimpleCondition",
          "doc": "",
          "deprecated": true
        },
                {
          "name": "joinedConditions",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_JoinedCondition",
          "doc": " A logic combination between several conditions, with an operator between them\n"
        },
                {
          "name": "environmentCondition",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_EnvironmentCondition",
          "doc": "",
          "deprecated": true
        },
                {
          "name": "condition",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Condition",
          "doc": " A single condition\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_management_JoinedCondition",
      "displayName": "Joined Condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "op",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_JoinedConditionOperator",
          "doc": " The operator that should be used when evaluating the condition\n"
        },
                {
          "name": "conditions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_ConditionType"]
          },
          "doc": " The conditions that should be evaluated, and then joined using the operator provided\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_Condition",
      "displayName": "Condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "conditionModelId",
          "type": "string",
          "doc": " The unique identifier of the condition model. Indicates which actions the condition is working on\n"
        },
                {
          "name": "operator",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ConditionOperator",
          "doc": " The operator that should be evaluated\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ConditionOperator",
      "displayName": "Condition Operator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "operators",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ConditionOperator_operators",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ConditionOperator_operators",
      "displayName": "operators Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "equals",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_EqualOperator",
          "doc": " Comparison of equality - will be evaluated to true if the given parties are equal\n"
        },
                {
          "name": "like",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_LikeOperator",
          "doc": " Regex operator - will be evaluated to true if the given value matches the provided regex\n"
        },
                {
          "name": "experiment",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ExperimentOperator",
          "doc": " Petri experiment - will be evaluated using petri.\n"
        },
                {
          "name": "dependOn",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_DependOnOperator",
          "doc": " Operator that indicates a dependency on another subject being allowed to perform something.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_management_EqualOperator",
      "displayName": "Equal Operator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "attrName",
          "type": "string",
          "doc": " The attribute which should be compared. The attribute will be first evaluated to a value, and then compared the other side (attribute/value)\n"
        },
                {
          "name": "value",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ConditionValue",
          "doc": " The value to compare to. If the two parties are equal - we will return true.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_LikeOperator",
      "displayName": "Like Operator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "attrName",
          "type": "string",
          "doc": " The attribute which should be compared. The attribute will be first evaluated to a value, and then compared the regex values provided.\n"
        },
                {
          "name": "values",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " The regex values which the attribute value should be evaluated on. If the attribute value matches at least one of the regular expressions provided - we will return true\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ExperimentOperator",
      "displayName": "Experiment Operator Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "spec",
          "type": "string",
          "doc": " The spec to conduct the experiment on.\n"
        },
                {
          "name": "fallbackValue",
          "type": "string",
          "doc": " The value to use if the experiment could not be conducted\n"
        },
                {
          "name": "expectedValue",
          "type": "string",
          "doc": " The expected value of the experiment conduction. If it matches the actual value - true will be returned. Otherwise - false.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_DependOnOperator",
      "displayName": "Depend On Operator Object",
      "locations": [],
      "docs":       {
        "summary": " Implies that the policy takes affect only if the depend on subject is permitted as well.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "dependOnSubject",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
        "doc": " The subject on which the current entry depends on. If the subject is allowed to perform what the query was about - the condition will be evaluated to true. Otherwise - false\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_SimpleCondition",
      "displayName": "Simple Condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "attrName",
          "type": "string",
          "doc": ""
        },
                {
          "name": "value",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_SimpleConditionValue",
          "doc": ""
        },
                {
          "name": "op",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_SimpleConditionOperator",
          "doc": ""
        },
                {
          "name": "conditionModelId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_EnvironmentCondition",
      "displayName": "Environment Condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "condition",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_EnvironmentCondition_condition",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_EnvironmentCondition_condition",
      "displayName": "condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "experimentCondition",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ExperimentCondition",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_management_SimpleConditionValue",
      "displayName": "Simple Condition Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "Value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_SimpleConditionValue_Value",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_SimpleConditionValue_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "attrName",
          "type": "string",
          "doc": ""
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": ""
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ConditionValue",
      "displayName": "Condition Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "Value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ConditionValue_Value",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ConditionValue_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "attrName",
          "type": "string",
          "doc": " an attribute. We'll first retrieve the value of the attribute (from the request or from pre-indexed values), and then compare to what it needs to be compared with.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " a value with a string type. Will be compared to the attribute provided, and be true only if they match the operator.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " a value with a boolean type. Will be compared to the attribute provided, and be true only if they match the operator.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ExperimentCondition",
      "displayName": "Experiment Condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "spec",
          "type": "string",
          "doc": ""
        },
                {
          "name": "fallbackValue",
          "type": "string",
          "doc": ""
        },
                {
          "name": "expectedValue",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_Policy",
      "displayName": "Policy Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": ""
        },
                {
          "name": "description",
          "type": "string",
          "doc": ""
        },
                {
          "name": "status",
          "type": "string",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "policyType",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyType",
          "doc": ""
        },
                {
          "name": "statements",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyStatement"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_PolicyStatement",
      "displayName": "Policy Statement Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "permissions",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "scopes",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "effect",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Effect",
          "doc": ""
        },
                {
          "name": "condition",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyCondition",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_CreatePolicyRequest",
      "displayName": "Create Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Policy",
        "doc": " The policy to create\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_CreatePolicyResponse",
      "displayName": "Create Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Policy",
        "doc": " The created policy\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_UpdatePolicyAuthorizationDataRequest",
      "displayName": "Update Policy Authorization Data Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policyId",
          "type": "string",
          "doc": " The id of the policy to update\n"
        },
                {
          "name": "policyStatements",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyStatement"]
          },
          "doc": " A list of the new statements. They will override any existing statements.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_UpdatePolicyMetadataRequest",
      "displayName": "Update Policy Metadata Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policyId",
          "type": "string",
          "doc": " The id of the policy to update.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " The new name of the policy. If empty - the old name won't be overriden.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " The description of the policy. If empty - the old value won't be overriden.\n"
        },
                {
          "name": "status",
          "type": "string",
          "doc": " The status of the policy. Can be either \"ACTIVE\" or \"INACTIVE\".\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_UpdatePolicyResponse",
      "displayName": "Update Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "updated",
          "type": "boolean",
          "doc": " Whether or not the update was successful (might not be successful in case the policy doesn't exist).\n"
        },
                {
          "name": "policy",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Policy",
          "doc": " The updated policy\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_GetPolicyRequest",
      "displayName": "Get Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policyId",
        "type": "string",
        "doc": " The id of the policy to return\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_GetPolicyResponse",
      "displayName": "Get Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Policy",
        "doc": " The full policy.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_GetPoliciesRequest",
      "displayName": "Get Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_GetPoliciesResponse",
      "displayName": "Get Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policies",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_Policy"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_DeletePolicyRequest",
      "displayName": "Delete Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policyId",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_DeletePolicyResponse",
      "displayName": "Delete Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deleted",
        "type": "boolean",
        "doc": " Whether or not something was deleted.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_DeleteAssignmentsRequest",
      "displayName": "Delete Assignments Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_DeleteAssignmentsResponse",
      "displayName": "Delete Assignments Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deletedAssignmentIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_UpdateAssignmentRequest",
      "displayName": "Update Assignment Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "assignmentId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "assignmentFields",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_AssignmentUpdateField"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_AssignmentUpdateField",
      "displayName": "Assignment Update Field Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentField",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_AssignmentUpdateField_AssignmentField",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_AssignmentUpdateField_AssignmentField",
      "displayName": "Assignment Field Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentResource",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ResourceUpdate",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ResourceUpdate",
      "displayName": "Resource Update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "update",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_ResourceUpdate_update",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_ResourceUpdate_update",
      "displayName": "update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": ""
        },
                {
          "name": "allResources",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_AllResources",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_management_AllResources",
      "displayName": "All Resources Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_UpdateAssignmentResponse",
      "displayName": "Update Assignment Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_DeletePolicyStatementRequest",
      "displayName": "Delete Policy Statement Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "statementId",
        "type": "string",
        "doc": " The statement id to delete.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_DeletePolicyStatementResponse",
      "displayName": "Delete Policy Statement Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "deleted",
          "type": "boolean",
          "doc": " Whether or not something was deleted.\n"
        },
                {
          "name": "policy",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Policy",
          "doc": " The update policy\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_AssignPolicyRequest",
      "displayName": "Assign Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " The subject to assign to policy to.\n"
        },
                {
          "name": "policyId",
          "type": "string",
          "doc": " The id of the policy to assign.\n"
        },
                {
          "name": "resourceContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_ResourceContext",
          "doc": " The context of the resource. It can be either site, account or organization.\n"
        },
                {
          "name": "condition",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyCondition",
          "doc": " A condition the is applied on the assignment. Can be a limit on some attribute that needs to be passed on isPermitted\n"
        },
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": " The resource you assign the policy to. Can be left empty in case of direct assignment on account/site.\n However, if it's a custom resource, it must be specified here.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_AssignPolicyResponse",
      "displayName": "Assign Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentId",
        "type": "string",
        "doc": " The unique id of the assignment.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_UnassignPolicyFromSubjectRequest",
      "displayName": "Unassign Policy From Subject Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " The subject to unassign to policy from.\n"
        },
                {
          "name": "policyId",
          "type": "string",
          "doc": " The policy id to unassign.\n"
        },
                {
          "name": "resourceContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_ResourceContext",
          "doc": " From which resource context to unassign the policy.\n"
        },
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": " The resource you assign the policy to. Can be left empty in case of direct assignment on account/site.\n However, if it's a custom resource, it must be specified here.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_UnassignPolicyFromSubjectResponse",
      "displayName": "Unassign Policy From Subject Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentsCount",
        "type": "integer",
        "doc": " The number of assignments that were unassigned.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_FoldExperimentRequest",
      "displayName": "Fold Experiment Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policyId",
          "type": "string",
          "doc": " The id of the policy to find and fold the experiment on\n"
        },
                {
          "name": "spec",
          "type": "string",
          "doc": " The spec to search and fold.\n"
        },
                {
          "name": "winningValue",
          "type": "string",
          "doc": " The winning value of the experiment, AKA the desired state.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_FoldExperimentResponse",
      "displayName": "Fold Experiment Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_AssignPoliciesToTeamMemberRequest",
      "displayName": "Assign Policies To Team Member Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "userId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "teamAccountId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "assignments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_AccountPolicyAssignment"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_AssignPoliciesToTeamMemberResponse",
      "displayName": "Assign Policies To Team Member Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignments",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_AccountPolicyAssignment"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ClearTeamMemberPoliciesRequest",
      "displayName": "Clear Team Member Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "userId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "teamAccountId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ClearTeamMemberPoliciesResponse",
      "displayName": "Clear Team Member Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentsCount",
        "type": "integer",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ReplaceAllTeamMemberPoliciesRequest",
      "displayName": "Replace All Team Member Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "userId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "teamAccountId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "newAssignments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_AccountPolicyAssignment"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ReplaceAllTeamMemberPoliciesResponse",
      "displayName": "Replace All Team Member Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "createdAssignments",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_AccountPolicyAssignment"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ReplaceTeamMemberPoliciesRequest",
      "displayName": "Replace Team Member Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "userId",
          "type": "string",
          "doc": " The user which will be assigned with the new policies and unassigned the specified old ones.\n"
        },
                {
          "name": "teamAccountId",
          "type": "string",
          "doc": " The ID of the account in which the user has a role in.\n"
        },
                {
          "name": "newAssignments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_AccountPolicyAssignment"]
          },
          "doc": " An array of assignments to be assigned for the user in the context of the account.\n"
        },
                {
          "name": "assignmentIdsToReplace",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " An array of existing assignment IDs to be replaced as part of the operation.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ReplaceTeamMemberPoliciesResponse",
      "displayName": "Replace Team Member Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "createdAssignments",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_AccountPolicyAssignment"]
        },
        "doc": " The new assignments created for the given user.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_AccountPolicyAssignment",
      "displayName": "Account Policy Assignment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "assignmentId",
          "type": "string",
          "doc": " The assignment ID created internally.\n",
          "readOnly": true
        },
                {
          "name": "policyId",
          "type": "string",
          "doc": " The policy which holds scopes and actions.\n"
        },
                {
          "name": "condition",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyCondition",
          "doc": " A custom condition on the resource attributes.\n"
        },
                {
          "name": "site",
          "type": "string",
          "doc": "",
          "deprecated": true
        },
                {
          "name": "siteRestriction",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_typed_Site",
          "doc": " Optional: Restrict the assignment to a specific site context.\n Adding such restriction means that the permissions that are included in the policy, will only be permitted for\n this specific site context.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_DeleteTeamMemberAssignmentsRequest",
      "displayName": "Delete Team Member Assignments Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_DeleteTeamMemberAssignmentsResponse",
      "displayName": "Delete Team Member Assignments Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentsCount",
        "type": "integer",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_Site",
      "displayName": "Site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " The meta site ID.\n"
        },
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": " An optional specific resource within the site context (e.g. page).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_AssignPoliciesRequest",
      "displayName": "Assign Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": "assignee account id\n"
        },
                {
          "name": "assignments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_SitePolicyAssignment"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_AssignPoliciesResponse",
      "displayName": "Assign Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignments",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_SitePolicyAssignment"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ClearAssignedPoliciesRequest",
      "displayName": "Clear Assigned Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "accountId",
        "type": "string",
        "doc": "assignee account id\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ClearAssignedPoliciesResponse",
      "displayName": "Clear Assigned Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "assignmentsCount",
        "type": "integer",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ReplaceAllAssignedPoliciesRequest",
      "displayName": "Replace All Assigned Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": "assignee account id\n"
        },
                {
          "name": "newAssignments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_SitePolicyAssignment"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_ReplaceAllAssignedPoliciesResponse",
      "displayName": "Replace All Assigned Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "createdAssignments",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_typed_SitePolicyAssignment"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_SitePolicyAssignment",
      "displayName": "Site Policy Assignment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "assignmentId",
          "type": "string",
          "doc": "",
          "readOnly": true
        },
                {
          "name": "policyId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_UpdatePoliciesOnSiteTransferRequest",
      "displayName": "Update Policies On Site Transfer Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originalOwnerAccountId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "newOwnerAccountId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "keepOriginalOwnerAsContributor",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_typed_UpdatePoliciesOnSiteTransferResponse",
      "displayName": "Update Policies On Site Transfer Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_SubjectAssignment",
      "displayName": "Subject Assignment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " The subject that has the assignments\n"
        },
                {
          "name": "policies",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_PolicyAssignment"]
          },
          "doc": " The policies that the subject has assigned\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_PolicyAssignment",
      "displayName": "Policy Assignment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policyId",
          "type": "string",
          "doc": " The id of the policy\n"
        },
                {
          "name": "policyName",
          "type": "string",
          "doc": " The name of the policy (will be the role name)\n"
        },
                {
          "name": "assignedAt",
          "type": "string",
          "doc": " When was the policy assigned (the date when the assignment was given)\n"
        },
                {
          "name": "assignmentId",
          "type": "string",
          "doc": " The unique id of the assignment\n"
        },
                {
          "name": "policyDescription",
          "type": "string",
          "doc": " The name of the policy (will be the role name)\n"
        },
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": " The resource (if any) that the policy is assigned on\n"
        },
                {
          "name": "condition",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyCondition",
          "doc": " The condition (if exists) on the policy assignment\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_SubjectView",
      "displayName": "Subject View Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " A subject That is allowed to perform the action on the requested resource\n"
        },
                {
          "name": "resourceEntities",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceEntity"]
          },
          "doc": " a list of additional info specific to the assignment of the subject on the requested resource\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ResourceEntity",
      "displayName": "Resource Entity Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "resourceConditions",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_Condition"]
        },
        "doc": " Conditions that the assignment depend on, and we couldn't meet the request resource attributes\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_Condition",
      "displayName": "Condition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "condition",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyCondition",
        "doc": " Subject's condition that was not evaluated\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "resourceAttributesMapEntry",
      "displayName": "resource Attributes Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource as one of the resources you are permitted to work on, but for `A` = \"Banana\" you won't get it.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AttributeValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetPermittedSubjectsRolesRequest",
      "displayName": "Get Permitted Subjects Roles Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_FullNameResource",
          "doc": " The full name resource you want make this query on\n"
        },
                {
          "name": "inSpecificAccount",
          "type": "string",
          "doc": " If you want to get the permitted users that belong to a specific account, you can use this field with the desired account id.\n"
        },
                {
          "name": "resourceAttributes",
          "type": "All APIs.Authorization.resourceAttributesMapEntry",
          "doc": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource as one of the resources you are permitted to work on, but for `A` = \"Banana\" you won't get it.\n"
        },
                {
          "name": "subjectTypes",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_SubjectTypesFilter",
          "doc": " An optional filter of requested subject types, If you want to get only accounts, for example, you can use this filter and avoid getting any other subject type\n"
        },
                {
          "name": "exceptPolicies",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " A list of policy ids to filter out from the response\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Authorization._wix_common_Paging",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetPermittedSubjectsRolesResponse",
      "displayName": "Get Permitted Subjects Roles Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subjectAssignments",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_SubjectAssignment"]
        },
        "doc": " The assignments that the subjects have on the resource\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "resourceAttributesMapEntry",
      "displayName": "resource Attributes Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource as one of the resources you are permitted to work on, but for `A` = \"Banana\" you won't get it.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AttributeValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetPermittedSubjectsStatementsRequest",
      "displayName": "Get Permitted Subjects Statements Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "string",
          "doc": " The action you want to query\n"
        },
                {
          "name": "fullNameResource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_FullNameResource",
          "doc": " The full name resource you want make this query on\n"
        },
                {
          "name": "resourceAttributes",
          "type": "All APIs.Authorization.resourceAttributesMapEntry",
          "doc": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource as one of the resources you are permitted to work on, but for `A` = \"Banana\" you won't get it.\n"
        },
                {
          "name": "inSpecificAccount",
          "type": "string",
          "doc": " If you want to get the permitted users that belong to a specific account, you can use this field with the desired account id.\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Authorization._wix_common_Paging",
          "doc": " Paging the subjects to be retrieved\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetPermittedSubjectsStatementsResponse",
      "displayName": "Get Permitted Subjects Statements Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subjects",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_SubjectView"]
        },
        "doc": " Subject representation\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_BulkGetPermittedSubjectsCountRequest",
      "displayName": "Bulk Get Permitted Subjects Count Request Object",
      "locations": [],
      "docs":       {
        "summary": " No paging, we'll limit to max number of resources in request\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "string",
          "doc": " The action you want to query\n"
        },
                {
          "name": "fullNameResources",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_FullNameResource"]
          },
          "doc": " A list of resources you want to query on\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_BulkGetPermittedSubjectsCountResponse",
      "displayName": "Bulk Get Permitted Subjects Count Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "permittedSubjectsCount",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceContributorCount"]
        },
        "doc": " A map between a resource and the number of subjects that can perform the operation on it\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ResourceContributorCount",
      "displayName": "Resource Contributor Count Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_FullNameResource",
          "doc": " The specific resource\n"
        },
                {
          "name": "subjects",
          "type": "integer",
          "doc": " The number of subjects that can perform the operation on it\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_SubjectTypesFilter",
      "displayName": "Subject Types Filter Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subjectTypes",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_SubjectType"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetCurrentSubjectContainedPoliciesRequest",
      "displayName": "Get Current Subject Contained Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resourceFilter",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceFilter",
          "doc": " A resource filter. The query will look for the permissions the subject is assigned with on this resource (directly or implicitly) only\n"
        },
                {
          "name": "policyIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " A policies filter. The query will check which policies from this list, have all their permissions contained in the permissions the subject is assigned on the filtered resource\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetCurrentSubjectContainedPoliciesResponse",
      "displayName": "Get Current Subject Contained Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policyIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " A subset of the filtered policies from the request, only with the policies that all their permissions\n are contained in the permissions the subject is assigned on the filtered resource from the request\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectAssignedPoliciesRequest",
      "displayName": "Get Subject Assigned Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subject",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
        "doc": " The queried subject\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectAssignedPoliciesResponse",
      "displayName": "Get Subject Assigned Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policiesAssignedOnResources",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_RolesOnResource"]
        },
        "doc": " A map between the resources to the policies the subject is assigned on these resources\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectRolesRequest",
      "displayName": "Get Subject Roles Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "resourcesFilter",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceFilter"]
        },
        "doc": " A filter for the resources returned. You can provide specific site or sites to query on, instead of searching anything the user has\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectRolesResponse",
      "displayName": "Get Subject Roles Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rolesOnResources",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_RolesOnResource"]
        },
        "doc": " A map between the resources the user has a role on and the actual resource\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_BulkGetSubjectRolesRequest",
      "displayName": "Bulk Get Subject Roles Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subjects",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_Subject"]
          },
          "doc": " A list of subjects you want to query about\n"
        },
                {
          "name": "resourcesFilter",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceFilter"]
          },
          "doc": " A filter for the resources. If you have in hand a list of resources and you want to query for only some of them, you can provide them here. We'll do a logic OR between the filters.\n"
        },
                {
          "name": "action",
          "type": "string",
          "doc": " An action you can filter on (give me all the roles that contain this action only)\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_BulkGetSubjectRolesResponse",
      "displayName": "Bulk Get Subject Roles Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "subjectRoles",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_SubjectRoles"]
        },
        "doc": " A map between the requested subject and the resources with the role he has on each resource\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "resourceAttributesMapEntry",
      "displayName": "resource Attributes Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource as one of the resources you are permitted to work on, but for `A` = \"Banana\" you won't get it.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AttributeValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "deprecated": true
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectPermittedResourcesRequest",
      "displayName": "Get Subject Permitted Resources Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "string",
          "doc": " The action we query about. Notice that the action also determines the type of resource you are querying about.\n"
        },
                {
          "name": "resourcesFilter",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceFilter"]
          },
          "doc": " A filter for the resources. If you have in hand a list of resources and you want to query for only some of them, you can provide them here. We'll do a logic OR between the filters.\n"
        },
                {
          "name": "resourceAttributes",
          "type": "All APIs.Authorization.resourceAttributesMapEntry",
          "doc": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource as one of the resources you are permitted to work on, but for `A` = \"Banana\" you won't get it.\n",
          "deprecated": true
        },
                {
          "name": "paging",
          "type": "All APIs.Authorization._wix_common_Paging",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectPermittedResourcesResponse",
      "displayName": "Get Subject Permitted Resources Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "resources",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_PermittedResource"]
        },
        "doc": " The resources that the subject is permitted to do the action on.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectPermittingAssignmentsRequest",
      "displayName": "Get Subject Permitting Assignments Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resourcesFilter",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceFilter"]
          },
          "doc": " A filter for the resources. If you have in hand a list of resources and you want to query for only some of them, you can provide them here. We'll do a logic OR between the filters.\n"
        },
                {
          "name": "actionsFilter",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_ActionsFilter",
          "doc": " Optional action filter. If you want only assignments (and scopes and actions) from a closed list - you can provide the actions here\n"
        },
                {
          "name": "consistencyLevel",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_ConsistencyLevel",
          "doc": ""
        },
                {
          "name": "paging",
          "type": "All APIs.Authorization._wix_common_Paging",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_GetSubjectPermittingAssignmentsResponse",
      "displayName": "Get Subject Permitting Assignments Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "resources",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceAssignment"]
        },
        "doc": " A map between a resource and the assignments the user has on the resource.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_PermittedResource",
      "displayName": "Permitted Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceResponse",
          "doc": " The tree describing the resource.\n"
        },
                {
          "name": "resourceConditions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyCondition"]
          },
          "doc": " Condition that the subject might have to work on this resource. If the assignment contains a resource that was not calculated using the attributes passes, it will be returned here.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ResourceResponse",
      "displayName": "Resource Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "organizationContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_OrganizationPartialPath",
          "doc": " Which organization the resource belongs to.\n"
        },
                {
          "name": "accountContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_AccountPartialPath",
          "doc": " Which account the resource belongs to. It can be either a specific account or any account\n"
        },
                {
          "name": "siteContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_SitePartialPath",
          "doc": " Which site the resource belongs to. It can be a specific site or any site.\n"
        },
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_CustomResource",
          "doc": " The custom resource. It can be a specific id or any. In cases where the resource is the site or the account, this field will be empty.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_OrganizationPartialPath",
      "displayName": "Organization Partial Path Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "organization",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_OrganizationPartialPath_organization",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_OrganizationPartialPath_organization",
      "displayName": "organization Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "organizationContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_OrganizationResourceContext",
          "doc": " A specific organization\n"
        },
                {
          "name": "all",
          "type": "boolean",
          "doc": " A wildcard meaning any organization\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_query_AccountPartialPath",
      "displayName": "Account Partial Path Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "account",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_AccountPartialPath_account",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_AccountPartialPath_account",
      "displayName": "account Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_AccountResourceContext",
          "doc": " A specific account\n"
        },
                {
          "name": "all",
          "type": "boolean",
          "doc": " A wildcard meaning any account.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_query_SitePartialPath",
      "displayName": "Site Partial Path Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "site",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_SitePartialPath_site",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_SitePartialPath_site",
      "displayName": "site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "siteContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_SiteResourceContext",
          "doc": " A specific site\n"
        },
                {
          "name": "all",
          "type": "boolean",
          "doc": " A wildcard meaning any site\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_query_CustomResource",
      "displayName": "Custom Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "of",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_CustomResource_of",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_CustomResource_of",
      "displayName": "of Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": " A specific resource\n"
        },
                {
          "name": "all",
          "type": "boolean",
          "doc": " A wildcard meaning any resource\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_query_RolesOnResource",
      "displayName": "Roles On Resource Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceResponse",
          "doc": " The tree describing the resource.\n"
        },
                {
          "name": "roles",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_PolicyAssignment"]
          },
          "doc": " The roles that the subject has assigned on the resource.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_SubjectRoles",
      "displayName": "Subject Roles Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subject",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_management_Subject",
          "doc": " The subject\n"
        },
                {
          "name": "rolesOnResources",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_RolesOnResource"]
          },
          "doc": " A map between the resource and the role he has on it\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "resourceAttributesMapEntry",
      "displayName": "resource Attributes Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource you queried about if the subject are permitted to work on, but for `A` = \"Banana\" you won't get it.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Authorization._com_wixpress_authorization_abac_AttributeValue",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ResourceFilter",
      "displayName": "Resource Filter Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceFilter_filter",
          "doc": ""
        },
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_Resource",
          "doc": " Filter only for the specified resource\n"
        },
                {
          "name": "resourceAttributes",
          "type": "All APIs.Authorization.resourceAttributesMapEntry",
          "doc": "Set of key-value pairs. A map of attributes and their values. If the subject has an assignment with a condition, you can provide here attribute values that will be calculated against the condition.\n For example, if you have an assignment with a condition where `A` = 3, when querying with `A`= 3 you will get the resource you queried about if the subject are permitted to work on, but for `A` = \"Banana\" you won't get it.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ResourceFilter_filter",
      "displayName": "filter Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "organizationContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_OrganizationResourceContext",
          "doc": " Filter only for the specified organization\n"
        },
                {
          "name": "accountResourceContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_AccountResourceContext",
          "doc": " Filter only for the specific account\n"
        },
                {
          "name": "siteContext",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_SiteResourceContext",
          "doc": " Filter only for the specified site\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ResourceAssignment",
      "displayName": "Resource Assignment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resource",
          "type": "All APIs.Authorization._com_wixpress_authorization_abac_query_ResourceResponse",
          "doc": " The tree describing the resource.\n"
        },
                {
          "name": "assignments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_Assignment"]
          },
          "doc": " The exact assignment the subject has the on the resource.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_Assignment",
      "displayName": "Assignment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policyId",
          "type": "string",
          "doc": " The id of the policy the subject has assigned.\n"
        },
                {
          "name": "statements",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_query_Statement"]
          },
          "doc": " A list of all the statements he has assigned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_Statement",
      "displayName": "Statement Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "actions",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " A list of all the actions the subject has as part of the statement. The actions will be flattened, no scopes here.\n"
        },
                {
          "name": "scopes",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " A list of all scopes the subject has as part of the statement.\n"
        },
                {
          "name": "resourceConditions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Authorization._com_wixpress_authorization_abac_management_PolicyCondition"]
          },
          "doc": " The conditions that the subject has as part of the statement. For example, one can do all the mentioned actions only between 3 to 4 PM.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ActionsFilter",
      "displayName": "Actions Filter Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "actions",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_SubjectType",
      "displayName": "Subject Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> ACCOUNT <\/code><\/li><li><code> USER <\/code><\/li><li><code> USER_GROUP <\/code><\/li><li><code> MEMBER_GROUP <\/code><\/li><li><code> VISITOR_GROUP <\/code><\/li><li><code> EXTERNAL_APP <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "ACCOUNT",
        "USER",
        "USER_GROUP",
        "MEMBER_GROUP",
        "VISITOR_GROUP",
        "EXTERNAL_APP"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_SubjectContextType",
      "displayName": "Subject Context Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_CTX <\/code><\/li><li><code> ORG_CTX <\/code><\/li><li><code> ACCOUNT_CTX <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_CTX",
        "ORG_CTX",
        "ACCOUNT_CTX"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_SimpleConditionOperator",
      "displayName": "Simple Condition Operator Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SIMPLE_OP <\/code><\/li><li><code> EQUAL <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SIMPLE_OP",
        "EQUAL"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_JoinedConditionOperator",
      "displayName": "Joined Condition Operator Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_JOIN_OP <\/code><\/li><li><code> OR <\/code><\/li><li><code> AND <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_JOIN_OP",
        "OR",
        "AND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_PolicyType",
      "displayName": "Policy Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_STATUS <\/code><\/li><li><code> PREDEFINED <\/code><\/li><li><code> CUSTOM <\/code><\/li><li><code> INLINE_CUSTOM <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_STATUS",
        "PREDEFINED",
        "CUSTOM",
        "INLINE_CUSTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_management_Effect",
      "displayName": "Effect Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_EFFECT <\/code><\/li><li><code> ALLOW <\/code><\/li><li><code> DENY <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_EFFECT",
        "ALLOW",
        "DENY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_authorization_abac_query_ConsistencyLevel",
      "displayName": "Consistency Level Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> WEAK <\/code><\/li><li><code> STRONG <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "WEAK",
        "STRONG"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.authorization-server"}
}