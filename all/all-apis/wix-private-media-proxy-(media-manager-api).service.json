{
  "name": "Wix Private Media Proxy (Media Manager API)",
  "client_id": "https://github.com/wix-private/npm-proto-bazel/tree/master/com_wixpress_proto_wix-privatemedia-proxy-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Wix private media proxy contains functionality for working with media from backend code",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "File",
      "entity": "_com_wix_media_site_media_v1_File",
      "src": "https://github.com/wix-private/media-manager-node-services/tree/master/wix-privatemedia-proxy-server/com/wix/media/site_media/v1/file.proto"
    },
        {
      "name": "Folder",
      "entity": "_com_wix_media_site_media_v1_Folder",
      "src": "https://github.com/wix-private/media-manager-node-services/tree/master/wix-privatemedia-proxy-server/com/wix/media/site_media/v1/folder.proto"
    }
  ],
  "relatedGuides": [  {
    "path": "../guides/wix-private-media-proxy-(media-manager-api)/docs/intro.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Folder",
      "methodName": "CreateFolder",
      "serviceName": "FoldersService",
      "tag": "Folder",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["name"],
      "params":       [
                {
          "in": "BODY",
          "name": "name",
          "type": "string",
          "doc": " Folder name\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the created folder under this folder\n If not this folder will be under the media_root system folder\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateFolder",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_CreateFolderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Create a new folder\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/folders",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateFolderRequest",
        "rpcResponseName": "CreateFolderResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Download Files",
      "methodName": "DownloadFiles",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "fileIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " A list of file urls to download\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "DownloadFiles",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_DownloadFilesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns a download URL for downloading a compressed file containing all the requested files.\n The compressed file can contain up to 1000 files\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/download",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DownloadFilesRequest",
        "rpcResponseName": "DownloadFilesResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Download Folder",
      "methodName": "DownloadFolder",
      "serviceName": "FoldersService",
      "tag": "Folder",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["folderId"],
      "params": [      {
        "in": "PATH",
        "name": "folderId",
        "type": "string",
        "doc": " The ID of the folder to download\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DownloadFolder",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_DownloadFolderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns a download URL for downloading a compressed file containing all the requested folders\n The compressed file can contain up to 1000 files. Sub-folders are included\n The name of the top-level folder requested for download is not included.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/folders/{folderId}/url",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DownloadFolderRequest",
        "rpcResponseName": "DownloadFolderResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Generate Upload Url",
      "methodName": "GenerateUploadUrl",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "mediaType",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_MediaType",
          "doc": " The media type of the file that will be uploaded\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "mimeType",
          "type": "string",
          "doc": " The mime type of the file that will be uploaded\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "name",
          "type": "string",
          "doc": " Optional -The display name that appears in the Media Manager.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sizeInBytes",
          "type": "string",
          "doc": " Size of the uploaded file in bytes\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the file under this folder\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GenerateUploadUrl",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GenerateUploadUrlResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns an upload URL to allow an external client to upload a single file to the site's Media\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/generate-upload-url",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GenerateUploadUrlRequest",
        "rpcResponseName": "GenerateUploadUrlResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Download Url",
      "methodName": "GetDownloadUrl",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["fileId"],
      "params":       [
                {
          "in": "PATH",
          "name": "fileId",
          "type": "string",
          "doc": " Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "downloadFileName",
          "type": "string",
          "doc": " The downloaded file's name. Defaults to the file's name displayed in the Media Manager\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "expirationInMinutes",
          "type": "integer",
          "doc": " The time (in minutes) it takes for the download URL to expire. Defaults to 600. Limit is 525600 (1 year).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "expirationRedirectUrl",
          "type": "string",
          "doc": " The redirect URL for when the download URL with a token has expired. Defaults to a 403 Forbidden response page.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetDownloadUrl",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GetDownloadUrlResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a temporary download URL with a token from the Media Manager for a specified file\n Use this to grant access to a secure file, or to provide a redirect url after the expiration\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/{fileId}/get-download-url",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetDownloadUrlRequest",
        "rpcResponseName": "GetDownloadUrlResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get File Info",
      "methodName": "GetFileInfo",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["fileId"],
      "params": [      {
        "in": "PATH",
        "name": "fileId",
        "type": "string",
        "doc": " Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetFileInfo",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GetFileInfoResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets a file's information from the Media Manager\n \n",
        "description": [],
        "request": "GET",
        "url": "https://v1/files/{fileId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetFileInfoRequest",
        "rpcResponseName": "GetFileInfoResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Folder",
      "methodName": "GetFolder",
      "serviceName": "FoldersService",
      "tag": "Folder",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["folderId"],
      "params": [      {
        "in": "PATH",
        "name": "folderId",
        "type": "string",
        "doc": " The folder id to get the information of\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetFolder",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GetFolderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Gets the folder's information\n \n",
        "description": [],
        "request": "GET",
        "url": "https://v1/folders/{folderId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetFolderRequest",
        "rpcResponseName": "GetFolderResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Video Streaming Url",
      "methodName": "GetVideoStreamingUrl",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["fileId"],
      "params":       [
                {
          "in": "PATH",
          "name": "fileId",
          "type": "string",
          "doc": " Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "format",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GetVideoStreamingUrlRequest_StreamFormat",
          "doc": " The information for the files matching the query\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetVideoStreamingUrl",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GetVideoStreamingUrlResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Return a url info object containing the stream url\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/video/{fileId}/stream-url",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetVideoStreamingUrlRequest",
        "rpcResponseName": "GetVideoStreamingUrlResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Web Socket Token",
      "methodName": "GetWebSocketToken",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "GetWebSocketToken",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GetWebSocketTokenResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Return a token for a direct web socket notification channel\n This API is not platformized (Contact the Media team for use instructions)\n This API should be internal only\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/get-web-socket",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetWebSocketTokenRequest",
        "rpcResponseName": "GetWebSocketTokenResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Import File",
      "methodName": "ImportFile",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["url"],
      "params":       [
                {
          "in": "BODY",
          "name": "url",
          "type": "string",
          "doc": " A publicly accessible url of the file to be imported\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "mediaType",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_MediaType",
          "doc": " The media type of the file that will be imported\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "name",
          "type": "string",
          "doc": " Optional -The display name that appears in the Media Manager.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the file under this folder\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ImportFile",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_ImportFileResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns partial file info of the file that will be imported\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/import",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ImportFileRequest",
        "rpcResponseName": "ImportFileResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Files",
      "methodName": "ListFiles",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_QueryV2",
        "doc": " Supported filter: \"parent_folder_id\": \"{value}\", \"namespace\": \"{value}\", \"media_type\": {\"$in\":[\"{value}\"]} , \"is_private\": boolValue\n Supported sort: one of \"name\"/\"updated_date\"\n Support cursorPaging\n Unsupported: fields/fieldsets\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "ListFiles",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_ListFilesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Return a list of files matching the query\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/List",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListFilesRequest",
        "rpcResponseName": "ListFilesResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Folders",
      "methodName": "ListFolders",
      "serviceName": "FoldersService",
      "tag": "Folder",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_QueryV2",
        "doc": " Supported filter: \"parent_folder_id\": \"{value}\", \"namespace\"\n Supported sort: one of \"name\"/\"updated_date\"\n Support cursorPaging\n Unsupported: fields/fieldsets\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "ListFolders",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_ListFoldersResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Return a list of subfolders of the requested folder\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/folders/list",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListFoldersRequest",
        "rpcResponseName": "ListFoldersResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Move Files To Trash",
      "methodName": "MoveFilesToTrash",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "fileIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " List of file urls to move to Media Manager's trash\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "MoveFilesToTrash",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_MoveFilesToTrashResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Move files listed to Media Manager's trash\n Moving many files to trash at once is an asynchronous action. It may take some time for the results to be seen in the Media Manager.\n Use the Media Manager to restore or permanently delete the trashed files.\n Attempting to move already-trashed files to trash again doesn't result in an error.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/files/to-trash",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MoveFilesToTrashRequest",
        "rpcResponseName": "MoveFilesToTrashResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Move Folders To Trash",
      "methodName": "MoveFoldersToTrash",
      "serviceName": "FoldersService",
      "tag": "Folder",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "folderIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " List of folder ids to delete\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "MoveFoldersToTrash",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_MoveFoldersToTrashResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Move Folders to trash by ids\n \n",
        "description": [],
        "request": "POST",
        "url": "https://v1/folders/to-trash",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "MoveFoldersToTrashRequest",
        "rpcResponseName": "MoveFoldersToTrashResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update File",
      "methodName": "UpdateFile",
      "serviceName": "FilesService",
      "tag": "File",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["fileId"],
      "params":       [
                {
          "in": "PATH",
          "name": "fileId",
          "type": "string",
          "doc": " The id of the file to update\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "name",
          "type": "string",
          "doc": " Optional - New file name\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the file under this folder, effectively moving the file\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateFile",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_UpdateFileResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Update the file, allowing renaming and moving the file\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://v1/files/{fileId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateFileRequest",
        "rpcResponseName": "UpdateFileResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update Folder",
      "methodName": "UpdateFolder",
      "serviceName": "FoldersService",
      "tag": "Folder",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["folderId"],
      "params":       [
                {
          "in": "PATH",
          "name": "folderId",
          "type": "string",
          "doc": " The id of the folder to update\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "name",
          "type": "string",
          "doc": " Optional - Folder name\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the folder under this folder, effectively moving the folder\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateFolder",
          "statusCode": "200",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_UpdateFolderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Update the folder, allowing renaming and moving the folder\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://v1/folders/{folderId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateFolderRequest",
        "rpcResponseName": "UpdateFolderResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wix_media_site_media_v1_FolderCreatedDomainEvent",
      "name": "Folder Created Webhook",
      "docs":       {
        "summary": " Triggered when a folder is created.\n",
        "src": "https://github.com/wix-private/media-manager-node-services/tree/master/wix-privatemedia-proxy-server/src/main/proto/com/wix/media/site_media/v1/folders_service.proto"
      },
      "topic": "domain_events_wix.media.site_media.v1.folder",
      "tag": "Folder",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.media.site_media.v1.folder_created",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_media_site_media_v1_FolderUpdatedDomainEvent",
      "name": "Folder Updated Webhook",
      "docs":       {
        "summary": " Triggered when a folder is updated (name change or move).\n",
        "src": "https://github.com/wix-private/media-manager-node-services/tree/master/wix-privatemedia-proxy-server/src/main/proto/com/wix/media/site_media/v1/folders_service.proto"
      },
      "topic": "domain_events_wix.media.site_media.v1.folder",
      "tag": "Folder",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.media.site_media.v1.folder_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_media_site_media_v1_FolderDeletedDomainEvent",
      "name": "Folder Deleted Webhook",
      "docs":       {
        "summary": " Triggered when a folder is deleted permanently.\n",
        "src": "https://github.com/wix-private/media-manager-node-services/tree/master/wix-privatemedia-proxy-server/src/main/proto/com/wix/media/site_media/v1/folders_service.proto"
      },
      "topic": "domain_events_wix.media.site_media.v1.folder",
      "tag": "Folder",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.media.site_media.v1.folder_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wix_media_site_media_v1_FolderMovedToTrashDomainEvent",
      "name": "Folder Moved To Trash Webhook",
      "docs":       {
        "summary": " Triggered when a folder is moved to trash.\n",
        "src": "https://github.com/wix-private/media-manager-node-services/tree/master/wix-privatemedia-proxy-server/src/main/proto/com/wix/media/site_media/v1/folders_service.proto"
      },
      "topic": "domain_events_wix.media.site_media.v1.folder",
      "tag": "Folder",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.media.site_media.v1.folder_folder_moved_to_trash",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wix_media_site_media_v1_FolderCreatedDomainEvent",
      "displayName": "Folder Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.media.site_media.v1.folder`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_FolderEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Folder ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderEntityCreatedEvent",
      "displayName": "Folder Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Folder",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderUpdatedDomainEvent",
      "displayName": "Folder Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.media.site_media.v1.folder`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_FolderEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Folder ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderEntityUpdatedEvent",
      "displayName": "Folder Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Folder",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderDeletedDomainEvent",
      "displayName": "Folder Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.media.site_media.v1.folder`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_FolderEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Folder ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderEntityDeletedEvent",
      "displayName": "Folder Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderMovedToTrashDomainEvent",
      "displayName": "Folder Moved To Trash Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.media.site_media.v1.folder`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `folder_moved_to_trash`.\nEvent name."
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_FolderMovedToTrashActionEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "FolderMovedToTrash ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderMovedToTrashActionEvent",
      "displayName": "Folder Moved To Trash Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "body",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_FolderMovedToTrash",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_Audio",
      "displayName": "Audio Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Audio URL.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Audio filename. Optional.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_AudioV2",
      "displayName": "Audio V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia ID.\n"
        },
                {
          "name": "assets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Audio"]
          },
          "doc": " Audio formats available for this file.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Image",
      "displayName": "Image Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia image ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Image URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Original image height.\n",
          "readOnly": true
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Original image width.\n",
          "readOnly": true
        },
                {
          "name": "altText",
          "type": "string",
          "doc": " Image alt text. Optional.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Image filename. Optional.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_VideoV2",
      "displayName": "Video V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia ID.\n"
        },
                {
          "name": "resolutions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_VideoResolution"]
          },
          "doc": " Available resolutions for the video, starting with the optimal resolution.\n",
          "readOnly": true
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Video filename. Optional.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_VideoResolution",
      "displayName": "Video Resolution Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " Video URL.\n"
        },
                {
          "name": "height",
          "type": "integer",
          "doc": " Video height.\n"
        },
                {
          "name": "width",
          "type": "integer",
          "doc": " Video width.\n"
        },
                {
          "name": "format",
          "type": "string",
          "doc": " Video format for example, mp4, hls.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Document",
      "displayName": "Document Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " WixMedia ID.\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " Document URL.\n"
        },
                {
          "name": "filename",
          "type": "string",
          "doc": " Document filename. Optional.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FileMedia",
      "displayName": "File Media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "media",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_FileMedia_media",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FileMedia_media",
      "displayName": "media Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "image",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_Image",
          "doc": " Image media information\n"
        },
                {
          "name": "video",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_VideoV2",
          "doc": " video media information\n"
        },
                {
          "name": "audio",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_AudioV2",
          "doc": " Audio media information\n"
        },
                {
          "name": "document",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_Document",
          "doc": " Document media information\n"
        },
                {
          "name": "vector",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_Image",
          "doc": " Vector media information\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_media_site_media_v1_File",
      "displayName": "File Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " The display name that appears in the Media Manager. (original_file_name in private media api)\n"
        },
                {
          "name": "url",
          "type": "string",
          "doc": " URL of the file.\n"
        },
                {
          "name": "parentFolderId",
          "type": "string",
          "doc": " ID of the file's parent folder\n"
        },
                {
          "name": "hash",
          "type": "string",
          "doc": " File hash.\n"
        },
                {
          "name": "isPrivate",
          "type": "boolean",
          "doc": " Whether the link to the uploaded file is public or private. Private links require a token to be used\n"
        },
                {
          "name": "mediaType",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_MediaType",
          "doc": " Type of the file that was uploaded.\n"
        },
                {
          "name": "media",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_FileMedia",
          "doc": " The content of the file\n"
        },
                {
          "name": "operationStatus",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_OperationStatus",
          "doc": " Status of the file that was uploaded\n"
        },
                {
          "name": "sourceUrl",
          "type": "string",
          "doc": " URL where the file was uploaded from\n"
        },
                {
          "name": "iconUrl",
          "type": "string",
          "doc": " URL of the file's icon\n"
        },
                {
          "name": "labels",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of labels assigned to the file by the Media Manager.\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date the file was created\n"
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date the file was updated\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_UrlInfo",
      "displayName": "Url Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " The download URL for the file\n"
        },
                {
          "name": "encoding",
          "type": "string",
          "doc": " The encoding type of this url\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:  \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_media_site_media_v1_MoveFilesToTrashRequest",
      "displayName": "Move Files To Trash Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fileIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " List of file urls to move to Media Manager's trash\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_MoveFilesToTrashResponse",
      "displayName": "Move Files To Trash Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_DownloadFilesRequest",
      "displayName": "Download Files Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fileIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " A list of file urls to download\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_DownloadFilesResponse",
      "displayName": "Download Files Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "downloadUrl",
        "type": "string",
        "doc": " The download URL for the file(s)\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetDownloadUrlRequest",
      "displayName": "Get Download Url Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fileId",
          "type": "string",
          "doc": " Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager\n"
        },
                {
          "name": "downloadFileName",
          "type": "string",
          "doc": " The downloaded file's name. Defaults to the file's name displayed in the Media Manager\n"
        },
                {
          "name": "expirationInMinutes",
          "type": "integer",
          "doc": " The time (in minutes) it takes for the download URL to expire. Defaults to 600. Limit is 525600 (1 year).\n"
        },
                {
          "name": "expirationRedirectUrl",
          "type": "string",
          "doc": " The redirect URL for when the download URL with a token has expired. Defaults to a 403 Forbidden response page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetDownloadUrlResponse",
      "displayName": "Get Download Url Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "urlInfos",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_UrlInfo"]
        },
        "doc": " A list containing requested download formats of the file\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_UpdateFileRequest",
      "displayName": "Update File Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fileId",
          "type": "string",
          "doc": " The id of the file to update\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Optional - New file name\n"
        },
                {
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the file under this folder, effectively moving the file\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_UpdateFileResponse",
      "displayName": "Update File Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "file",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_File",
        "doc": " A file object containing the newly updated file info\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GenerateUploadUrlRequest",
      "displayName": "Generate Upload Url Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "mediaType",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_MediaType",
          "doc": " The media type of the file that will be uploaded\n"
        },
                {
          "name": "mimeType",
          "type": "string",
          "doc": " The mime type of the file that will be uploaded\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Optional -The display name that appears in the Media Manager.\n"
        },
                {
          "name": "sizeInBytes",
          "type": "string",
          "doc": " Size of the uploaded file in bytes\n"
        },
                {
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the file under this folder\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GenerateUploadUrlResponse",
      "displayName": "Generate Upload Url Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "uploadUrl",
          "type": "string",
          "doc": " The single use upload url\n"
        },
                {
          "name": "uploadToken",
          "type": "string",
          "doc": " The single use upload token\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_ImportFileRequest",
      "displayName": "Import File Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "url",
          "type": "string",
          "doc": " A publicly accessible url of the file to be imported\n"
        },
                {
          "name": "mediaType",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_MediaType",
          "doc": " The media type of the file that will be imported\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Optional -The display name that appears in the Media Manager.\n"
        },
                {
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the file under this folder\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_ImportFileResponse",
      "displayName": "Import File Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "file",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_File",
        "doc": " A file object containing initial details on the file that will be imported\n This object will not contain the \"media\" property of the File object\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetFileInfoRequest",
      "displayName": "Get File Info Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fileId",
        "type": "string",
        "doc": " Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetFileInfoResponse",
      "displayName": "Get File Info Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "file",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_File",
        "doc": " The information of the file\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_ListFilesRequest",
      "displayName": "List Files Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_QueryV2",
        "doc": " Supported filter: \"parent_folder_id\": \"{value}\", \"namespace\": \"{value}\", \"media_type\": {\"$in\":[\"{value}\"]} , \"is_private\": boolValue\n Supported sort: one of \"name\"/\"updated_date\"\n Support cursorPaging\n Unsupported: fields/fieldsets\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_ListFilesResponse",
      "displayName": "List Files Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "files",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_File"]
          },
          "doc": " The information for the files matching the query\n"
        },
                {
          "name": "nextCursor",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_PagingMetadataV2",
          "doc": " The next cursor if one exists\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetVideoStreamingUrlRequest",
      "displayName": "Get Video Streaming Url Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fileId",
          "type": "string",
          "doc": " Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager\n"
        },
                {
          "name": "format",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_GetVideoStreamingUrlRequest_StreamFormat",
          "doc": " The information for the files matching the query\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetVideoStreamingUrlResponse",
      "displayName": "Get Video Streaming Url Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "urlInfo",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_UrlInfo",
        "doc": " The information for the files matching the query\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetWebSocketTokenRequest",
      "displayName": "Get Web Socket Token Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetWebSocketTokenResponse",
      "displayName": "Get Web Socket Token Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "token",
        "type": "string",
        "doc": " The web socket token for the identity in the request\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_Folder",
      "displayName": "Folder Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the folder. Internal name (unique identifier) which is generated when a folder is created by the Media Manager\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Name of the folder.\n can we require just a-Z,0-9,-,_\n"
        },
                {
          "name": "parentFolderId",
          "type": "string",
          "doc": " ID of the folder's parent folder\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date the folder was created\n"
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date the folder was updated\n"
        },
                {
          "name": "namespace",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Namespace",
          "doc": " The namespace this folder is located in\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_CreateFolderRequest",
      "displayName": "Create Folder Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Folder name\n"
        },
                {
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the created folder under this folder\n If not this folder will be under the media_root system folder\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_CreateFolderResponse",
      "displayName": "Create Folder Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "folder",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Folder",
        "doc": " A folder object containing the newly created folder info\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetFolderRequest",
      "displayName": "Get Folder Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "folderId",
        "type": "string",
        "doc": " The folder id to get the information of\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetFolderResponse",
      "displayName": "Get Folder Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "folder",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Folder",
        "doc": " The information for the requested folder\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_ListFoldersRequest",
      "displayName": "List Folders Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_QueryV2",
        "doc": " Supported filter: \"parent_folder_id\": \"{value}\", \"namespace\"\n Supported sort: one of \"name\"/\"updated_date\"\n Support cursorPaging\n Unsupported: fields/fieldsets\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_ListFoldersResponse",
      "displayName": "List Folders Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "folders",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Folder"]
          },
          "doc": " The information for the subfolders of the requested folder\n"
        },
                {
          "name": "nextCursor",
          "type": "All APIs.Wix Private Media Proxy (Media Manager API)._wix_common_PagingMetadataV2",
          "doc": " The next cursor if one exists\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_UpdateFolderRequest",
      "displayName": "Update Folder Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "folderId",
          "type": "string",
          "doc": " The id of the folder to update\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Optional - Folder name\n"
        },
                {
          "name": "parentFolderId",
          "type": "string",
          "doc": " Optional - A folder id\n If provided, nest the folder under this folder, effectively moving the folder\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_UpdateFolderResponse",
      "displayName": "Update Folder Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "folder",
        "type": "All APIs.Wix Private Media Proxy (Media Manager API)._com_wix_media_site_media_v1_Folder",
        "doc": " A folder object containing the newly updated folder info\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_MoveFoldersToTrashRequest",
      "displayName": "Move Folders To Trash Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "folderIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " List of folder ids to delete\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_MoveFoldersToTrashResponse",
      "displayName": "Move Folders To Trash Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_DownloadFolderRequest",
      "displayName": "Download Folder Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "folderId",
        "type": "string",
        "doc": " The ID of the folder to download\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_DownloadFolderResponse",
      "displayName": "Download Folder Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "downloadUrl",
        "type": "string",
        "doc": " The download URL of the folder\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_FolderMovedToTrash",
      "displayName": "Folder Moved To Trash Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "folderId",
        "type": "string",
        "doc": " The id of the folder that was moved to trash\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_OperationStatus",
      "displayName": "Operation Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FAILED -  File upload or processing failed\n <\/code><\/li><li><code> READY -  File is ready for consumption\n <\/code><\/li><li><code> IN_QUEUE -  File is waiting for processing\n <\/code><\/li><li><code> IN_PROGRESS -  File is processing\n <\/code><\/li><li><code> IN_DOWNLOAD_QUEUE -  File is uploading to media\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FAILED",
        "READY",
        "IN_QUEUE",
        "IN_PROGRESS",
        "IN_DOWNLOAD_QUEUE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_MediaType",
      "displayName": "Media Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> IMAGE <\/code><\/li><li><code> VIDEO <\/code><\/li><li><code> AUDIO <\/code><\/li><li><code> DOCUMENT <\/code><\/li><li><code> VECTOR <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "IMAGE",
        "VIDEO",
        "AUDIO",
        "DOCUMENT",
        "VECTOR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_GetVideoStreamingUrlRequest_StreamFormat",
      "displayName": "Stream Format Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> HLS <\/code><\/li><li><code> DASH <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "HLS",
        "DASH"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_media_site_media_v1_Namespace",
      "displayName": "Namespace Object",
      "locations": [],
      "docs":       {
        "summary": " TODO - MEET how to document this, what possible use is there for each one of them\n \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> WIX_VIDEO -     WIX_CODE_ANONYM_UPLOAD = 1;\n <\/code><\/li><li><code> WIX_MUSIC <\/code><\/li><li><code> ART_STORE <\/code><\/li><li><code> WIX_ECOM <\/code><\/li><li><code> DIGITAL_PRODUCT <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "WIX_VIDEO",
        "WIX_MUSIC",
        "ART_STORE",
        "WIX_ECOM",
        "DIGITAL_PRODUCT"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.prospero.wix-privatemedia-proxy-server"}
}