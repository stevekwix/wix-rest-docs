{
  "name": "Premium Store",
  "client_id": "https://github.com/wix-private/premium/tree/master/premium-server/premium-store-modules/premium-store-api-proto/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Premium store",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Dynamic Offering API",
    "entity": null
  }],
  "relatedGuides": [],
  "operations":   [
        {
      "name": "Create Order Page",
      "methodName": "CreateOrderPage",
      "serviceName": "DynamicOfferingApi",
      "tag": "Dynamic Offering API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "cartItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_LineItem"]
          },
          "doc": "  items to be purchased\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "eventAggregator",
          "type": "string",
          "doc": "  ID required to aggregate BI events for purchase flow\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateOrderPage",
          "statusCode": "200",
          "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CreateOrderPageResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "  create order page session, that can be used to render a checkout page\n \n",
        "description": [],
        "request": "POST",
        "url": "https://wix.com/_api/premium-store/api/v1/createOrderPage",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateOrderPageRequest",
        "rpcResponseName": "CreateOrderPageResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Product Info",
      "methodName": "GetProductInfo",
      "serviceName": "DynamicOfferingApi",
      "tag": "Dynamic Offering API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["productId"],
      "params":       [
                {
          "in": "PATH",
          "name": "productId",
          "type": "string",
          "doc": " product id\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "offeringId",
          "type": "string",
          "doc": " offering id - currently not in use\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "cycle.cycleSelector",
          "type": "ref",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetProductInfo",
          "statusCode": "200",
          "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_GetProductInfoResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "  get purchase related data for a specific product - includes available products/cycles/features with relevant pricing details\n \n",
        "description": [],
        "request": "GET",
        "url": "https://wix.com/_api/premium-store/api/v1/productInfo/{productId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetProductInfoRequest",
        "rpcResponseName": "GetProductInfoResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get User Offering",
      "methodName": "GetUserOffering",
      "serviceName": "DynamicOfferingApi",
      "tag": "Dynamic Offering API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["productTypeId"],
      "params":       [
                {
          "in": "PATH",
          "name": "productTypeId",
          "type": "string",
          "doc": "  ID of product type you wish to offer to the user. see Premium Product Catalog for reference https://wixplorer.wixpress.com/premium-product-catalog/guides/Welcome\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "customOfferingFilters",
          "type": "All APIs.Premium Store.customOfferingFiltersMapEntry",
          "doc": "Set of key-value pairs.  additional context necessary to select the correct products: e.g., TLD for domains. OPTIONAL.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "country",
          "type": "string",
          "doc": " Optionally pass a specific country\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "msid",
          "type": "string",
          "doc": " [(wix.api.format) = GUID]; //  meta-site ID of the site you wish to make this purchase\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "taxDetails",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_GetUserOfferingRequest_TaxDetails",
          "doc": "",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventAggregator",
          "type": "string",
          "doc": "  ID required to aggregate BI events for purchase flow, if not supplied an ID will be generated\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "currency",
          "type": "string",
          "doc": " Optionally pass a specific currency\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "biReference",
          "type": "string",
          "doc": "  string identifying the flow from which the user arrived at this endpoint (for BI)\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetUserOffering",
          "statusCode": "200",
          "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_GetUserOfferingResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "  get data required for package picker - includes available products/cycles/features with relevant pricing details\n \n",
        "description": [],
        "request": "GET",
        "url": "https://wix.com/_api/premium-store/api/v1/offering/{productTypeId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetUserOfferingRequest",
        "rpcResponseName": "GetUserOfferingResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Validate No Previous Purchase",
      "methodName": "ValidateNoPreviousPurchase",
      "serviceName": "DynamicOfferingApi",
      "tag": "Dynamic Offering API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "msid",
          "type": "string",
          "doc": "  meta-site ID of the site purchase\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "productTypeId",
          "type": "string",
          "doc": " product type purchase\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "eventAggregator",
          "type": "string",
          "doc": " ID required to aggregate BI events for purchase flow, if not supplied an ID will be generated\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ValidateNoPreviousPurchase",
          "statusCode": "200",
          "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_ValidateNoPreviousPurchaseResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " verify before purchase for delivered subscription for site or pending order to avoid double purchase\n \n",
        "description": [],
        "request": "POST",
        "url": "https://wix.com/_api/premium-store/api/v1/ValidateNoPreviousPurchase",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ValidateNoPreviousPurchaseRequest",
        "rpcResponseName": "ValidateNoPreviousPurchaseResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events": [],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_billing_api_v1_Interval",
      "displayName": "Interval Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "unit",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Interval_IntervalUnit",
          "doc": " interval unit of measure\n"
        },
                {
          "name": "count",
          "type": "integer",
          "doc": " number of interval\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_OneTime",
      "displayName": "One Time Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_Cycle",
      "displayName": "Cycle Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "cycleSelector",
        "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle_CycleSelector",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_Cycle_CycleSelector",
      "displayName": "Cycle Selector Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "interval",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Interval",
          "doc": " repetitive interval\n"
        },
                {
          "name": "oneTime",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_OneTime",
          "doc": " one time\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_premium_store_common_TaxSettings",
      "displayName": "Tax Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "showPricesWithTax",
          "type": "boolean",
          "doc": " if relevant country requires showing prices that include tax\n"
        },
                {
          "name": "percent",
          "type": "string",
          "doc": " tax percent will be empty if the country does not require showing tax\n"
        },
                {
          "name": "taxType",
          "type": "All APIs.Premium Store._com_wixpress_billing_checkout_api_v1_TaxTypeConfiguration_TaxType",
          "doc": " no longer in use\n",
          "deprecated": true
        },
                {
          "name": "displayTaxType",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_common_TaxSettings_TaxType",
          "doc": " relevant tax type for the country\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_PricingInfo",
      "displayName": "Pricing Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cyclePricing",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CyclePricingOld"]
          },
          "doc": "  DEPRECATED. use catalog_pricing and sale_pricing\n",
          "deprecated": true
        },
                {
          "name": "catalogPricing",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CyclePricing"]
          },
          "doc": "  official price (no sale/discount/etc.)\n"
        },
                {
          "name": "salePricing",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_SalePricing",
          "doc": "  sale prices\n"
        },
                {
          "name": "couponsPricing",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CouponPricing"]
          },
          "doc": "  prices after applying a coupon discount\n"
        },
                {
          "name": "showPriceWithTax",
          "type": "boolean",
          "doc": "  DEPRECATED. use tax_settings\n",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_SalePricing",
      "displayName": "Sale Pricing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "discountPrices",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CyclePricing"]
        },
        "doc": " discounted prices\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CouponPricing",
      "displayName": "Coupon Pricing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "couponInfo",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CouponInfo",
          "doc": "  information about the coupon\n"
        },
                {
          "name": "discountPrices",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CyclePricing"]
          },
          "doc": " discounted prices\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CouponInfo",
      "displayName": "Coupon Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": "  type??\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CyclePricingOld",
      "displayName": "Cycle Pricing Old Object",
      "locations": [],
      "docs":       {
        "summary": "  @deprecated\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cycle",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle",
          "doc": " cycle\n"
        },
                {
          "name": "catalogPrice",
          "type": "string",
          "doc": " price as \"Long\" use currency_settings.minor_units to determine number of decimal places\n"
        },
                {
          "name": "catalogPriceWithTax",
          "type": "string",
          "doc": " price with tax\n"
        },
                {
          "name": "catalogPriceAfterDiscount",
          "type": "string",
          "doc": " price after discount\n"
        },
                {
          "name": "catalogPriceAfterDiscountWithTax",
          "type": "string",
          "doc": " price after discount with tax\n"
        },
                {
          "name": "monthsPerCycle",
          "type": "integer",
          "doc": " months per cycle\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CyclePricing",
      "displayName": "Cycle Pricing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cycle",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle",
          "doc": " cycle\n"
        },
                {
          "name": "price",
          "type": "string",
          "doc": " price as \"Long\" use currency_settings.minor_units to determine number of decimal places\n"
        },
                {
          "name": "priceWithTax",
          "type": "string",
          "doc": " price with tax\n"
        },
                {
          "name": "monthsPerCycle",
          "type": "integer",
          "doc": " number of months in the cycle\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CyclePricing_discount",
          "doc": " discount information - will be Empty if there is no discount\n"
        },
                {
          "name": "monthlyPrice",
          "type": "string",
          "doc": " price per month, could be empty if the cycle is ONE_TIME or less than a month\n"
        },
                {
          "name": "monthlyPriceWithTax",
          "type": "string",
          "doc": " price per month with tax, could be empty if the cycle is ONE_TIME or less than a month\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CyclePricing_discount",
      "displayName": "discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "percentage",
          "type": "integer",
          "doc": " percentage discount\n"
        },
                {
          "name": "fixedAmount",
          "type": "string",
          "doc": " fixed amount discount as \"Long\" use currency_settings.minor_units to determine number of decimal places\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_premium_store_common_CurrencySettings",
      "displayName": "Currency Settings Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": "  ISO 4217 code of selected currency (usually 3 letters)\n"
        },
                {
          "name": "symbol",
          "type": "string",
          "doc": "  HTML encoded currency symbol for display\n"
        },
                {
          "name": "minorUnits",
          "type": "integer",
          "doc": "  AKA fraction size. number of digits to shift the decimal separator by\n"
        },
                {
          "name": "decimalSeparator",
          "type": "string",
          "doc": "  string representation of the decimal separator (typically \".\")\n"
        },
                {
          "name": "groupSeparator",
          "type": "string",
          "doc": "  string representation of the group separator (typically \",\")\n"
        },
                {
          "name": "positivePrefix",
          "type": "string",
          "doc": "  string representation of the prefix for positive numbers\n"
        },
                {
          "name": "positiveSuffix",
          "type": "string",
          "doc": "  string representation of the suffix for positive numbers\n"
        },
                {
          "name": "negativePrefix",
          "type": "string",
          "doc": "  string representation of the prefix for negative numbers\n"
        },
                {
          "name": "negativeSuffix",
          "type": "string",
          "doc": "  string representation of the suffix for negative numbers\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_productcatalog_api_v1_feature_BooleanFeature",
      "displayName": "Boolean Feature Object",
      "locations": [],
      "docs":       {
        "summary": "  A feature that can be either \"enabled\" or \"disabled\". The default/freemium setting is always OFF, and the premium setting is always ON (meaning, unlimited usage without tracking).\n  A boolean feature is similar to a quantitive feature with a default limit of 0 and UNLIMITED premium limit (although a bit simplified).\n",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_productcatalog_api_v1_feature_QuotaFeature",
      "displayName": "Quota Feature Object",
      "locations": [],
      "docs":       {
        "summary": "  A feature with a periodic usage limitation. The default limit is defined in the Feature Spec, the Premium limits are defined in the respective ProductFeature.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "string",
          "doc": "  Default (or Freemium) quota limitation. if left undefined the free feature has unlimited amount.\n"
        },
                {
          "name": "period",
          "type": "All APIs.Premium Store._com_wixpress_premium_productcatalog_api_v1_feature_FeaturePeriodEnum_FeaturePeriod",
          "doc": "  Periodic time-frame to reset the usage counter. You may use NO_PERIOD if counter shouldn't be reset.\n"
        },
                {
          "name": "units",
          "type": "string",
          "doc": "  Usage measurement units (seconds? MBs? unitless?). Usage reported will be counted in multiples of this basic unit.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_DisclaimerInfo",
      "displayName": "Disclaimer Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "disclaimerText",
        "type": "string",
        "doc": "  disclaimer text\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_ValidateNoPreviousPurchaseRequest",
      "displayName": "Validate No Previous Purchase Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "msid",
          "type": "string",
          "doc": "  meta-site ID of the site purchase\n"
        },
                {
          "name": "productTypeId",
          "type": "string",
          "doc": " product type purchase\n"
        },
                {
          "name": "eventAggregator",
          "type": "string",
          "doc": " ID required to aggregate BI events for purchase flow, if not supplied an ID will be generated\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_ValidateNoPreviousPurchaseResponse",
      "displayName": "Validate No Previous Purchase Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "status",
        "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_ValidateNoPreviousPurchaseTypeEnum_ValidateNoPreviousPurchaseType",
        "doc": " verify before purchase status\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "customOfferingFiltersMapEntry",
      "displayName": "custom Offering Filters Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  additional context necessary to select the correct products: e.g., TLD for domains. OPTIONAL.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_GetUserOfferingRequest",
      "displayName": "Get User Offering Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "productTypeId",
          "type": "string",
          "doc": "  ID of product type you wish to offer to the user. see Premium Product Catalog for reference https://wixplorer.wixpress.com/premium-product-catalog/guides/Welcome\n"
        },
                {
          "name": "msid",
          "type": "string",
          "doc": " [(wix.api.format) = GUID]; //  meta-site ID of the site you wish to make this purchase\n"
        },
                {
          "name": "biReference",
          "type": "string",
          "doc": "  string identifying the flow from which the user arrived at this endpoint (for BI)\n"
        },
                {
          "name": "customOfferingFilters",
          "type": "All APIs.Premium Store.customOfferingFiltersMapEntry",
          "doc": "Set of key-value pairs.  additional context necessary to select the correct products: e.g., TLD for domains. OPTIONAL.\n"
        },
                {
          "name": "eventAggregator",
          "type": "string",
          "doc": "  ID required to aggregate BI events for purchase flow, if not supplied an ID will be generated\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Optionally pass a specific currency\n"
        },
                {
          "name": "country",
          "type": "string",
          "doc": " Optionally pass a specific country\n"
        },
                {
          "name": "taxDetails",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_GetUserOfferingRequest_TaxDetails",
          "doc": " If provided the prices would be calculated according to the details here and not via country cookie\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_GetUserOfferingRequest_TaxDetails",
      "displayName": "Tax Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "billingAddress",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_BillingAddress",
          "doc": " The price would be calculated according to this specific billing address\n"
        },
                {
          "name": "useSavedMerchantAddress",
          "type": "boolean",
          "doc": " The address would be retrieved from merchant-service, by the meta site in context, if no site is provided in context the request will fail.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_BillingAddress",
      "displayName": "Billing Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " Country code.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Subdivision. Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Zip/postal code.\n"
        },
                {
          "name": "streetAddress",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_StreetAddress",
          "doc": " Street name and number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "displayPropertiesMapEntry",
      "displayName": "display Properties Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  key/value of offering level display meta-data (for example vertical name, purchase mode)\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_GetUserOfferingResponse",
      "displayName": "Get User Offering Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "products",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_ProductInfo"]
          },
          "doc": "  available products\n"
        },
                {
          "name": "currencySettings",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_common_CurrencySettings",
          "doc": "  currency settings\n"
        },
                {
          "name": "displayProperties",
          "type": "All APIs.Premium Store.displayPropertiesMapEntry",
          "doc": "Set of key-value pairs.  key/value of offering level display meta-data (for example vertical name, purchase mode)\n"
        },
                {
          "name": "currentSubscriptionInfo",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CurrentSubscriptionInfo",
          "doc": "  existing product type currently connected to site (empty in account level)\n"
        },
                {
          "name": "purchaseScenario",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_PurchaseScenarioEnum_PurchaseScenario",
          "doc": "  status indicating whether purchase is possible or not\n"
        },
                {
          "name": "eventAggregator",
          "type": "string",
          "doc": "  ID required to aggregate BI events for purchase flow\n"
        },
                {
          "name": "offerValidUntil",
          "type": "string",
          "doc": "  The timestamp of when the offer expires. For example sale end date. Will be empty if offer has no expiry\n"
        },
                {
          "name": "taxSettings",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_common_TaxSettings",
          "doc": "  tax settings - whether to show prices with tax, and tax type\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_GetProductInfoRequest",
      "displayName": "Get Product Info Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "productId",
          "type": "string",
          "doc": " product id\n"
        },
                {
          "name": "cycle",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle",
          "doc": " cycle\n"
        },
                {
          "name": "offeringId",
          "type": "string",
          "doc": " offering id - currently not in use\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_GetProductInfoResponse",
      "displayName": "Get Product Info Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "productInfo",
        "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_ProductInfo",
        "doc": " Product Info\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "displayPropertiesMapEntry",
      "displayName": "display Properties Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  key/value of product level display meta-data, includes translated name and description\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_ProductInfo",
      "displayName": "Product Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": "  translated name of the product (or name from catalog if not available)\n"
        },
                {
          "name": "productId",
          "type": "string",
          "doc": " ID of target product\n"
        },
                {
          "name": "features",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_Feature"]
          },
          "doc": "  information about the features included in this product\n"
        },
                {
          "name": "pricingInfo",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_PricingInfo",
          "doc": "  pricing info for this product (note: not all pricings can be purchased, see purchasable_cycles)\n"
        },
                {
          "name": "displayProperties",
          "type": "All APIs.Premium Store.displayPropertiesMapEntry",
          "doc": "Set of key-value pairs.  key/value of product level display meta-data, includes translated name and description\n"
        },
                {
          "name": "purchasableCycles",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle"]
          },
          "doc": "  only these cycles can be purchased in the current context (upgrade path)\n"
        },
                {
          "name": "disclaimerInfo",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_DisclaimerInfo",
          "doc": "  disclaimer info\n"
        },
                {
          "name": "cycleDisplayProperties",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_CycleDisplayProperties"]
          },
          "doc": "  display properties for cycles\n"
        },
                {
          "name": "sbsProductIdPoc",
          "type": "string",
          "doc": "  will be removed. for internal use (when used with \"generic purchase page\"). otherwise, please use product_id\n"
        },
                {
          "name": "downgradePurchasableCycles",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle"]
          },
          "doc": "  only these cycles can be purchased in the current context (downgrade path)\n"
        },
                {
          "name": "productTypeId",
          "type": "string",
          "doc": " Top level grouping for products, (e.g type id for \"premium plans\", or \"domains\" or \"ascend\")\n"
        },
                {
          "name": "productFamilyId",
          "type": "string",
          "doc": " Second level grouping for products (e.g family id of \"Unlimited\" or \"Basic\" )\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "displayPropertiesMapEntry",
      "displayName": "display Properties Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  key/value of cycle level display meta-data\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CycleDisplayProperties",
      "displayName": "Cycle Display Properties Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cycle",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle",
          "doc": "  cycle\n"
        },
                {
          "name": "displayProperties",
          "type": "All APIs.Premium Store.displayPropertiesMapEntry",
          "doc": "Set of key-value pairs.  key/value of cycle level display meta-data\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "displayPropertiesMapEntry",
      "displayName": "display Properties Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  key/value of feature level display meta-data\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_Feature",
      "displayName": "Feature Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": "  feature name\n"
        },
                {
          "name": "excludedCycles",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle"]
          },
          "doc": "  cycles that the feature does not apply to\n"
        },
                {
          "name": "displayProperties",
          "type": "All APIs.Premium Store.displayPropertiesMapEntry",
          "doc": "Set of key-value pairs.  key/value of feature level display meta-data\n"
        },
                {
          "name": "quantityInfo",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_Feature_QuantityInfo",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_Feature_QuantityInfo",
      "displayName": "Quantity Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "booleanFeature",
          "type": "All APIs.Premium Store._com_wixpress_premium_productcatalog_api_v1_feature_BooleanFeature",
          "doc": " boolean feature, ie is enabled or not enabled\n"
        },
                {
          "name": "quotaFeature",
          "type": "All APIs.Premium Store._com_wixpress_premium_productcatalog_api_v1_feature_QuotaFeature",
          "doc": " quota feature, ie a specified quantity per time period\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CreateOrderPageRequest",
      "displayName": "Create Order Page Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cartItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_LineItem"]
          },
          "doc": "  items to be purchased\n"
        },
                {
          "name": "eventAggregator",
          "type": "string",
          "doc": "  ID required to aggregate BI events for purchase flow\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "additionalDataMapEntry",
      "displayName": "additional Data Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.  Key value of additional information related to the purchase\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_LineItem",
      "displayName": "Line Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "productId",
          "type": "string",
          "doc": " product id\n"
        },
                {
          "name": "cycle",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle",
          "doc": " cycle\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": "  ignored for now - relevant for example in purchase mailbox seats\n"
        },
                {
          "name": "additionalData",
          "type": "All APIs.Premium Store.additionalDataMapEntry",
          "doc": "Set of key-value pairs.  Key value of additional information related to the purchase\n"
        },
                {
          "name": "purchaseType",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_LineItem_PurchaseType",
          "doc": "  new purchase or upgrade an existing subscription or switch contract\n"
        },
                {
          "name": "couponUsage",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_LineItem_CouponUsage",
          "doc": "  apply discount coupon to the purchase\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_LineItem_PurchaseType",
      "displayName": "Purchase Type Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "newSubscription",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_NewSubscription",
          "doc": "  first time purchase\n"
        },
                {
          "name": "upgradeSubscription",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_UpgradeSubscription",
          "doc": "  upgrade to a higher tier product or higher cycle (fails if trying to move to lower tier)\n  deprecated, use switch_contract instead\n",
          "deprecated": true
        },
                {
          "name": "switchContract",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_SwitchContract",
          "doc": "  switch to a different tier or cycle (upgrade or downgrade)\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_LineItem_CouponUsage",
      "displayName": "Coupon Usage Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "saleCoupon",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_SaleCoupon",
          "doc": " Sale coupon will be applied if there is a configured sale for the relevant product\n"
        },
                {
          "name": "userCoupon",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_UserCoupon",
          "doc": " A coupon will be applied if the user has been assigned a coupon with the supplied code\n"
        },
                {
          "name": "productCoupon",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_ProductCoupon",
          "doc": " A coupon for the relevant product will be applied. This requires server signing and PREMIUM.APPLY_COUPONS permissions\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_SaleCoupon",
      "displayName": "Sale Coupon Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_UserCoupon",
      "displayName": "User Coupon Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "couponId",
        "type": "string",
        "doc": " coupon code of the user's coupon\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_ProductCoupon",
      "displayName": "Product Coupon Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "couponCode",
        "type": "string",
        "doc": " coupon code of the product coupon\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_NewSubscription",
      "displayName": "New Subscription Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "msid",
        "type": "string",
        "doc": " meta site id to assign the purchased products to\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_UpgradeSubscription",
      "displayName": "Upgrade Subscription Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "existingSubscriptionId",
          "type": "string",
          "doc": " id of existing subscription\n"
        },
                {
          "name": "subscriptionUpgradeType",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_SubscriptionUpgradeTypeEnum_SubscriptionUpgradeType",
          "doc": "  upgrade type\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "deprecated": true
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_SwitchContract",
      "displayName": "Switch Contract Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "existingSubscriptionId",
          "type": "string",
          "doc": " id of existing subscription\n"
        },
                {
          "name": "contractSwitchType",
          "type": "All APIs.Premium Store._com_wixpress_premium_store_checkout_v1_ContractSwitchTypeEnum_ContractSwitchType",
          "doc": " contract switch type\n"
        },
                {
          "name": "msid",
          "type": "string",
          "doc": " meta site id which is required to support contributors in account level flow\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CreateOrderPageResponse",
      "displayName": "Create Order Page Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "orderSessionId",
          "type": "string",
          "doc": "  order session id, used to render purchase page\n"
        },
                {
          "name": "riskIframeUrl",
          "type": "string",
          "doc": "  URL of iFrame for risk, used by purchase page\n"
        },
                {
          "name": "eventAggregator",
          "type": "string",
          "doc": "  ID required to aggregate BI events for purchase flow\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_CurrentSubscriptionInfo",
      "displayName": "Current Subscription Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subscriptionId",
          "type": "string",
          "doc": "  subscription id of the current subscription\n"
        },
                {
          "name": "cycle",
          "type": "All APIs.Premium Store._com_wixpress_billing_api_v1_Cycle",
          "doc": "  cycle of the current subscription\n"
        },
                {
          "name": "productId",
          "type": "string",
          "doc": "  product of the current subscription\n"
        },
                {
          "name": "productName",
          "type": "string",
          "doc": "  product name of the current product (not translated for now)\n"
        },
                {
          "name": "periodEndDate",
          "type": "string",
          "doc": "  end date of the current cycle\n"
        },
                {
          "name": "monthlyPrice",
          "type": "string",
          "doc": "  monthly price as \"Long\" use currency_settings.minor_units to determine number of decimal places\n"
        },
                {
          "name": "isBundled",
          "type": "boolean",
          "doc": "  indicates whether the current subscription is a product that was \"bundled\" together with a legacy plan purchase\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_api_v1_Interval_IntervalUnit",
      "displayName": "Interval Unit Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN -  unknown interval unit\n <\/code><\/li><li><code> DAY -  day\n <\/code><\/li><li><code> WEEK -  week\n <\/code><\/li><li><code> MONTH -  month\n <\/code><\/li><li><code> YEAR -  year\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "DAY",
        "WEEK",
        "MONTH",
        "YEAR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_billing_checkout_api_v1_TaxTypeConfiguration_TaxType",
      "displayName": "Tax Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NOT_APPLICABLE <\/code><\/li><li><code> REGULAR <\/code><\/li><li><code> EU_VAT <\/code><\/li><li><code> JAPAN_JCT <\/code><\/li><li><code> AU_GST <\/code><\/li><li><code> BR_CNPJ <\/code><\/li><li><code> RU_TIN <\/code><\/li><li><code> IN_RNR <\/code><\/li><li><code> IL_VAT <\/code><\/li><li><code> US_TAX <\/code><\/li><li><code> SG_GST <\/code><\/li><li><code> CA_GST <\/code><\/li><li><code> CA_HST <\/code><\/li><li><code> CA_PST <\/code><\/li><li><code> CA_QST <\/code><\/li><li><code> NZ_GST <\/code><\/li><li><code> MD_VAT <\/code><\/li><li><code> CL_VAT <\/code><\/li><li><code> MY_VAT <\/code><\/li><li><code> KR_VAT <\/code><\/li><li><code> TW_VAT <\/code><\/li><li><code> AE_VAT <\/code><\/li><li><code> NG_VAT <\/code><\/li><li><code> IS_VAT <\/code><\/li><li><code> GE_VAT <\/code><\/li><li><code> TH_VAT <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NOT_APPLICABLE",
        "REGULAR",
        "EU_VAT",
        "JAPAN_JCT",
        "AU_GST",
        "BR_CNPJ",
        "RU_TIN",
        "IN_RNR",
        "IL_VAT",
        "US_TAX",
        "SG_GST",
        "CA_GST",
        "CA_HST",
        "CA_PST",
        "CA_QST",
        "NZ_GST",
        "MD_VAT",
        "CL_VAT",
        "MY_VAT",
        "KR_VAT",
        "TW_VAT",
        "AE_VAT",
        "NG_VAT",
        "IS_VAT",
        "GE_VAT",
        "TH_VAT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_common_TaxSettings_TaxType",
      "displayName": "Tax Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NOT_APPLICABLE <\/code><\/li><li><code> VAT <\/code><\/li><li><code> GST <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NOT_APPLICABLE",
        "VAT",
        "GST"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_productcatalog_api_v1_feature_FeaturePeriodEnum_FeaturePeriod",
      "displayName": "Feature Period Object",
      "locations": [],
      "docs":       {
        "summary": "  Determines the reset cycle of the feature usage.\n \n Possible values are: <li><code> NO_PERIOD <\/code><\/li><li><code> MILLISECOND <\/code><\/li><li><code> SECOND <\/code><\/li><li><code> MINUTE <\/code><\/li><li><code> HOUR <\/code><\/li><li><code> WEEK <\/code><\/li><li><code> MONTH <\/code><\/li><li><code> YEAR <\/code><\/li><li><code> DAY <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NO_PERIOD",
        "MILLISECOND",
        "SECOND",
        "MINUTE",
        "HOUR",
        "WEEK",
        "MONTH",
        "YEAR",
        "DAY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_ValidateNoPreviousPurchaseTypeEnum_ValidateNoPreviousPurchaseType",
      "displayName": "Validate No Previous Purchase Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> OK -   no pending order or delivery exist , valid purchase\n <\/code><\/li><li><code> PENDING -  there is open order without delivery , not valid purchase\n <\/code><\/li><li><code> DELIVERED -  purchase already delivered\n <\/code><\/li><li><code> SERVER_ERROR -  failed to retrieve data from SBS\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "OK",
        "PENDING",
        "DELIVERED",
        "SERVER_ERROR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_SubscriptionUpgradeTypeEnum_SubscriptionUpgradeType",
      "displayName": "Subscription Upgrade Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> CREDIT_UNUSED_PERIOD -   unused subscription period is converted into credit deducted from the purchase price\n <\/code><\/li><li><code> EXTEND -   add additional $CYCLE starting at subscription's end date\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "CREDIT_UNUSED_PERIOD",
        "EXTEND"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_ContractSwitchTypeEnum_ContractSwitchType",
      "displayName": "Contract Switch Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> CREDIT_UNUSED_PERIOD -   unused subscription period is converted into credit deducted from the purchase price\n <\/code><\/li><li><code> EXTEND -   add additional $CYCLE starting at subscription's end date - NOT READY YET\n <\/code><\/li><li><code> FULL_AMOUNT_PERIOD -   switch to new subscription immediately with no refund for unused period.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "CREDIT_UNUSED_PERIOD",
        "EXTEND",
        "FULL_AMOUNT_PERIOD"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_premium_store_checkout_v1_PurchaseScenarioEnum_PurchaseScenario",
      "displayName": "Purchase Scenario Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNAUTHORIZED -   user not authorized to purchase in the given account\n <\/code><\/li><li><code> ACCOUNT_LEVEL -   account level purchase\n <\/code><\/li><li><code> PURCHASE -   site level purchase\n <\/code><\/li><li><code> VIEW -   user is permitted to view offering, but not purchase\n <\/code><\/li><li><code> EMPTY_OFFERING -   no products available for purchase - this can happen when there are no products in the given offering, or when there is a current subscription, with no upgrade path\n <\/code><\/li><li><code> ANONYMOUS -   no logged in user\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNAUTHORIZED",
        "ACCOUNT_LEVEL",
        "PURCHASE",
        "VIEW",
        "EMPTY_OFFERING",
        "ANONYMOUS"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.premium.premium-store"}
}