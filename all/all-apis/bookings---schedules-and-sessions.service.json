{
  "name": "Bookings - Schedules and Sessions",
  "client_id": "https://github.com/wix-private/scheduler/tree/master/bookings-backend/schedules/schedule-api/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Manage schedules & session",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "Schedule",
      "entity": "_com_wix_bookings_schedules_api_v1_Schedule",
      "src": "https://github.com/wix-private/scheduler/tree/master/bookings-backend/schedules/schedules-api/com/wix/bookings/schedules/api/v1/entities/schedule.proto"
    },
        {
      "name": "Session",
      "entity": null
    },
        {
      "name": "Participants",
      "entity": null
    }
  ],
  "relatedGuides":   [
        {
      "path": "../guides/bookings---schedules-and-sessions/com/wix/bookings/schedules/api/v1/docs/field_masks_and_updates.md",
      "name": "Patch Endpoints and Field Masks in Update Requests"
    },
        {
      "path": "../guides/bookings---schedules-and-sessions/com/wix/bookings/schedules/api/v1/docs/sort_and_filter.md",
      "name": "Query Syntax"
    },
        {
      "path": "../guides/bookings---schedules-and-sessions/com/wix/bookings/schedules/api/v1/docs/api_flow.md",
      "name": "API Overview"
    }
  ],
  "operations":   [
        {
      "name": "Add Participant",
      "methodName": "AddParticipant",
      "serviceName": "Schedules",
      "tag": "Participants",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "scheduleId",
        "participant",
        "participant.id"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID. Required.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "sessionId",
          "type": "string",
          "doc": "Optional. If this field is given, the participant will be added to this specific session.\nNot supported for recurring sessions.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "AddParticipant",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_AddParticipantResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Adds a participant to a schedule.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/participants",
        "links": [],
        "examples":         [
                    {
            "title": "Add participant to session",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/participants' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"participant\": { \"id\":\"8be22fc4-036a-4998-97ce-91a5dae2bd17\",\n               \"name\": \"John Charles\",\n               \"email\": \"john.charles@wix.com\",\n               \"partySize\": 1,\n               \"phone\": \"212-658-4492\"\n             },\n             \"scheduleId\": \"ef17e614-f318-41f4-9fc4-e6baa562f7e7\",\n             \"sessionId\": \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wwCirU5KwkJWqH0B97GF7hFSHtRU8zqDZG9Yc6tW9aYytf8M7pEgJY54x75vRdP5Tk54ppGEgNpHzYczMAFZ4lImqDVzvRAAa9NDk80tkJ0u9f7j4TmOghu3IwIumtyLYEssaOPHwF0CSuLNcxhXD4XTlEnmnR1KgkuF8rFaVxkTrLzuxSM3UONUxCDP6YBtT2AvnvLmllq1ogjwRGfXnd8DwXgswJWe7bGE06K9HdYaNNam3fOBwmzyGfRF1IpnJtpTBjshaNaW5\"\n           }'"],
            "response": ["{\n  \"scheduleId\": \"ef17e614-f318-41f4-9fc4-e6baa562f7e7\",\n  \"sessionId\": \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wwCirU5KwkJWqH0B97GF7hFSHtRU8zqDZG9Yc6tW9aYytf8M7pEgJY54x75vRdP5Tk54ppGEgNpHzYczMAFZ4lImqDVzvRAAa9NDk80tkJ0u9f7j4TmOghu3IwIumtyLYEssaOPHwF0CSuLNcxhXD4XTlEnmnR1KgkuF8rFaVxkTrLzuxSM3UONUxCDP6YBtT2AvnvLmllq1ogjwRGfXnd8DwXgswJWe7bGE06K9HdYaNNam3fOBwmzyGfRF1IpnJtpTBjshaNaW5\",\n  \"participant\":   {\n    \"id\": \"8be22fc4-036a-4998-97ce-91a5dae2bd17\",\n    \"name\": \"John Charles\",\n    \"phone\": \"212-658-4492\",\n    \"email\": \"john.charles@wix.com\",\n    \"partySize\": 1,\n    \"approvalStatus\": \"UNDEFINED\"\n  },\n  \"session\":   {\n    \"id\": \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wwCirU5KwkJWqH0B97GF7hFSHtRU8zqDZG9Yc6tW9aYytf8M7pEgJY54x75vRdP5Tk54ppGEgNpHzYczMAFZ4lImqDVzvRAAa9NDk80tkJ0u9f7j4TmOghu3IwIumtyLYEssaOPHwF0CSuLNcxhXD4XTlEnmnR1KgkuF8rFaVxkTrLzuxSM3UONUxCDP6YBtT2AvnvLmllq1ogjwRGfXnd8DwXgswJWe7bGE06K9HdYaNNam3fOBwmzyGfRF1IpnJtpTBjshaNaW5\",\n    \"scheduleId\": \"ef17e614-f318-41f4-9fc4-e6baa562f7e7\",\n    \"scheduleOwnerId\": \"3d7dba43-d214-4149-8a53-a1a4a0c1e636\",\n    \"start\":     {\n      \"timestamp\": \"2020-05-14T14:00:00Z\",\n      \"localDateTime\":       {\n        \"year\": 2020,\n        \"monthOfYear\": 5,\n        \"dayOfMonth\": 14,\n        \"hourOfDay\": 10,\n        \"minutesOfHour\": 0\n      },\n      \"timeZone\": \"America/Denver\"\n    },\n    \"end\":     {\n      \"timestamp\": \"2020-05-14T17:00:00Z\",\n      \"localDateTime\":       {\n        \"year\": 2020,\n        \"monthOfYear\": 5,\n        \"dayOfMonth\": 14,\n        \"hourOfDay\": 13,\n        \"minutesOfHour\": 0\n      },\n      \"timeZone\": \"America/Denver\"\n    },\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n    }],\n    \"title\": \"Intermediate Ski Class\",\n    \"tags\": [\"GROUP\"],\n    \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n    \"capacity\": 50,\n    \"rate\": {\"labeledPriceOptions\": {\"general\":     {\n      \"amount\": \"180\",\n      \"currency\": \"USD\",\n      \"downPayAmount\": \"0\"\n    }}},\n    \"notes\": \"\",\n    \"totalNumberOfParticipants\": 0,\n    \"participants\": [],\n    \"inheritedFields\":     [\n      \"capacity\",\n      \"end\",\n      \"externalCalendarOverrides\",\n      \"location\",\n      \"rate\",\n      \"start\",\n      \"tags\",\n      \"title\"\n    ],\n    \"status\": \"CONFIRMED\",\n    \"recurringIntervalId\": \"4b8d0a0e-6e4e-4557-8377-f1209f759eb3\",\n    \"type\": \"EVENT\"\n  }\n} "],
            "type": "curl",
            "extra": {"description": "Adds a participant to a session."}
          },
                    {
            "title": "Add participant to schedule.",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/participants' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"participant\": { \"id\":\"8be22fc4-036a-4998-97ce-91a5dae2bd17\",\n               \"name\": \"John Charles\",\n               \"email\": \"john.charles@wix.com\",\n               \"partySize\": 1,\n               \"phone\": \"212-658-4492\"\n             },\n             \"scheduleId\": \"ef17e614-f318-41f4-9fc4-e6baa562f7e7\"\n           }'"],
            "response": ["{\n  \"scheduleId\": \"ef17e614-f318-41f4-9fc4-e6baa562f7e7\",\n  \"participant\":   {\n    \"id\": \"8be22fc4-036a-4998-97ce-91a5dae2bd17\",\n    \"name\": \"John Charles\",\n    \"phone\": \"212-658-4492\",\n    \"email\": \"john.charles@wix.com\",\n    \"partySize\": 1,\n    \"approvalStatus\": \"UNDEFINED\"\n  },\n  \"schedule\":   {\n    \"id\": \"ef17e614-f318-41f4-9fc4-e6baa562f7e7\",\n    \"scheduleOwnerId\": \"3d7dba43-d214-4149-8a53-a1a4a0c1e636\",\n    \"firstSessionStart\": \"2020-04-30T14:00:00Z\",\n    \"lastSessionEnd\": \"2021-04-29T17:00:00Z\",\n    \"timeZone\": \"America/Denver\",\n    \"intervals\": [    {\n      \"id\": \"4b8d0a0e-6e4e-4557-8377-f1209f759eb3\",\n      \"start\": \"2020-04-28T21:00:00Z\",\n      \"end\": \"2021-04-29T20:59:59.999Z\",\n      \"interval\":       {\n        \"daysOfWeek\": \"THU\",\n        \"hourOfDay\": 10,\n        \"minuteOfHour\": 0,\n        \"duration\": 180\n      },\n      \"frequency\": {\"repetition\": 1},\n      \"affectedSchedules\": [      {\n        \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n      }]\n    }],\n    \"title\": \"Intermediate Ski Class\",\n    \"tags\": [\"GROUP\"],\n    \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n    \"capacity\": 50,\n    \"rate\": {\"labeledPriceOptions\": {\"general\":     {\n      \"amount\": \"180\",\n      \"currency\": \"USD\",\n      \"downPayAmount\": \"0\"\n    }}},\n    \"totalNumberOfParticipants\": 0,\n    \"participants\": [],\n    \"status\": \"CREATED\",\n    \"created\": \"2020-04-29T19:24:21.830Z\",\n    \"updated\": \"2020-04-29T19:24:21.830Z\",\n    \"version\": 0,\n    \"inheritedFields\": [\"timeZone\"]\n  }\n} "],
            "type": "curl",
            "extra": {"description": "Adds a participant to a schedule."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AddParticipantRequest",
        "rpcResponseName": "AddParticipantResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Add Participant To Session",
      "methodName": "AddParticipantToSession",
      "serviceName": "Schedules",
      "tag": "Participants",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "sessionId",
        "participant",
        "participant.id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "sessionId",
          "type": "string",
          "doc": "Session ID. Required.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "AddParticipantToSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_AddParticipantToSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Adds a participant to a session.\n<!--ONLY:REST-->\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n<!--END:ONLY:REST-->\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/{sessionId}/participants",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "AddParticipantToSessionRequest",
        "rpcResponseName": "AddParticipantToSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Cancel Schedule",
      "methodName": "Cancel",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["scheduleId"],
      "params":       [
                {
          "in": "PATH",
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "from",
          "type": "string",
          "doc": "Time to cancel the sessions from. Optional. If this field is empty, all of this schedule's sessions will be canceled.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "preserveFutureSessionsWithParticipants",
          "type": "boolean",
          "doc": "Whether to preserve future sessions with reservations. Defaults to false.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Deprecated, use participant_notification\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change, and an optional custom message.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "Cancel",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CancelScheduleResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Cancels a schedule. Equivalent to batch cancel of sessions linked to a single schedule.\nThe schedule changes to status = CANCELED -  all sessions up until the time of cancellation are kept, and all future sessions are removed.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/schedules/{scheduleId}/cancel",
        "links": [],
        "examples":         [
                    {
            "title": "Cancel Schedule without notifying.",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/schedules/03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e' \\\n   -H 'Authorization: <AUTH>'"],
            "response": ["{\"schedule\": {\n  \"id\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"firstSessionStart\": \"2019-08-19T11:00:00Z\",\n  \"lastSessionEnd\": \"2019-08-26T12:00:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"41f2f68b-9543-42b2-911b-cd98e5463ec1\",\n    \"start\": \"2019-08-18T21:00:00Z\",\n    \"end\": \"2019-08-26T20:59:59.999Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"MON\",\n      \"hourOfDay\": 14,\n      \"minuteOfHour\": 0,\n      \"duration\": 60\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"dc9585a4-a613-46fc-a229-59923efe08c6\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"5460647f-ff8f-45f7-8311-a3aef2d8e9e8\"\n    }]\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"availability\":   {\n    \"start\": \"2019-08-19T00:00:00Z\",\n    \"end\": \"2019-08-26T00:00:00Z\",\n    \"linkedSchedules\": []\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CANCELLED\",\n  \"created\": \"2019-08-05T08:14:18.187Z\",\n  \"updated\": \"2020-04-29T05:46:27.589Z\",\n  \"version\": 30,\n  \"inheritedFields\": [\"timeZone\"]\n}} "],
            "type": "curl",
            "extra": {"description": "Cancel a schedule without notifying participants"}
          },
                    {
            "title": "Cancel Schedule.",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/schedules/03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e' \\\n   -H 'Authorization: <AUTH>'\n   --data '{\n             \"participantNotification\": {\n               \"message\": \"This service is no longer available.\",\n               \"notifyParticipants\": true\n             },\n           }'"],
            "response": ["{\"schedule\": {\n  \"id\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"firstSessionStart\": \"2019-08-19T11:00:00Z\",\n  \"lastSessionEnd\": \"2019-08-26T12:00:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"41f2f68b-9543-42b2-911b-cd98e5463ec1\",\n    \"start\": \"2019-08-18T21:00:00Z\",\n    \"end\": \"2019-08-26T20:59:59.999Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"MON\",\n      \"hourOfDay\": 14,\n      \"minuteOfHour\": 0,\n      \"duration\": 60\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"dc9585a4-a613-46fc-a229-59923efe08c6\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"5460647f-ff8f-45f7-8311-a3aef2d8e9e8\"\n    }]\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"availability\":   {\n    \"start\": \"2019-08-19T00:00:00Z\",\n    \"end\": \"2019-08-26T00:00:00Z\",\n    \"linkedSchedules\": []\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CANCELLED\",\n  \"created\": \"2019-08-05T08:14:18.187Z\",\n  \"updated\": \"2020-04-29T05:46:27.589Z\",\n  \"version\": 30,\n  \"inheritedFields\": [\"timeZone\"]\n}} "],
            "type": "curl",
            "extra": {"description": "Cancel a schedule with a custom notification to participants"}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CancelScheduleRequest",
        "rpcResponseName": "CancelScheduleResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Schedule",
      "methodName": "Create",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "schedule",
        "schedule.scheduleOwnerId",
        "schedule.intervals.start",
        "schedule.availability.start"
      ],
      "params": [      {
        "in": "BODY",
        "name": "schedule",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": "Schedule.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "Create",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CreateScheduleResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Creates a schedule\n  <!--ONLY:VELO\n  The `createSchedule()` function returns a Promise that resolves when a schedule is created\n <!--END:ONLY:VELO-->\n <!--ONLY:REST-->\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n <!--END:ONLY:REST-->\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/schedules",
        "links": [],
        "examples":         [
                    {
            "title": "Create recurring sessions schedule.",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/schedules' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"schedule\": {\n               \"scheduleOwnerId\": \"3d7dba43-d214-4149-8a53-a1a4a0c1e636\",\n               \"intervals\": [\n                 {\n                   \"start\": \"2020-04-28T21:00:00Z\",\n                   \"end\": \"2021-04-29T21:00:00.000Z\",\n                   \"interval\": {\n                     \"daysOfWeek\": \"THU\",\n                     \"hourOfDay\": 10,\n                     \"minuteOfHour\": 0,\n                     \"duration\": 180\n                   },\n                   \"frequency\": {\n                     \"repetition\": 1\n                   },\n                   \"affectedSchedules\": [\n                     {\n                       \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n                       \"transparency\": \"BUSY\"\n                     }\n                   ]\n                 }\n               ],\n               \"title\": \"Intermediate Ski Class\",\n               \"tags\": [\n                 \"GROUP\"\n               ],\n               \"location\": {\n                 \"locationType\": \"OWNER_BUSINESS\"\n               },\n               \"capacity\": 50,\n               \"rate\": {\n                 \"labeledPriceOptions\": {\n                   \"general\": {\n                     \"amount\": \"180\",\n                     \"currency\": \"USD\",\n                     \"downPayAmount\": \"0\"\n                   }\n                 }\n               }\n             }\n           }'"],
            "response": ["{\"schedule\": {\n  \"id\": \"ef17e614-f318-41f4-9fc4-e6baa562f7e7\",\n  \"scheduleOwnerId\": \"3d7dba43-d214-4149-8a53-a1a4a0c1e636\",\n  \"firstSessionStart\": \"2020-04-30T14:00:00Z\",\n  \"lastSessionEnd\": \"2021-04-29T17:00:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"4b8d0a0e-6e4e-4557-8377-f1209f759eb3\",\n    \"start\": \"2020-04-28T21:00:00Z\",\n    \"end\": \"2021-04-29T21:00:00.000Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"THU\",\n      \"hourOfDay\": 10,\n      \"minuteOfHour\": 0,\n      \"duration\": 180\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n    }]\n  }],\n  \"title\": \"Intermediate Ski Class\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\": {\"labeledPriceOptions\": {\"general\":   {\n    \"amount\": \"180\",\n    \"currency\": \"USD\",\n    \"downPayAmount\": \"0\"\n  }}},\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CREATED\",\n  \"created\": \"2020-04-29T19:24:21.830Z\",\n  \"updated\": \"2020-04-29T19:24:21.830Z\",\n  \"version\": 0,\n  \"inheritedFields\": [\"timeZone\"]\n}} "],
            "type": "curl",
            "extra": {"description": "Create a schedule with recurring intervals."}
          },
                    {
            "title": "Create an availability based schedule.",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/schedules' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"schedule\": {\n               \"scheduleOwnerId\": \"893b6705-2f4f-49ca-a178-4038750314d9\",\n               \"title\": \"Personal Ski Lesson\",\n               \"tags\": [\n                 \"INDIVIDUAL\"\n               ],\n               \"location\": {\n                 \"locationType\": \"OWNER_BUSINESS\"\n               },\n               \"capacity\": 1,\n               \"rate\": {\n                 \"labeledPriceOptions\": {\n                   \"general\": {\n                     \"amount\": \"220\",\n                     \"currency\": \"USD\",\n                     \"downPayAmount\": \"0\"\n                   }\n                 }\n               },\n               \"availability\": {\n                 \"start\": \"2020-04-29T18:39:57.572Z\",\n                 \"linkedSchedules\": [\n                   {\n                     \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n                     \"transparency\": \"BUSY\"\n                   },\n                   {\n                     \"scheduleId\": \"f2743b3b-9186-48ce-b00a-b1ce87cbbcf4\",\n                     \"transparency\": \"BUSY\"\n                   },\n                   {\n                     \"scheduleId\": \"287fde78-6c7d-4044-a22b-8c87f8338fe2\",\n                     \"transparency\": \"BUSY\"\n                   }\n                 ],\n                 \"constraints\": {\n                   \"slotDurations\": [\n                     120\n                   ],\n                   \"timeBetweenSlots\": 0,\n                   \"slotsSplitInterval\": {\n                     \"sameAsDuration\": false,\n                     \"valueInMinutes\": 30\n                   }\n                 }\n               }\n             }\n           }'"],
            "response": ["{\"schedule\": {\n  \"id\": \"6bcc247e-4b3f-4644-a039-23513c106189\",\n  \"scheduleOwnerId\": \"893b6705-2f4f-49ca-a178-4038750314d9\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [],\n  \"title\": \"Personal Ski Lesson\",\n  \"tags\": [\"INDIVIDUAL\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 1,\n  \"rate\": {\"labeledPriceOptions\": {\"general\":   {\n    \"amount\": \"220\",\n    \"currency\": \"USD\",\n    \"downPayAmount\": \"0\"\n  }}},\n  \"availability\":   {\n    \"start\": \"2020-04-29T18:39:57.572Z\",\n    \"linkedSchedules\":     [\n            {\n        \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n      },\n            {\n        \"scheduleId\": \"f2743b3b-9186-48ce-b00a-b1ce87cbbcf4\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"5349296a-0797-4e47-b5db-d9e4316e3124\"\n      },\n            {\n        \"scheduleId\": \"287fde78-6c7d-4044-a22b-8c87f8338fe2\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"96efc89b-bd1d-446a-ab0f-f9c789ae3bca\"\n      }\n    ],\n    \"constraints\":     {\n      \"slotDurations\": [120],\n      \"timeBetweenSlots\": 0,\n      \"slotsSplitInterval\":       {\n        \"sameAsDuration\": false,\n        \"valueInMinutes\": 30\n      }\n    }\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CREATED\",\n  \"created\": \"2020-04-29T19:48:41.612Z\",\n  \"updated\": \"2020-04-29T19:48:41.612Z\",\n  \"version\": 0,\n  \"inheritedFields\": [\"timeZone\"]\n}} "],
            "type": "curl",
            "extra": {"description": "Create a schedule for private appointments"}
          },
                    {
            "title": "Create an availability based schedule.",
            "body": ["curl -X POST \\\n    'https://www.wixapis.com/bookings/v1/calendar/schedules' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"schedule\": {\n               \"scheduleOwnerId\": \"893b6705-2f4f-49ca-a178-4038750314d9\",\n               \"availability\": {\n                 \"start\": \"2020-04-30T06:00:00Z\"\n               },\n               \"intervals\": [\n                 {\n                   \"start\": \"2020-04-28T21:00:00Z\",\n                   \"end\": \"2021-04-29T21:00:00.000Z\",\n                   \"interval\": {\n                     \"daysOfWeek\": \"THU\",\n                     \"hourOfDay\": 10,\n                     \"minuteOfHour\": 0,\n                     \"duration\": 480\n                   },\n                   \"frequency\": {\n                     \"repetition\": 1\n                   },\n                   \"intervalType\": \"AVAILABILITY\"\n                 }\n               ]\n             }\n           }'"],
            "response": ["{\"schedule\": {\n  \"id\": \"ae095610-cc1d-4ff6-a92a-3dd53c54c3ef\",\n  \"scheduleOwnerId\": \"893b6705-2f4f-49ca-a178-4038750314d9\",\n  \"firstSessionStart\": \"2020-04-30T14:00:00Z\",\n  \"lastSessionEnd\": \"2021-04-22T22:00:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"afc1a280-c105-44fc-a2ba-0040ab0dc782\",\n    \"start\": \"2020-04-28T21:00:00Z\",\n    \"end\": \"2021-04-29T21:00:00Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"THU\",\n      \"hourOfDay\": 10,\n      \"minuteOfHour\": 0,\n      \"duration\": 480\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [],\n    \"intervalType\": \"AVAILABILITY\"\n  }],\n  \"tags\": [],\n  \"availability\":   {\n    \"start\": \"2020-04-30T06:00:00Z\",\n    \"linkedSchedules\": []\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CREATED\",\n  \"created\": \"2020-04-30T13:47:31.269Z\",\n  \"updated\": \"2020-04-30T13:47:31.269Z\",\n  \"version\": 0,\n  \"inheritedFields\": [\"timeZone\"]\n}} "],
            "type": "curl",
            "extra": {"description": "Create a schedule with availability"}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateScheduleRequest",
        "rpcResponseName": "CreateScheduleResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Create Session",
      "methodName": "CreateSession",
      "serviceName": "Schedules",
      "tag": "Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "session",
        "session.scheduleId",
        "session.start",
        "session.end"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": "Session.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "deleted",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CreateSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions",
        "links": [],
        "examples": [        {
          "title": "Create Sessions",
          "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/sessions' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"session\": {\n               \"scheduleId\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n               \"affectedSchedules\": [\n                 {\n                   \"transparency\": \"BUSY\",\n                   \"scheduleId\": \"06be0abc-8a6a-4b7b-93c1-70d053ffd97f\"\n                 }\n               ],\n               \"start\": {\n                 \"timestamp\": \"2020-04-16T11:00:00.000-07:00\"\n               },\n               \"end\": {\n                 \"timestamp\": \"2020-04-16T12:00:00.000-07:00\"\n               }\n             }\n           }'"],
          "response": ["{\"session\": {\n  \"id\": \"2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1\",\n  \"scheduleId\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"start\":   {\n    \"timestamp\": \"2020-04-16T18:00:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"end\":   {\n    \"timestamp\": \"2020-04-16T19:00:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"affectedSchedules\": [  {\n    \"scheduleId\": \"06be0abc-8a6a-4b7b-93c1-70d053ffd97f\",\n    \"transparency\": \"BUSY\",\n    \"scheduleOwnerId\": \"1d6a2248-34e7-4bbc-a6e3-bf0ce71f594f\"\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"notes\": \"\",\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"inheritedFields\":   [\n    \"rate\",\n    \"location\",\n    \"tags\",\n    \"externalCalendarOverrides\",\n    \"title\",\n    \"capacity\"\n  ],\n  \"status\": \"CONFIRMED\",\n  \"type\": \"EVENT\"\n}} "],
          "type": "curl",
          "extra": {"description": "Create a session on a a given schedule."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateSessionRequest",
        "rpcResponseName": "CreateSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Delete Session",
      "methodName": "DeleteSession",
      "serviceName": "Schedules",
      "tag": "Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": "Session ID. Required.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Deprecated, use participant_notification\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change, and an optional custom message.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_DeleteSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nDeletes a session from a schedule.\n<!--ONLY:VELO\nThe `deleteSession()` function returns a Promise that resolves to a session Id when the session has been deleted.\n<!--END:ONLY:VELO-->\nUse the `participantNotification` property to send an email to the participants when the session is deleted.\n\nWhen deleting a session of type `\"EVENT\"` where a booking exists, the booking's status is updated to `\"CANCELED\"`.\n\nTo delete a set of recurring sessions, specify the session's `recurringSessionId` in the `sessionId` property of the request parameters.\n<!--ONLY:REST-->\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n<!--END:ONLY:REST-->\n<!--ONLY:REST-->\n@snippet [deleteSession.es6=Delete a session.]\n<!--END:ONLY:REST-->\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/{id}/cancel",
        "links": [],
        "examples": [        {
          "title": "Delete Session",
          "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/sessions/2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1/cancel' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"participantNotification\": {\n               \"message\": \"Session is canceled due to the incoming snow storm\",\n               \"notifyParticipants\": true\n             }\n           }'"],
          "response": ["{\"id\": \"2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1\"} "],
          "type": "curl",
          "extra": {"description": "Deletes a session"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteSessionRequest",
        "rpcResponseName": "DeleteSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Schedule",
      "methodName": "Get",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": "Schedule ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "Get",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_GetScheduleResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Gets a schedule from the calendar.\n<!--ONLY:VELO\nThe `getSchedule()` function returns a Promise that resolves to a schedule.\nUse `getSchedule()` to get a specific schedule based on the schedule Id.\n<!--END:ONLY:VELO-->\n<!--ONLY:REST-->\n> **Permissions**\n> This endpoint requires the Read Bookings Calendar or the Manage Bookings permissions scope.\n> With the Read Bookings Calendar permission scope, the schedule participants are not returned.\n<!--END:ONLY:REST-->\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/bookings/v1/calendar/schedules/{id}",
        "links": [],
        "examples": [        {
          "title": "Get Schedule",
          "body": ["curl 'https://www.wixapis.com/bookings/v1/calendar/schedules/03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e' \\\n   -H 'Authorization: <AUTH>'"],
          "response": ["{\"schedule\": {\n  \"id\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"firstSessionStart\": \"2019-08-19T11:00:00Z\",\n  \"lastSessionEnd\": \"2019-08-26T12:00:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"41f2f68b-9543-42b2-911b-cd98e5463ec1\",\n    \"start\": \"2019-08-18T21:00:00Z\",\n    \"end\": \"2019-08-26T20:59:59.999Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"MON\",\n      \"hourOfDay\": 14,\n      \"minuteOfHour\": 0,\n      \"duration\": 60\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"dc9585a4-a613-46fc-a229-59923efe08c6\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"5460647f-ff8f-45f7-8311-a3aef2d8e9e8\"\n    }]\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"availability\":   {\n    \"start\": \"2019-08-19T00:00:00Z\",\n    \"end\": \"2019-08-26T00:00:00Z\",\n    \"linkedSchedules\": []\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CREATED\",\n  \"created\": \"2019-08-05T08:14:18.187Z\",\n  \"updated\": \"2019-12-25T14:01:46.627Z\",\n  \"version\": 30,\n  \"inheritedFields\": [\"timeZone\"]\n}} "],
          "type": "curl",
          "extra": {"description": "Requests a schedule by its Id"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetScheduleRequest",
        "rpcResponseName": "GetScheduleResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Get Session",
      "methodName": "GetSession",
      "serviceName": "Schedules",
      "tag": "Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": "Session ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_GetSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Returns a session from the calendar.\n> **Permissions**\n> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.\n> With the Read Bookings Calendar permission scope, the session participants are not returned.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/{id}",
        "links": [],
        "examples": [        {
          "title": "Get Session",
          "body": ["curl 'https://www.wixapis.com/bookings/v1/calendar/sessions/2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1' \\\n   -H 'Authorization: <AUTH>'"],
          "response": ["{\"session\": {\n  \"id\": \"2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1\",\n  \"scheduleId\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"start\":   {\n    \"timestamp\": \"2020-04-16T18:00:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"end\":   {\n    \"timestamp\": \"2020-04-16T19:00:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"affectedSchedules\": [  {\n    \"scheduleId\": \"06be0abc-8a6a-4b7b-93c1-70d053ffd97f\",\n    \"transparency\": \"BUSY\",\n    \"scheduleOwnerId\": \"1d6a2248-34e7-4bbc-a6e3-bf0ce71f594f\"\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"notes\": \"\",\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"inheritedFields\":   [\n    \"rate\",\n    \"location\",\n    \"tags\",\n    \"externalCalendarOverrides\",\n    \"title\",\n    \"capacity\"\n  ],\n  \"status\": \"CONFIRMED\",\n  \"type\": \"EVENT\"\n}} "],
          "type": "curl",
          "extra": {"description": "Requests a session by its Id"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetSessionRequest",
        "rpcResponseName": "GetSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Schedules",
      "methodName": "List",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "scheduleIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "List by schedule IDs.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "scheduleOwnerIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "List by schedule owner IDs.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "dontIncludeScheduleParticipants",
          "type": "boolean",
          "doc": "Whether to return a list of the schedule's participants.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "userIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List schedules assigned to the given Wix user ids.\n Requires the Manage Personal Calendar or the Manage Business Calendar scope.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "List",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ListSchedulesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Lists schedules by schedule IDs or schedule owner IDs.\n<!--ONLY:REST-->\n> **Permissions**\n> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.\n> With the Read Bookings Calendar permission scope, the schedule participants are not returned.\n<!--END:ONLY:REST-->\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/bookings/v1/calendar/schedules",
        "links": [],
        "examples": [        {
          "title": "List Schedules",
          "body": ["curl 'https://www.wixapis.com/bookings/v1/calendar/schedules' \\\n   -H 'Authorization: <AUTH>'"],
          "response": ["{\"schedules\": [{\n  \"id\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"firstSessionStart\": \"2019-08-19T11:00:00Z\",\n  \"lastSessionEnd\": \"2019-08-26T12:00:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"41f2f68b-9543-42b2-911b-cd98e5463ec1\",\n    \"start\": \"2019-08-18T21:00:00Z\",\n    \"end\": \"2019-08-26T20:59:59.999Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"MON\",\n      \"hourOfDay\": 14,\n      \"minuteOfHour\": 0,\n      \"duration\": 60\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"dc9585a4-a613-46fc-a229-59923efe08c6\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"5460647f-ff8f-45f7-8311-a3aef2d8e9e8\"\n    }]\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"availability\":   {\n    \"start\": \"2019-08-19T00:00:00Z\",\n    \"end\": \"2019-08-26T00:00:00Z\",\n    \"linkedSchedules\": []\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CREATED\",\n  \"created\": \"2019-08-05T08:14:18.187Z\",\n  \"updated\": \"2019-12-25T14:01:46.627Z\",\n  \"version\": 30,\n  \"inheritedFields\": [\"timeZone\"]\n}]} "],
          "type": "curl",
          "extra": {"description": "Returns all the schedules in the site"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListSchedulesRequest",
        "rpcResponseName": "ListSchedulesResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "List Sessions",
      "methodName": "ListSessions",
      "serviceName": "Schedules",
      "tag": "Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "deprecated": true,
      "params":       [
                {
          "in": "BODY",
          "name": "ids",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Session ID.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldMask",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "Field mask of fields to return. Currently only supports the \"scheduleOwnerId\" field.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListSessions",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ListSessionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Returns multiple sessions from the calendar.\n> **Permissions**\n> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope\n> With the Read Bookings Calendar permission scope, the sessions return without participants.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/list",
        "links": [],
        "examples":         [
                    {
            "title": "List Sessions",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/sessions/list' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"ids\": [\"2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1\"]\n           }'"],
            "response": ["{\"session\": {\n  \"id\": \"2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1\",\n  \"scheduleId\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"start\":   {\n    \"timestamp\": \"2020-04-16T18:00:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"end\":   {\n    \"timestamp\": \"2020-04-16T19:00:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"affectedSchedules\": [  {\n    \"scheduleId\": \"06be0abc-8a6a-4b7b-93c1-70d053ffd97f\",\n    \"transparency\": \"BUSY\",\n    \"scheduleOwnerId\": \"1d6a2248-34e7-4bbc-a6e3-bf0ce71f594f\"\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"notes\": \"\",\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"inheritedFields\":   [\n    \"rate\",\n    \"location\",\n    \"tags\",\n    \"externalCalendarOverrides\",\n    \"title\",\n    \"capacity\"\n  ],\n  \"status\": \"CONFIRMED\",\n  \"type\": \"EVENT\"\n}} "],
            "type": "curl",
            "extra": {"description": "Returns all the sessions by the requested Ids."}
          },
                    {
            "title": "List Sessions with field mask.",
            "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/sessions/list' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"ids\": [\n                \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wvKBjRGhub7Y7cLdIExqh2iuWTcm8Ezhcej4vS7gdabMeRHIZtLf1Xq1o1EdwQ2v2gCUSuDqwUIfj0DFyUGWNBThpxqEHVWLKC6by49GVZaOmlNMHsJ00NTDf7VyZ0jyciRDw3Kg7xXXHCpWbZZSAJCvLBYKSd3VlgRJsiC8NjVEf8UBTqOZ3b9nw5yDe9z2JL6ObtlWSYl8K5rgKZXBCKKIo1jxCKTreB2dgEguqri8kgTOdBsGxNX5ijCmYSkoaLJYsV5onmWez\",\n                \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wvKBjRGhub7Y7cLdIExqh2iuWTcm8Ezhcej4vS7gdabMeRHIZtLf1Xq1o1EdwQ2v2gCUSuDqwUIfj0DFyUGWSZgwl3gKqmjCZUtIAmyo4jDXnAxu7AS66pLAF4I6gBn3NCkme1G5UQdXXiOtyZu4h8hgfop8a5Wko4cbtvEML1HRYIzUlpAKLN1DYVrsyhoeUV2vofC9vLednHRD72bJVs5XUmuhs7I7DmkeDPiDZmCtye5UJx9Usm1u8eT3npvjsXFOuKHdGx27x\"\n             ],\n             \"fieldMask\": {\n                \"paths\": [\n                  \"scheduleOwnerId\"\n                ]\n             }\n           }'"],
            "response": ["{\"sessions\": [\n    {\n    \"id\": \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wvKBjRGhub7Y7cLdIExqh2iuWTcm8Ezhcej4vS7gdabMeRHIZtLf1Xq1o1EdwQ2v2gCUSuDqwUIfj0DFyUGWNBThpxqEHVWLKC6by49GVZaOmlNMHsJ00NTDf7VyZ0jyciRDw3Kg7xXXHCpWbZZSAJCvLBYKSd3VlgRJsiC8NjVEf8UBTqOZ3b9nw5yDe9z2JL6ObtlWSYl8K5rgKZXBCKKIo1jxCKTreB2dgEguqri8kgTOdBsGxNX5ijCmYSkoaLJYsV5onmWez\",\n    \"scheduleId\": \"\",\n    \"scheduleOwnerId\": \"e6b6108c-92bc-462b-937c-dab386909fd2\",\n    \"affectedSchedules\": [],\n    \"tags\": [],\n    \"notes\": \"\",\n    \"totalNumberOfParticipants\": 0,\n    \"participants\": [],\n    \"inheritedFields\": [],\n    \"status\": \"UNDEFINED\",\n    \"type\": \"UNDEFINED\"\n  },\n    {\n    \"id\": \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wvKBjRGhub7Y7cLdIExqh2iuWTcm8Ezhcej4vS7gdabMeRHIZtLf1Xq1o1EdwQ2v2gCUSuDqwUIfj0DFyUGWSZgwl3gKqmjCZUtIAmyo4jDXnAxu7AS66pLAF4I6gBn3NCkme1G5UQdXXiOtyZu4h8hgfop8a5Wko4cbtvEML1HRYIzUlpAKLN1DYVrsyhoeUV2vofC9vLednHRD72bJVs5XUmuhs7I7DmkeDPiDZmCtye5UJx9Usm1u8eT3npvjsXFOuKHdGx27x\",\n    \"scheduleId\": \"\",\n    \"scheduleOwnerId\": \"e6b6108c-92bc-462b-937c-dab386909fd2\",\n    \"affectedSchedules\": [],\n    \"tags\": [],\n    \"notes\": \"\",\n    \"totalNumberOfParticipants\": 0,\n    \"participants\": [],\n    \"inheritedFields\": [],\n    \"status\": \"UNDEFINED\",\n    \"type\": \"UNDEFINED\"\n  }\n]} "],
            "type": "curl",
            "extra": {"description": "Currently, only the 'scheduleOwnerId' field is supported."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListSessionsRequest",
        "rpcResponseName": "ListSessionsResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Query Sessions",
      "methodName": "QuerySessions",
      "serviceName": "Schedules",
      "tag": "Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Bookings - Schedules and Sessions._wix_common_Query",
        "doc": "Query\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QuerySessions",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_QuerySessionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Returns a list of sessions from the calendar.   \n    \nOnly recurring sessions are currently supported.\n `\"recurrence\": { \"$exists\": true }` must be specified in the filter section.\n\n The query run with the following defaults:\n ```JSON\n {\n  \"query\" : {\n      \"paging\" : { \"offset\" : 0, \"limit\": 500}\n     }\n }    \n ```\n\n The following fields and filters are supported in the query:\n\n |FIELD|Description |Supported filters|\n |--|--|--|\n |`recurrence`| Filter for the existence of the `session.recurrence`.  Currently required and must be `true`.| `$eq`\n |`scheduleId`| Filter by `session.schedule_id`. Supports multiple values. Up to 100 values are allowed. Optional.|`$eq`\n |`location`| Filter for the existence of the `session.location`. Can be combined with other `location` filters. Optional.|`$exists`\n  |`location.locationType`| Filter by `session.location.location_type`. Supports multiple values. Possible values are `OWNER_BUSINESS`, `OWNER_CUSTOM` and `CUSTOM`. Optional.|`$eq`\n  |`location.businessLocation.id`| Filter by `session.location.business_location.id`. Supports multiple values. Optional.|`$eq`\n  |paging| Supported||\n  |fields| Supported ||\n  |fieldsets| Note supported||\n\n\n> **Permissions**\n> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope\n> With the Read Bookings Calendar permission scope, the sessions return without participants.\n\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/query",
        "links": [],
        "examples":         [
                    {
            "title": "Query Sessions by schedule IDs",
            "body": ["curl -X POST 'https://www.wixapis.com/bookings/v1/calendar/sessions/query' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n    \"query\": {\n        \"filter\": {\n            \"recurrence\": {\n                \"$exists\": true\n            },\n            \"scheduleId\": [\n                \"b5c9d6f1-8606-4378-9f4b-7e94d98de91f\",\n                \"16b7d1af-7112-4e1e-bbef-0cf01eefb4eb\"\n            ]\n        }\n    }\n}'"],
            "response": ["{\n  \"sessions\":   [\n        {\n      \"id\": \"16b7d1af71124e1ebbef0cf01eefb4eb-9dd63b6287d24c30b76fdb4604fd2f80\",\n      \"scheduleId\": \"16b7d1af-7112-4e1e-bbef-0cf01eefb4eb\",\n      \"scheduleOwnerId\": \"00f4ec31-062b-4ef6-b064-c18ed474ffd3\",\n      \"start\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 1,\n        \"hourOfDay\": 10,\n        \"minutesOfHour\": 0\n      }},\n      \"end\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 1,\n        \"hourOfDay\": 16,\n        \"minutesOfHour\": 0\n      }},\n      \"affectedSchedules\": [],\n      \"tags\": [],\n      \"notes\": \"\",\n      \"totalNumberOfParticipants\": 0,\n      \"participants\": [],\n      \"inheritedFields\":       [\n        \"rate\",\n        \"location\",\n        \"tags\",\n        \"externalCalendarOverrides\",\n        \"title\",\n        \"capacity\"\n      ],\n      \"status\": \"UNDEFINED\",\n      \"type\": \"WORKING_HOURS\",\n      \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=MO;UNTIL=20220101T000000Z\"\n    },\n        {\n      \"id\": \"b5c9d6f1860643789f4b7e94d98de91f-3ea046c1d04849a8a705e8381d1b3f11\",\n      \"scheduleId\": \"b5c9d6f1-8606-4378-9f4b-7e94d98de91f\",\n      \"scheduleOwnerId\": \"57daccbf-0fc9-4f3d-9c9e-1969947f33fa\",\n      \"start\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 1,\n        \"dayOfMonth\": 20,\n        \"hourOfDay\": 16,\n        \"minutesOfHour\": 30\n      }},\n      \"end\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 1,\n        \"dayOfMonth\": 20,\n        \"hourOfDay\": 17,\n        \"minutesOfHour\": 30\n      }},\n      \"affectedSchedules\": [      {\n        \"scheduleId\": \"cd1c5d5d-78ef-444f-9a3f-a1eb76349223\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n      }],\n      \"title\": \"12 Part Meditation Course\",\n      \"tags\": [\"COURSE\"],\n      \"location\":       {\n        \"locationType\": \"OWNER_BUSINESS\",\n        \"businessLocation\":         {\n          \"id\": \"4f2361e3-f01a-4b46-9e79-55ee2cffa008\",\n          \"name\": \"Campbell Parade\",\n          \"default\": true,\n          \"status\": \"ACTIVE\",\n          \"locationType\": \"UNKNOWN\",\n          \"timeZone\": \"America/New_York\",\n          \"email\": \"yogamed@test.com\",\n          \"phone\": \"555 3456\",\n          \"address\":           {\n            \"country\": \"US\",\n            \"subdivision\": \"NY\",\n            \"city\": \"New York\",\n            \"formattedAddress\": \"New York, NY, USA\",\n            \"geocode\":             {\n              \"latitude\": 40.712776,\n              \"longitude\": -74.005974\n            }\n          },\n          \"revision\": \"3\",\n          \"archived\": false\n        }\n      },\n      \"capacity\": 50,\n      \"rate\": {\"labeledPriceOptions\": {\"general\":       {\n        \"amount\": \"5000\",\n        \"currency\": \"USD\",\n        \"downPayAmount\": \"50\"\n      }}},\n      \"notes\": \"\",\n      \"totalNumberOfParticipants\": 0,\n      \"participants\": [],\n      \"inheritedFields\":       [\n        \"rate\",\n        \"location\",\n        \"tags\",\n        \"externalCalendarOverrides\",\n        \"title\",\n        \"capacity\"\n      ],\n      \"status\": \"UNDEFINED\",\n      \"type\": \"EVENT\",\n      \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20210228T145100Z\"\n    },\n        {\n      \"id\": \"b5c9d6f1860643789f4b7e94d98de91f-3b23b017a14c40c08c3a85ec0bf30aed\",\n      \"scheduleId\": \"b5c9d6f1-8606-4378-9f4b-7e94d98de91f\",\n      \"scheduleOwnerId\": \"57daccbf-0fc9-4f3d-9c9e-1969947f33fa\",\n      \"start\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 3,\n        \"hourOfDay\": 17,\n        \"minutesOfHour\": 0\n      }},\n      \"end\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 3,\n        \"hourOfDay\": 18,\n        \"minutesOfHour\": 0\n      }},\n      \"affectedSchedules\": [      {\n        \"scheduleId\": \"cd1c5d5d-78ef-444f-9a3f-a1eb76349223\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n      }],\n      \"title\": \"12 Part Meditation Course\",\n      \"tags\": [\"COURSE\"],\n      \"location\":       {\n        \"locationType\": \"OWNER_BUSINESS\",\n        \"businessLocation\":         {\n          \"id\": \"4f2361e3-f01a-4b46-9e79-55ee2cffa008\",\n          \"name\": \"Campbell Parade\",\n          \"default\": true,\n          \"status\": \"ACTIVE\",\n          \"locationType\": \"UNKNOWN\",\n          \"timeZone\": \"America/New_York\",\n          \"email\": \"yogamed@test.com\",\n          \"phone\": \"555 3456\",\n          \"address\":           {\n            \"country\": \"US\",\n            \"subdivision\": \"NY\",\n            \"city\": \"New York\",\n            \"formattedAddress\": \"New York, NY, USA\",\n            \"geocode\":             {\n              \"latitude\": 40.712776,\n              \"longitude\": -74.005974\n            }\n          },\n          \"revision\": \"3\",\n          \"archived\": false\n        }\n      },\n      \"capacity\": 50,\n      \"rate\": {\"labeledPriceOptions\": {\"general\":       {\n        \"amount\": \"5000\",\n        \"currency\": \"USD\",\n        \"downPayAmount\": \"50\"\n      }}},\n      \"notes\": \"\",\n      \"totalNumberOfParticipants\": 0,\n      \"participants\": [],\n      \"inheritedFields\":       [\n        \"rate\",\n        \"location\",\n        \"tags\",\n        \"externalCalendarOverrides\",\n        \"title\",\n        \"capacity\"\n      ],\n      \"status\": \"UNDEFINED\",\n      \"type\": \"EVENT\",\n      \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20210330T205959Z\"\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 3,\n    \"offset\": 0,\n    \"total\": 3\n  }\n} "],
            "type": "curl",
            "extra": {"description": "Query all recurring sessions having the specified schedule IDs"}
          },
                    {
            "title": "Query Sessions by location",
            "body": ["curl -X POST 'https://www.wixapis.com/bookings/v1/calendar/sessions/query' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n    \"query\": {\n        \"filter\": {\n            \"recurrence\": {\n                \"$exists\": true\n            },\n            \"scheduleId\": [\n                \"b5c9d6f1-8606-4378-9f4b-7e94d98de91f\",\n                \"16b7d1af-7112-4e1e-bbef-0cf01eefb4eb\"\n            ],\n            \"$or\": [\n                {\n                    \"location.businessLocation.id\": [\n                        \"4f2361e3-f01a-4b46-9e79-55ee2cffa008\"\n                    ]\n                },\n                {\n                    \"location\": {\n                        \"$exists\": false\n                    }\n                }\n            ]\n        }\n    }\n}'"],
            "response": ["{\n  \"sessions\":   [\n        {\n      \"id\": \"16b7d1af71124e1ebbef0cf01eefb4eb-9dd63b6287d24c30b76fdb4604fd2f80\",\n      \"scheduleId\": \"16b7d1af-7112-4e1e-bbef-0cf01eefb4eb\",\n      \"scheduleOwnerId\": \"00f4ec31-062b-4ef6-b064-c18ed474ffd3\",\n      \"start\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 1,\n        \"hourOfDay\": 10,\n        \"minutesOfHour\": 0\n      }},\n      \"end\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 1,\n        \"hourOfDay\": 16,\n        \"minutesOfHour\": 0\n      }},\n      \"affectedSchedules\": [],\n      \"tags\": [],\n      \"notes\": \"\",\n      \"totalNumberOfParticipants\": 0,\n      \"participants\": [],\n      \"inheritedFields\":       [\n        \"rate\",\n        \"location\",\n        \"tags\",\n        \"externalCalendarOverrides\",\n        \"title\",\n        \"capacity\"\n      ],\n      \"status\": \"UNDEFINED\",\n      \"type\": \"WORKING_HOURS\",\n      \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=MO;UNTIL=20220101T000000Z\"\n    },\n        {\n      \"id\": \"b5c9d6f1860643789f4b7e94d98de91f-3ea046c1d04849a8a705e8381d1b3f11\",\n      \"scheduleId\": \"b5c9d6f1-8606-4378-9f4b-7e94d98de91f\",\n      \"scheduleOwnerId\": \"57daccbf-0fc9-4f3d-9c9e-1969947f33fa\",\n      \"start\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 1,\n        \"dayOfMonth\": 20,\n        \"hourOfDay\": 16,\n        \"minutesOfHour\": 30\n      }},\n      \"end\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 1,\n        \"dayOfMonth\": 20,\n        \"hourOfDay\": 17,\n        \"minutesOfHour\": 30\n      }},\n      \"affectedSchedules\": [      {\n        \"scheduleId\": \"cd1c5d5d-78ef-444f-9a3f-a1eb76349223\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n      }],\n      \"title\": \"12 Part Meditation Course\",\n      \"tags\": [\"COURSE\"],\n      \"location\":       {\n        \"locationType\": \"OWNER_BUSINESS\",\n        \"businessLocation\":         {\n          \"id\": \"4f2361e3-f01a-4b46-9e79-55ee2cffa008\",\n          \"name\": \"Campbell Parade\",\n          \"default\": true,\n          \"status\": \"ACTIVE\",\n          \"locationType\": \"UNKNOWN\",\n          \"timeZone\": \"America/New_York\",\n          \"email\": \"yogamed@test.com\",\n          \"phone\": \"555 3456\",\n          \"address\":           {\n            \"country\": \"US\",\n            \"subdivision\": \"NY\",\n            \"city\": \"New York\",\n            \"formattedAddress\": \"New York, NY, USA\",\n            \"geocode\":             {\n              \"latitude\": 40.712776,\n              \"longitude\": -74.005974\n            }\n          },\n          \"revision\": \"3\",\n          \"archived\": false\n        }\n      },\n      \"capacity\": 50,\n      \"rate\": {\"labeledPriceOptions\": {\"general\":       {\n        \"amount\": \"5000\",\n        \"currency\": \"USD\",\n        \"downPayAmount\": \"50\"\n      }}},\n      \"notes\": \"\",\n      \"totalNumberOfParticipants\": 0,\n      \"participants\": [],\n      \"inheritedFields\":       [\n        \"rate\",\n        \"location\",\n        \"tags\",\n        \"externalCalendarOverrides\",\n        \"title\",\n        \"capacity\"\n      ],\n      \"status\": \"UNDEFINED\",\n      \"type\": \"EVENT\",\n      \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20210228T145100Z\"\n    },\n        {\n      \"id\": \"b5c9d6f1860643789f4b7e94d98de91f-3b23b017a14c40c08c3a85ec0bf30aed\",\n      \"scheduleId\": \"b5c9d6f1-8606-4378-9f4b-7e94d98de91f\",\n      \"scheduleOwnerId\": \"57daccbf-0fc9-4f3d-9c9e-1969947f33fa\",\n      \"start\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 3,\n        \"hourOfDay\": 17,\n        \"minutesOfHour\": 0\n      }},\n      \"end\": {\"localDateTime\":       {\n        \"year\": 2021,\n        \"monthOfYear\": 3,\n        \"dayOfMonth\": 3,\n        \"hourOfDay\": 18,\n        \"minutesOfHour\": 0\n      }},\n      \"affectedSchedules\": [      {\n        \"scheduleId\": \"cd1c5d5d-78ef-444f-9a3f-a1eb76349223\",\n        \"transparency\": \"BUSY\",\n        \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n      }],\n      \"title\": \"12 Part Meditation Course\",\n      \"tags\": [\"COURSE\"],\n      \"location\":       {\n        \"locationType\": \"OWNER_BUSINESS\",\n        \"businessLocation\":         {\n          \"id\": \"4f2361e3-f01a-4b46-9e79-55ee2cffa008\",\n          \"name\": \"Campbell Parade\",\n          \"default\": true,\n          \"status\": \"ACTIVE\",\n          \"locationType\": \"UNKNOWN\",\n          \"timeZone\": \"America/New_York\",\n          \"email\": \"yogamed@test.com\",\n          \"phone\": \"555 3456\",\n          \"address\":           {\n            \"country\": \"US\",\n            \"subdivision\": \"NY\",\n            \"city\": \"New York\",\n            \"formattedAddress\": \"New York, NY, USA\",\n            \"geocode\":             {\n              \"latitude\": 40.712776,\n              \"longitude\": -74.005974\n            }\n          },\n          \"revision\": \"3\",\n          \"archived\": false\n        }\n      },\n      \"capacity\": 50,\n      \"rate\": {\"labeledPriceOptions\": {\"general\":       {\n        \"amount\": \"5000\",\n        \"currency\": \"USD\",\n        \"downPayAmount\": \"50\"\n      }}},\n      \"notes\": \"\",\n      \"totalNumberOfParticipants\": 0,\n      \"participants\": [],\n      \"inheritedFields\":       [\n        \"rate\",\n        \"location\",\n        \"tags\",\n        \"externalCalendarOverrides\",\n        \"title\",\n        \"capacity\"\n      ],\n      \"status\": \"UNDEFINED\",\n      \"type\": \"EVENT\",\n      \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20210330T205959Z\"\n    }\n  ],\n  \"pagingMetadata\":   {\n    \"count\": 3,\n    \"offset\": 0,\n    \"total\": 3\n  }\n} "],
            "type": "curl",
            "extra": {"description": "Query all recurring sessions for a specified list of schedule IDs, and that have a specified location ID, or where no location has been defined."}
          },
                    {
            "title": "Query Sessions by location type",
            "body": ["curl -X POST 'https://www.wixapis.com/bookings/v1/calendar/sessions/query' \\\n-H 'Authorization: <AUTH>' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n    \"query\": {\n        \"filter\": {\n            \"recurrence\": {\n                \"$exists\": true\n            },\n            \"scheduleId\": \"66a2674c-9267-4600-826e-f463957b9446\",\n            \"location.locationType\": [\n                \"OWNER_BUSINESS\",\n                \"CUSTOM\"\n            ]\n        }\n    }\n}'\n\n"],
            "response": ["{} "],
            "type": "curl",
            "extra": {"description": "Query all recurring sessions that have a location of a certain types"}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QuerySessionsRequest",
        "rpcResponseName": "QuerySessionsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Remove Participant",
      "methodName": "RemoveParticipant",
      "serviceName": "Schedules",
      "tag": "Participants",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": "Participant ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "RemoveParticipant",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RemoveParticipantResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Removes a participant from a schedule or from a specific session.\nNote: Currently, removing *participants that have been inherited from a schedule* from a specific session, is not supported.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/bookings/v1/calendar/participants/{id}",
        "links": [],
        "examples": [        {
          "title": "Remove Participant",
          "body": ["curl -X DELETE \\\n   'https://www.wixapis.com/bookings/v1/calendar/participants/8be22fc4-036a-4998-97ce-91a5dae2bd17' \\\n   -H 'Authorization: <AUTH>'"],
          "response": ["{\"id\": \"8be22fc4-036a-4998-97ce-91a5dae2bd17\"} "],
          "type": "curl",
          "extra": {"description": "Removes a participant"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "RemoveParticipantRequest",
        "rpcResponseName": "RemoveParticipantResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Session Batch",
      "methodName": "SessionBatch",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "sessionsToCreate",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CreateSessionRequest"]
          },
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sessionsToUpdate",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateSessionRequest"]
          },
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sessionsToDelete",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_DeleteSessionRequest"]
          },
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "SessionBatch",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SessionBatchResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Create, Update, and Delete multiple sessions in a single request.\nAll sessions must belong to the same schedule.\nCurrently only supported for recurring sessions.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/batch",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SessionBatchRequest",
        "rpcResponseName": "SessionBatchResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Split Interval",
      "methodName": "SplitInterval",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "scheduleId",
        "intervalId",
        "splitTimes"
      ],
      "deprecated": true,
      "params":       [
                {
          "in": "PATH",
          "name": "intervalId",
          "type": "string",
          "doc": "Interval ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "splitTimes",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of times where the interval is to be split. Must not be in the past. Must not contain duplicate times.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "SplitInterval",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SplitIntervalResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Splits an existing interval into two or more parts.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/intervals/{intervalId}/split",
        "links": [],
        "examples": [        {
          "title": "Split Interval.",
          "body": ["curl -X POST \\\n   'https://www.wixapis.com/bookings/v1/calendar/intervals/e88c2840-f06d-4e9b-aeb3-f0d31ed9ee85/split' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"splitTimes\": [\n               \"2020-06-28T00:00:00Z\"\n             ],\n             \"scheduleId\": \"ed246481-6fff-4e51-9ee0-53c1623e931d\"\n           }'"],
          "response": ["{\"intervals\": [\n    {\n    \"id\": \"e88c2840-f06d-4e9b-aeb3-f0d31ed9ee85\",\n    \"start\": \"2020-06-14T06:00:00Z\",\n    \"end\": \"2020-06-28T00:00:00Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"MON\",\n      \"hourOfDay\": 3,\n      \"minuteOfHour\": 0,\n      \"duration\": 60\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"f2743b3b-9186-48ce-b00a-b1ce87cbbcf4\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"5349296a-0797-4e47-b5db-d9e4316e3124\"\n    }]\n  },\n    {\n    \"id\": \"4ea41e3f-e262-45e3-8d3b-ae7151738bd1\",\n    \"start\": \"2020-06-28T00:00:00Z\",\n    \"end\": \"2020-07-01T00:00:00Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"MON\",\n      \"hourOfDay\": 3,\n      \"minuteOfHour\": 0,\n      \"duration\": 60\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"f2743b3b-9186-48ce-b00a-b1ce87cbbcf4\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"5349296a-0797-4e47-b5db-d9e4316e3124\"\n    }]\n  }\n]} "],
          "type": "curl",
          "extra": {"description": "Split an existing interval into two parts."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SplitIntervalRequest",
        "rpcResponseName": "SplitIntervalResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Split Recurring Session",
      "methodName": "SplitRecurringSession",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "recurringSessionId",
        "splitTimes"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "recurringSessionId",
          "type": "string",
          "doc": "Recurring session ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "splitTimes",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of times where the session is to be split. Must not be in the past. Must not contain duplicate times.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "SplitRecurringSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SplitRecurringSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Splits a recurring session into two or more parts.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/{recurringSessionId}/split",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SplitRecurringSessionRequest",
        "rpcResponseName": "SplitRecurringSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Interval",
      "methodName": "UpdateInterval",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "scheduleId",
        "interval",
        "interval.id"
      ],
      "deprecated": true,
      "params":       [
                {
          "in": "PATH",
          "name": "interval.id",
          "type": "string",
          "doc": "The recurring interval identifier.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "interval",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringInterval",
          "doc": "Recurring Interval\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": "Whether to notify participants about the change, and an optional custom message.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateInterval",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateIntervalResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Updates an existing recurring interval.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\nDeprecated. Please use UpdateSession instead.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/bookings/v1/calendar/intervals/{interval.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateIntervalRequest",
        "rpcResponseName": "UpdateIntervalResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Participant",
      "methodName": "UpdateParticipant",
      "serviceName": "Schedules",
      "tag": "Participants",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "participant",
        "participant.id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "participant.id",
          "type": "string",
          "doc": "Participant ID. Currently represents the booking.id.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant to update, identified by the ID field.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fieldMask",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateParticipant",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateParticipantResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Updates participant details.\n The field values you specify replace the existing values. Fields that you don’t specify in the request remain unchanged.\nArray fields, if specified, overwrite the existing arrays; this discards any previous array elements.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/bookings/v1/calendar/participants/{participant.id}",
        "links": [],
        "examples": [        {
          "title": "Update Participant",
          "body": ["curl -X PATCH \\\n   'https://www.wixapis.com/bookings/v1/calendar/participants/8be22fc4-036a-4998-97ce-91a5dae2bd17' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"fieldMask\": {\n               \"paths\": [\n                 \"phone\"\n               ]\n             },\n             \"participant\": {\n               \"phone\": \"212-658-1492\"\n             }\n           }'"],
          "response": ["{\"participant\": {\n  \"id\": \"8be22fc4-036a-4998-97ce-91a5dae2bd17\",\n  \"name\": \"John Charles\",\n  \"phone\": \"212-658-1492\",\n  \"email\": \"john.charles@wix.com\",\n  \"partySize\": 1,\n  \"approvalStatus\": \"UNDEFINED\"\n}} "],
          "type": "curl",
          "extra": {"description": "Updates a participant's phone number."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateParticipantRequest",
        "rpcResponseName": "UpdateParticipantResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Schedule",
      "methodName": "Update",
      "serviceName": "Schedules",
      "tag": "Schedule",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["schedule.id"],
      "params":       [
                {
          "in": "PATH",
          "name": "schedule.id",
          "type": "string",
          "doc": "Schedule ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": " Schedule.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldMask",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "Field mask of fields to update.\n",
          "required": false,
          "fieldMask": "RPC"
        },
                {
          "in": "BODY",
          "name": "alignTimeExceptions",
          "type": "boolean",
          "doc": "Optional. Defaults to false. In case of updated intervals' start time, this field indicates whether to align those interval's time exceptions.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": "Deprecated, use participant_notification.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": "Whether to notify participants about the change, and an optional custom message.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "Update",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateScheduleResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdates a schedule.\nThis method supports patch semantics. The field values you specify replace the existing values.\nFields that you don’t specify in the request remain unchanged.\nArray fields, if specified, overwrite the existing arrays, and therefore discards any previous array elements.\nThe `availability.locations` array cannot be updated. Please use the `setAvailabilityLocations` endpoint instead.\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/bookings/v1/calendar/schedules/{schedule.id}",
        "links": [],
        "examples":         [
                    {
            "title": "Update Schedule's capacity",
            "body": ["curl -X PATCH \\\n   'https://www.wixapis.com/bookings/v1/calendar/schedules/4ecefd2f-eebc-412e-b45a-a9497b5815cf' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"fieldMask\": {\n               \"paths\": [\n                 \"capacity\"\n               ]\n             },\n             \"schedule\": {\n               \"capacity\": 25\n             }\n           }'"],
            "response": ["{\"schedule\": {\n  \"id\": \"4ecefd2f-eebc-412e-b45a-a9497b5815cf\",\n  \"scheduleOwnerId\": \"3d7dba43-d214-4149-8a53-a1a4a0c1e636\",\n  \"firstSessionStart\": \"2020-04-30T16:00:00Z\",\n  \"lastSessionEnd\": \"2021-04-29T19:00:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"a5fb1bcc-5f73-4ae5-b099-17f3772f6b93\",\n    \"start\": \"2020-04-28T21:00:00Z\",\n    \"end\": \"2021-04-29T20:59:59.999Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"THU\",\n      \"hourOfDay\": 10,\n      \"minuteOfHour\": 0,\n      \"duration\": 180\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n    }]\n  }],\n  \"title\": \"Intermediate Ski Class\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 25,\n  \"rate\":   {\n    \"labeledPriceOptions\": {\"general\":     {\n      \"amount\": \"180\",\n      \"currency\": \"USD\",\n      \"downPayAmount\": \"0\"\n    }},\n    \"priceText\": \"\"\n  },\n  \"availability\":   {\n    \"start\": \"2020-04-28T21:00:00Z\",\n    \"end\": \"2021-04-29T20:59:59.999Z\",\n    \"linkedSchedules\": []\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CREATED\",\n  \"created\": \"2020-04-29T18:30:58.668Z\",\n  \"updated\": \"2020-04-29T20:09:25.333Z\",\n  \"version\": 3,\n  \"inheritedFields\": []\n}} "],
            "type": "curl",
            "extra": {"description": "Patch update the capacity of a schedule."}
          },
                    {
            "title": "Update Interval",
            "body": ["curl -X PATCH \\\n   'https://www.wixapis.com/bookings/v1/calendar/schedules/4ecefd2f-eebc-412e-b45a-a9497b5815cf' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"fieldMask\": {\n               \"paths\": [\n                 \"intervals\"\n               ]\n             },\n             \"schedule\": {\n                \"intervals\": [\n                  {\n                    \"id\": \"a5fb1bcc-5f73-4ae5-b099-17f3772f6b93\",\n                    \"start\": \"2020-04-28T21:00:00Z\",\n                    \"end\": \"2021-04-29T21:00:00.000Z\",\n                    \"interval\": {\n                      \"daysOfWeek\": \"THU\",\n                      \"hourOfDay\": 9,\n                      \"minuteOfHour\": 30,\n                      \"duration\": 180\n                    },\n                    \"frequency\": {\n                      \"repetition\": 1\n                    },\n                    \"affectedSchedules\": [\n                      {\n                        \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n                        \"transparency\": \"BUSY\",\n                        \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n                      }\n                    ]\n                  }\n                ]\n             }\n           }'"],
            "response": ["{\"schedule\": {\n  \"id\": \"4ecefd2f-eebc-412e-b45a-a9497b5815cf\",\n  \"scheduleOwnerId\": \"3d7dba43-d214-4149-8a53-a1a4a0c1e636\",\n  \"firstSessionStart\": \"2020-04-30T16:30:00Z\",\n  \"lastSessionEnd\": \"2021-04-29T19:30:00Z\",\n  \"timeZone\": \"America/Denver\",\n  \"intervals\": [  {\n    \"id\": \"a5fb1bcc-5f73-4ae5-b099-17f3772f6b93\",\n    \"start\": \"2020-04-28T21:00:00Z\",\n    \"end\": \"2021-04-29T21:00:00Z\",\n    \"interval\":     {\n      \"daysOfWeek\": \"THU\",\n      \"hourOfDay\": 9,\n      \"minuteOfHour\": 30,\n      \"duration\": 180\n    },\n    \"frequency\": {\"repetition\": 1},\n    \"affectedSchedules\": [    {\n      \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n      \"transparency\": \"BUSY\",\n      \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n    }]\n  }],\n  \"title\": \"Intermediate Ski Class\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 25,\n  \"rate\":   {\n    \"labeledPriceOptions\": {\"general\":     {\n      \"amount\": \"180\",\n      \"currency\": \"USD\",\n      \"downPayAmount\": \"0\"\n    }},\n    \"priceText\": \"\"\n  },\n  \"availability\":   {\n    \"start\": \"2020-04-28T21:00:00Z\",\n    \"end\": \"2021-04-29T20:59:59.999Z\",\n    \"linkedSchedules\": []\n  },\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"status\": \"CREATED\",\n  \"created\": \"2020-04-29T18:30:58.668Z\",\n  \"updated\": \"2020-04-29T21:07:38.842Z\",\n  \"version\": 4,\n  \"inheritedFields\": []\n}} "],
            "type": "curl",
            "extra": {"description": "Updates an interval of a schedule."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateScheduleRequest",
        "rpcResponseName": "UpdateScheduleResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    },
        {
      "name": "Update Session",
      "methodName": "UpdateSession",
      "serviceName": "Schedules",
      "tag": "Session",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["session"],
      "params":       [
                {
          "in": "PATH",
          "name": "session.id",
          "type": "string",
          "doc": "Session ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": "Session.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "updated",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "Field mask of fields to update. Not supported for recurring sessions.\n",
          "required": false,
          "fieldMask": "RPC"
        },
                {
          "in": "BODY",
          "name": "deleted",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Deprecated. Use participant_notification.\n",
          "required": false,
          "deprecated": true
        },
                {
          "in": "BODY",
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change, and an optional custom message.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateSession",
          "statusCode": "200",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateSessionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "Updates a session.\n<!--ONLY:VELO\n The `updateSession()` function returns a Promise that resolves when the session has been updated.\n<!--END:ONLY:VELO-->\nThe property values specified replace the existing values. If a property is not specified in the request it will remain unchanged.\nArray properties, if specified, overwrite the existing array and all of its elements.\nThe `participants` array cannot be updated.\nUse the participantNotification property to send an email to the participants notifying them of the change.\n<!--ONLY:REST-->\n> **Permissions**\n> This endpoint requires the Manage Bookings permissions scope\n<!--END:ONLY:REST-->\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/bookings/v1/calendar/sessions/{session.id}",
        "links": [],
        "examples":         [
                    {
            "title": "Update Session's time",
            "body": ["curl -X PATCH \\\n   'https://www.wixapis.com/bookings/v1/calendar/sessions/2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"session\": {\n               \"scheduleId\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n               \"start\": {\n                 \"timestamp\": \"2020-04-16T11:30:00.000-07:00\"\n               },\n               \"end\": {\n                 \"timestamp\": \"2020-04-16T12:30:00.000-07:00\"\n               }\n             },\n             \"updated\": {\n               \"paths\": [\n                 \"start\",\n                 \"end\"\n               ]\n             }\n           }'"],
            "response": ["{\"session\": {\n  \"id\": \"2mmoW0vwKcSFyxtOfCdMr5jzNtbCs62lQ62AcLzRcPOZFywzW4Ei3WJC79mkE1rRreylI1FCRYfP3MB36naHxEou7NieV8Cfdbu1\",\n  \"scheduleId\": \"03d67e9c-5ba9-4e73-ad9e-7fddc57c6c4e\",\n  \"scheduleOwnerId\": \"9b33d0b6-bcd2-408b-ac9d-f164504a16e2\",\n  \"start\":   {\n    \"timestamp\": \"2020-04-16T18:30:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"end\":   {\n    \"timestamp\": \"2020-04-16T19:30:00Z\",\n    \"timeZone\": \"America/Denver\"\n  },\n  \"affectedSchedules\": [  {\n    \"scheduleId\": \"06be0abc-8a6a-4b7b-93c1-70d053ffd97f\",\n    \"transparency\": \"BUSY\",\n    \"scheduleOwnerId\": \"1d6a2248-34e7-4bbc-a6e3-bf0ce71f594f\"\n  }],\n  \"title\": \"Intermediate Ski Lesson (members only)\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 50,\n  \"rate\":   {\n    \"labeledPriceOptions\": {},\n    \"priceText\": \"Free\"\n  },\n  \"notes\": \"\",\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"inheritedFields\":   [\n    \"rate\",\n    \"location\",\n    \"tags\",\n    \"externalCalendarOverrides\",\n    \"title\",\n    \"capacity\"\n  ],\n  \"status\": \"CONFIRMED\",\n  \"type\": \"EVENT\"\n}} "],
            "type": "curl",
            "extra": {"description": "Update the start & end times of a session using the \"updated\" field mask."}
          },
                    {
            "title": "Update Session's rate",
            "body": ["curl -X PATCH \\\n   'https://www.wixapis.com/bookings/v1/calendar/sessions/4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wvEWUMNAZH8vXMuqHsMihevbMDMuhLKxENsmIea1cmn56zRkzBUrA7ZNnhBAoKl8NiRtsCWt7Fu8X4qH4ofiCFZUNh4CANJhYSwQhQiNbq2PY0w5lNMg3nwkUJUBMoPC70kqqxLmHmEv6Ix2JwBSQADECmeV0mb8EVNwibx0o6rQBVTdvFVU6k0uV6iU05d7loAf3ngM1uP7vUL5tgF2MCk4A8klV0a3f9s0jQ9GVfoD5bb7w0jZU3LHP4u7aVB8dKKenXLI4moIP' \\\n   -H \"Content-Type: application/json\" \\\n   -H 'Authorization: <AUTH>' \\\n   --data '{\n             \"session\": {\n               \"scheduleId\": \"0fc08892-1bec-4e79-a65f-6ddad171c3bf\"\n             },\n             \"deleted\": {\n               \"paths\": [\"rate\"]\n             }\n           }'"],
            "response": ["{\"session\": {\n  \"id\": \"4jOkD28c0FrsNUSgzQzuLRkA2t1rv1FLTwquKmJyctoZm00vdeKFMyH4n9cCLtmQe8wvEWUMNAZH8vXMuqHsMihevbMDMuhLKxENsmIea1cmn56zRkzBUrA7ZNnhBAoKl8NiRtsCWt7Fu8X4qH4ofiCFZUNh4CANJhYSwQhQiNbq2PY0w5lNMg3nwkUJUBMoPC70kqqxLmHmEv6Ix2JwBSQADECmeV0mb8EVNwibx0o6rQBVTdvFVU6k0uV6iU05d7loAf3ngM1uP7vUL5tgF2MCk4A8klV0a3f9s0jQ9GVfoD5bb7w0jZU3LHP4u7aVB8dKKenXLI4moIP\",\n  \"scheduleId\": \"0fc08892-1bec-4e79-a65f-6ddad171c3bf\",\n  \"scheduleOwnerId\": \"b12eda56-1123-43c5-922b-ad4efa1a8ce4\",\n  \"start\":   {\n    \"timestamp\": \"2020-05-11T16:00:00Z\",\n    \"localDateTime\":     {\n      \"year\": 2020,\n      \"monthOfYear\": 5,\n      \"dayOfMonth\": 11,\n      \"hourOfDay\": 10,\n      \"minutesOfHour\": 0\n    },\n    \"timeZone\": \"America/Denver\"\n  },\n  \"end\":   {\n    \"timestamp\": \"2020-05-11T20:00:00Z\",\n    \"localDateTime\":     {\n      \"year\": 2020,\n      \"monthOfYear\": 5,\n      \"dayOfMonth\": 11,\n      \"hourOfDay\": 14,\n      \"minutesOfHour\": 0\n    },\n    \"timeZone\": \"America/Denver\"\n  },\n  \"affectedSchedules\": [  {\n    \"scheduleId\": \"e07c6328-4495-4b80-b04d-c45f13215881\",\n    \"transparency\": \"BUSY\",\n    \"scheduleOwnerId\": \"76570209-101f-409b-af97-b445bdb63125\"\n  }],\n  \"title\": \"Advanced Ski Class\",\n  \"tags\": [\"GROUP\"],\n  \"location\": {\"locationType\": \"OWNER_BUSINESS\"},\n  \"capacity\": 30,\n  \"notes\": \"\",\n  \"totalNumberOfParticipants\": 0,\n  \"participants\": [],\n  \"inheritedFields\":   [\n    \"location\",\n    \"tags\",\n    \"affectedSchedules\",\n    \"end\",\n    \"externalCalendarOverrides\",\n    \"title\",\n    \"start\",\n    \"capacity\"\n  ],\n  \"status\": \"CONFIRMED\",\n  \"recurringIntervalId\": \"48f38ea1-f4f0-483d-a591-be8670214581\",\n  \"type\": \"EVENT\"\n}} "],
            "type": "curl",
            "extra": {"description": "Update a session's rate, result session inherits the rate from the schedule's rate."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateSessionRequest",
        "rpcResponseName": "UpdateSessionResponse"
      },
      "customLabels": [{"id": "maturity-beta"}]
    }
  ],
  "events": [  {
    "type": "_com_wix_bookings_schedules_api_v1_ScheduleNotification",
    "name": "Schedule Notification Webhook",
    "docs":     {
      "summary": "",
      "src": "https://github.com/wix-private/scheduler/tree/master/bookings-backend/schedules/schedules-api/src/main/proto/com/wix/bookings/schedules/api/v1/services/schedules.proto"
    },
    "topic": "bookings.schedules.notifications",
    "tag": "Schedule",
    "permissions": [],
    "customLabels": [{"id": "maturity-beta"}]
  }],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wix_bookings_common_api_v1_Price",
      "displayName": "Price Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "string",
          "doc": "Required payment amount.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": "Currency in which the amount is quoted.\n"
        },
                {
          "name": "downPayAmount",
          "type": "string",
          "doc": " Amount of a down payment or deposit as part of the transaction.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "labeledPriceOptionsMapEntry",
      "displayName": "labeled Price Options Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.Mapping between a named price option, for example, adult or child prices, and the price, currency, and down payment amount.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Price",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Rate",
      "displayName": "Rate Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "labeledPriceOptions",
          "type": "All APIs.Bookings - Schedules and Sessions.labeledPriceOptionsMapEntry",
          "doc": "Set of key-value pairs.Mapping between a named price option, for example, adult or child prices, and the price, currency, and down payment amount.\n"
        },
                {
          "name": "priceText",
          "type": "string",
          "doc": "Textual price information used when **Price Per Session** is set to **Custom Price** in the app's service details page.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Participant",
      "displayName": "Participant Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Participant ID. Currently represents the booking.id.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": "Contact ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": "Participant's name.\n"
        },
                {
          "name": "phone",
          "type": "string",
          "doc": "Participant's phone number. \n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": "Participant's email address. \n"
        },
                {
          "name": "partySize",
          "type": "integer",
          "doc": "Group or party size. The number of people attending. Defaults to 0. Maximum is 250.\n"
        },
                {
          "name": "approvalStatus",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant_ApprovalStatus",
          "doc": " Approval status for the participant. \n<!-- Commented out untill updateParticipant is exposed Generally the same status as the booking, unless updated using the `updateParticipant()` API. Defaults to `\"UNDEFINED\"`.-->\n<!--ONLY:VELO\n One of:\n - `\"PENDING\"` Pending business approval.\n - `\"APPROVED\"` Approved by the business.\n - `\"DECLINED\"` Declined by the business. \n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "inherited",
          "type": "boolean",
          "doc": "Whether the participant was inherited from the schedule, as opposed to being booked directly to the session.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Frequency",
      "displayName": "Frequency Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "repetition",
        "type": "integer",
        "doc": "The frequency of the recurrence in weeks. i.e. when this value is 4, the interval occurs every 4 weeks. Optional. The default is 1. minimum: 1, maximum: 52.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_LinkedSchedule",
      "displayName": "Linked Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n"
        },
                {
          "name": "transparency",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_LinkedSchedule_Transparency",
          "doc": "Sets this schedule's availability for the duration of the linked schedule's sessions.  Default is `\"BUSY\"`.\n<!--ONLY:REST-->\n If set to `\"BUSY\"`, this schedule cannot have any available slots during the linked schedule's sessions. \n If set to `\"FREE\"`, this schedule can have available slots during the linked schedule's sessions.  \n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\n One of:\n - `\"FREE\"` This schedule can have available slots during the linked schedule's sessions.\n - `\"BUSY\"` This schedule cannot have any available slots during the linked schedule's sessions.\n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "Owner ID, of the linked schedule.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Interval",
      "displayName": "Interval Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "daysOfWeek",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Interval_Day",
          "doc": "The day the interval accrue. Optional. The default is the day of the recurring interval's start time.\n"
        },
                {
          "name": "hourOfDay",
          "type": "integer",
          "doc": "The hour of the day the interval accrue. must be consistent with the Interval start time. Options. The default is 0. minimum: 0, maximum: 23.\n"
        },
                {
          "name": "minuteOfHour",
          "type": "integer",
          "doc": "The minutes of hour the interval accrue. must be consistent with the Interval end time. Options. The default is 0. minimum: 0, maximum: 59.\n"
        },
                {
          "name": "duration",
          "type": "integer",
          "doc": "The duration of the interval in minutes. Required. Part of the session end time calculation. minimum: 1, maximum: 86400.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringInterval",
      "displayName": "Recurring Interval Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "The recurring interval identifier.\n",
          "readOnly": true
        },
                {
          "name": "start",
          "type": "string",
          "doc": "The start time of the recurring interval. Required.\n"
        },
                {
          "name": "end",
          "type": "string",
          "doc": "The end time of the recurring interval. Optional. Empty value indicates that there is no end time.\n"
        },
                {
          "name": "interval",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Interval",
          "doc": "The interval rules. The day, hour and minutes the interval is recurring.\n"
        },
                {
          "name": "frequency",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Frequency",
          "doc": "The frequency of the interval. Optional. The default is frequency with the default repetition.\n"
        },
                {
          "name": "affectedSchedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_LinkedSchedule"]
          },
          "doc": "Specifies the list of linked schedules and the way this link affects the corresponding schedules' availability. Can be calculated from the schedule or overridden on the recurring interval.\n"
        },
                {
          "name": "intervalType",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringInterval_RecurringIntervalType",
          "doc": "The type of recurring interval.\n<!--ONLY:VELO\nOne of:\n - `\"UNDEFINED\"` The default value. Sessions for this interval will be of type EVENT.\n - `\"EVENT\"` A recurring interval of events.\n - `\"WORKING_HOURS\"` A recurring interval for availability.\n<!--END:ONLY:VELO-->\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ExternalCalendarInfo",
      "displayName": "External Calendar Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "calendarType",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_externalcalendar_spi_v1_CalendarTypeEnum_CalendarType",
        "doc": " The external calendar type (e.g. Google Calendar, iCal, etc).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ExternalCalendarOverrides",
      "displayName": "External Calendar Overrides Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "title",
          "type": "string",
          "doc": "Synced title of the external calendar event.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": "Synced description of the external calendar event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CalendarDateTime",
      "displayName": "Calendar Date Time Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "UTC date-time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)) format. If a timezone offset is specified, the time is converted to UTC. For example, if you specify  `new Date('2021-01-06T16:00:00.000-07:00')`, the stored value will be `\"2021-01-06T23:00:00.000Z\"`.\nRequired if `localDateTime` is not specified.\nIf `localDateTime` is specified, `timestamp` is calculated as `localDateTime`, using the business's timezone.\n"
        },
                {
          "name": "localDateTime",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_LocalDateTime",
          "doc": "An object containing the local date and time for the business's timezone.\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": "The time zone. Optional. derived from the schedule.timezone.\nIn case this field is associated with recurring session, this field is empty.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_LocalDateTime",
      "displayName": "Local Date Time Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "year",
          "type": "integer",
          "doc": " Year. 4-digit format.\n"
        },
                {
          "name": "monthOfYear",
          "type": "integer",
          "doc": " Month number, from 1-12.\n"
        },
                {
          "name": "dayOfMonth",
          "type": "integer",
          "doc": " Day of the month, from 1-31.\n"
        },
                {
          "name": "hourOfDay",
          "type": "integer",
          "doc": "Hour of the day in 24-hour format, from 0-23.\n"
        },
                {
          "name": "minutesOfHour",
          "type": "integer",
          "doc": "Minute, from 0-59.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ConferenceProvider",
      "displayName": "Conference Provider Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "providerId",
        "type": "string",
        "doc": "Conferencing provider ID\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CalendarConference",
      "displayName": "Calendar Conference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Wix Calendar conference ID.\n"
        },
                {
          "name": "externalId",
          "type": "string",
          "doc": "Conference meeting ID in the provider's conferencing system.\n"
        },
                {
          "name": "providerId",
          "type": "string",
          "doc": "Conference provider ID.\n"
        },
                {
          "name": "hostUrl",
          "type": "string",
          "doc": "URL used by the host to start the conference.\n"
        },
                {
          "name": "guestUrl",
          "type": "string",
          "doc": "URL used by a guest to join the conference.\n"
        },
                {
          "name": "password",
          "type": "string",
          "doc": "Password to join the conference.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": "Conference description.\n"
        },
                {
          "name": "conferenceType",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CalendarConference_ConferenceType",
          "doc": "Conference type.\n<!--ONLY:VELO\n One of:\n - `\"ONLINE_MEETING_PROVIDER\"` API-generated online meeting.\n - `\"CUSTOM\"` User-defined meeting.\n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "accountOwnerId",
          "type": "string",
          "doc": "Account owner id in vc service\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_BusinessSchedule",
      "displayName": "Business Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "\nBusiness schedule. Array of weekly recurring time periods when the business is open, or a service is available. Limited to 100 time periods.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "periods",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wixpress_siteproperties_api_v4_TimePeriod"]
          },
          "doc": "\nWeekly recurring time periods when the business is regularly open, or the service is available.\n"
        },
                {
          "name": "specialHourPeriod",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wixpress_siteproperties_api_v4_SpecialHourPeriod"]
          },
          "doc": " Exceptions to the business's regular hours. The business can be open or closed during the exception.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_TimePeriod",
      "displayName": "Time Period Object",
      "locations": [],
      "docs":       {
        "summary": "\nWeekly recurring time periods when the business is regularly open, or the service is available.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "openDay",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_siteproperties_api_v4_DayOfWeek",
          "doc": " Day of the week the period starts on.\n"
        },
                {
          "name": "openTime",
          "type": "string",
          "doc": "\nTime the period starts in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are 00:00-24:00, where 24:00 represents\nmidnight at the end of the specified day.\n"
        },
                {
          "name": "closeDay",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_siteproperties_api_v4_DayOfWeek",
          "doc": " Day of the week the period ends on.\n"
        },
                {
          "name": "closeTime",
          "type": "string",
          "doc": "\nTime the period ends in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are 00:00-24:00, where 24:00 represents\nmidnight at the end of the specified day. \n__Note:__ If `openDay` and `closeDay` specify the same day of the week `closeTime` must be later than `openTime`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_SpecialHourPeriod",
      "displayName": "Special Hour Period Object",
      "locations": [],
      "docs":       {
        "summary": " Exception to the business's regular hours. The business can be open or closed during the exception.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": "\nStart date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": "\nEnd date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).\n"
        },
                {
          "name": "isClosed",
          "type": "boolean",
          "doc": " Whether the business is closed, or the service is not available during the exception. Defaults to `true`.\n"
        },
                {
          "name": "comment",
          "type": "string",
          "doc": " Additional info about the exception. For example \"We close earlier on New Year's Eve.\".\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Location ID.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Location description.\n"
        },
                {
          "name": "default",
          "type": "boolean",
          "doc": "\nWhether this is the default location. There can only be one default location per site. The default location can't be archived.\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_locations_LocationStatus",
          "doc": "\nLocation status. Defaults to `ACTIVE`. \n__Note:__ [Archiving a location](https://dev.wix.com/api/rest/business-info/locations/archive-location) \ndoesn't affect the location's status. `INACTIVE` is currently not supported.\n"
        },
                {
          "name": "locationType",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_locations_LocationType",
          "doc": " Location type. **Note:** Currently not supported.\n"
        },
                {
          "name": "fax",
          "type": "string",
          "doc": " Fax number.\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": " Timezone in `America/New_York` format.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Email address.\n"
        },
                {
          "name": "phone",
          "type": "string",
          "doc": " Phone number.\n"
        },
                {
          "name": "address",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_locations_Address",
          "doc": " Address.\n"
        },
                {
          "name": "businessSchedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_siteproperties_api_v4_BusinessSchedule",
          "doc": "\nBusiness schedule. Array of weekly recurring time periods when the location is open for business. Limited to 100 time periods.\n\n__Note:__ Not supported by Wix Bookings.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": "\nRevision number, which increments by 1 each time the location is updated. \nTo prevent conflicting changes, the existing revision must be used when updating a location.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": "\nWhether the location is archived. Archived locations can't be updated. \n__Note:__ [Archiving a location](https://dev.wix.com/api/rest/business-info/locations/archive-location) \ndoesn't affect its `status`.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " 2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Postal or zip code.\n"
        },
                {
          "name": "streetAddress",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_locations_StreetAddress",
          "doc": " Street address. Includes street name, number, and apartment number in separate fields.\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " Full address of the location.\n"
        },
                {
          "name": "hint",
          "type": "string",
          "doc": " Extra information that helps finding the location.\n"
        },
                {
          "name": "geocode",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_locations_AddressLocation",
          "doc": " Geographic coordinates of location.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": " Street address. Includes street name, number, and apartment number in separate fields.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": "Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        },
                {
          "name": "apt",
          "type": "string",
          "doc": " Apartment number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": " Address Geolocation\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " Latitude of the location. Must be between -90 and 90.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Longitude of the location. Must be between -180 and 180.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": "Country code.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": "Subdivision. Usually state, region, prefecture or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Zip/postal code.\n"
        },
                {
          "name": "street",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_upstream_wix_common_Address_street",
          "doc": ""
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Free text providing more detailed address info. Usually contains Apt, Suite, and Floor.\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " A string containing the full address of this location.\n"
        },
                {
          "name": "hint",
          "type": "string",
          "doc": " Free text to help find the address.\n"
        },
                {
          "name": "geocode",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_upstream_wix_common_AddressLocation",
          "doc": " Coordinates of the physical address.\n"
        },
                {
          "name": "countryFullname",
          "type": "string",
          "doc": " Country full name.\n"
        },
                {
          "name": "subdivisions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_upstream_wix_common_Subdivision"]
          },
          "doc": " Multi-level subdivisions from top to bottom.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_upstream_wix_common_StreetAddress",
          "doc": " Street name, number and apartment number.\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line, usually street and number, as free text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_Subdivision",
      "displayName": "Subdivision Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Subdivision code. Usually state, region, prefecture or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Subdivision full name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        },
                {
          "name": "apt",
          "type": "string",
          "doc": " Apartment number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_upstream_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": "  Address latitude.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Address longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "locationType",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Location_LocationType",
          "doc": "Location type.\n One of:\n - `\"OWNER_BUSINESS\"` The business address as set in the site’s general settings.\n - `\"OWNER_CUSTOM\"` The address as set when creating the service.\n - `\"CUSTOM\"` The address set for the individual session.\n"
        },
                {
          "name": "address",
          "type": "string",
          "doc": "Free text address used when locationType is `OWNER_CUSTOM`.\n",
          "deprecated": true
        },
                {
          "name": "customAddress",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_upstream_wix_common_Address",
          "doc": "Custom address, used when locationType is `\"OWNER_CUSTOM\"`. Might be used when locationType is `\"CUSTOM\"` in case the owner sets a custom address for the session which is different from the default.\n"
        },
                {
          "name": "businessLocation",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wixpress_locations_Location",
          "doc": " Valid when `locationType` is `OWNER_BUSINESS`. Defaults to the business's location.\n \n`businessSchedule` is not supported by Wix Bookings\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Session_Version",
      "displayName": "Version Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleVersion",
          "type": "integer",
          "doc": "Schedule version number, updated each time the schedule is updated.\n"
        },
                {
          "name": "sessionVersion",
          "type": "integer",
          "doc": "Session version number, updated each time the session is updated.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Session",
      "displayName": "Session Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Session ID.\n",
          "readOnly": true
        },
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "ID of the schedule that the session belongs to. \n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "ID of the resource or service that the session's schedule belongs to.\n",
          "readOnly": true
        },
                {
          "name": "originalStart",
          "type": "string",
          "doc": "Original start date and time of the session in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)) format.\n"
        },
                {
          "name": "start",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CalendarDateTime",
          "doc": "An object specifying the start date and time of the session. If the session is a recurring session, `start` must contain a `localDateTime`.\n"
        },
                {
          "name": "end",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CalendarDateTime",
          "doc": "An object specifying the end date and time of the session. The `end` time must be after the `start` time and be same type as `start`.\nIf the session is a recurring session, `end` must contain a `localDateTime`.\n"
        },
                {
          "name": "affectedSchedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_LinkedSchedule"]
          },
          "doc": "An object specifying a list of schedules and the way each schedule's availability is affected by the session. For example, the schedule of an instructor is affected by sessions of the class that they instruct.\nThe array is inherited from the schedule and can be overridden even if the session is a recurring session.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": "Session title.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Tags for the session.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Location",
          "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.\n"
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": "Maximum number of participants that can be added to the session. Defaults to the schedule capacity.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "rate",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Rate",
          "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "timeReservedAfter",
          "type": "integer",
          "doc": "Time reserved after the session end time, derived from the schedule availability constraints and the time between slots. Read-only.\nIf the session is a recurring session, this field must be empty.\n"
        },
                {
          "name": "notes",
          "type": "string",
          "doc": "Additional information about the session.\nNotes are not supported for recurring sessions.\n"
        },
                {
          "name": "totalNumberOfParticipants",
          "type": "integer",
          "doc": "The number of participants booked for the session. Read-only.\nCalculated as the sum of the party sizes.\n",
          "readOnly": true
        },
                {
          "name": "participants",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant"]
          },
          "doc": "List of participants booked for the session.\nThe list includes participants who have registered for this specific session, and participants who have registered for a schedule that includes this session.\nIf the session is a recurring session, this field must be empty.\n"
        },
                {
          "name": "inheritedFields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of properties for which values were inherited from the schedule.\nThis does not include participants that were inherited from the schedule.\n",
          "readOnly": true
        },
                {
          "name": "externalCalendarOverrides",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ExternalCalendarOverrides",
          "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session_Status",
          "doc": "Session status.\n<!--ONLY:VELO\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` The session was deleted.\n<!--END:ONLY:VELO-->\n",
          "readOnly": true
        },
                {
          "name": "recurringIntervalId",
          "type": "string",
          "doc": "Recurring interval ID. Defined when a session will be a recurring session. read-only. Optional.\nFor exmaple, when creating a class service  with recurring sessions, you add a recurrence rule to create recurring sessions.\nThis field is omitted for single sessions or instances of recurring sessions.\nSpecified when the session was originally generated from a schedule recurring interval.\nDeprecated. Use `recurringSessionId`.\n",
          "readOnly": true,
          "deprecated": true
        },
                {
          "name": "recurringSessionId",
          "type": "string",
          "doc": "The ID of the recurring session if this session is an instance of a recurrence. Use this ID to update the recurrence and all of the instances.\n",
          "readOnly": true
        },
                {
          "name": "type",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SessionType",
          "doc": "Session type.\n<!--ONLY:VELO\n One of:\n - `\"EVENT\"` Reserved period of time on the schedule. For example, an appointment, class, course, or blocked time. Events are visible in the Dashboard in the Bookings app's [Booking Calendar](https://support.wix.com/en/article/wix-bookings-about-the-wix-bookings-calendar) page.\n - `\"WORKING_HOURS\"` Placeholder for available time on a resource’s schedule.\n<!--END:ONLY:VELO-->\n"
        },
                {
          "name": "calendarConference",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CalendarConference",
          "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.\n"
        },
                {
          "name": "recurrence",
          "type": "string",
          "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [iCalendar RFC 5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the `instanceOfRecurrence` property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Day of the week when the event should recur. Required.|One of: `MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, a session that repeats every second week on a Monday until January 7, 2022 at 8 AM:\n`\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z\"`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->\n"
        },
                {
          "name": "instanceOfRecurrence",
          "type": "string",
          "doc": "A string representing a recurrence rule (RRULE) if the session is an instance of a recurrence pattern.\nEmpty when the session is not an instance of a recurrence rule, or if the session defines a recurrence pattern, and `recurrence` is not empty.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ExtendedSession",
      "displayName": "Extended Session Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": ""
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ParticipantNotification",
      "displayName": "Participant Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Whether to notify participants about the change.\n"
        },
                {
          "name": "message",
          "type": "string",
          "doc": " A custom message to send to the participants.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AvailabilityPolicy",
      "displayName": "Availability Policy Object",
      "locations": [],
      "docs":       {
        "summary": "Availability policy applied to all site schedules.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "splitInterval",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SplitInterval",
        "doc": "Specify how to split the schedule slots in intervals of minutes.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SplitInterval",
      "displayName": "Split Interval Object",
      "locations": [],
      "docs":       {
        "summary": "The time between available slots' start times. For example, For 5 minute slots, 3:00, 3:05, 3:15 etc. For 1 hour slots, 3:00, 4:00, 5:00 etc.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sameAsDuration",
          "type": "boolean",
          "doc": "Whether the slot duration is used as the split interval value.\nIf `same_as_duration` is `true`, the `value_in_minutes` is the sum of the first duration in\n`schedule.availabilityConstraints.SlotDurations` field, and `schedule.availabilityConstraints.TimeBetweenSlots` field.\n"
        },
                {
          "name": "valueInMinutes",
          "type": "integer",
          "doc": "Number of minutes between available slots' start times when `same_as_duration` is `false`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Availability",
      "displayName": "Availability Object",
      "locations": [],
      "docs":       {
        "summary": "<!-- Needs updating when recurrence has been tested \nSchedule's availability calculation is executed by the schedule's available intervals and this additional information.\nSchedule's available intervals are recurring intervals (defined in the schedule) minus sessions that has no more spots for bookings (including time between_slots), or schedule's sessions with open spots for bookings.-->\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "start",
          "type": "string",
          "doc": "Date and time the schedule starts to be available for booking.\n"
        },
                {
          "name": "end",
          "type": "string",
          "doc": "Date and time the schedule stops being available for booking. No value indicates no end time.\n"
        },
                {
          "name": "linkedSchedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_LinkedSchedule"]
          },
          "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints.\n"
        },
                {
          "name": "constraints",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_AvailabilityConstraints",
          "doc": "Constraints for calculating the schedule's availability.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AvailabilityConstraints",
      "displayName": "Availability Constraints Object",
      "locations": [],
      "docs":       {
        "summary": "Describes how to calculate the specific slots that are available for booking.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "slotDurations",
          "type":           {
            "name": "array",
            "typeParams": ["integer"]
          },
          "doc": "A list of duration options for slots, in minutes. Minimum value for a duration is 1.\nThe availability calculation generates slots with these durations, where there is no conflict with existing sessions or other availability constraints.\n"
        },
                {
          "name": "timeBetweenSlots",
          "type": "integer",
          "doc": "The number of minutes between the `end` of one slot, and the `start` of the next. \nMinimum value is 0, maximum value is 120.\n"
        },
                {
          "name": "splitInterval",
          "type": "integer",
          "doc": "Specify how to split the slots in intervals of minutes.\nThis value indicates the time between available slots' start time. e.g., from 5 minute slots (3:00, 3:05, 3:15) and 1 hour slots (3:00, 4:00, 5:00).\nOptional. The default is the first duration in slot_durations field.\nDeprecated. Use the `split_slots_interval.value_in_minutes`.\n",
          "deprecated": true
        },
                {
          "name": "slotsSplitInterval",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SplitInterval",
          "doc": "An object defining the time between available slots' start times.  For example, a slot with slots_split_interval=5 can start every 5 minutes. The default is the slot duration.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrationData_StaffData",
      "displayName": "Staff Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "resourceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "syncRequestEmail",
          "type": "string",
          "doc": ""
        },
                {
          "name": "refreshToken",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrationData",
      "displayName": "Migration Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "businessId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "staffs",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_MigrationData_StaffData"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Schedule_Version",
      "displayName": "Version Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleVersion",
          "type": "integer",
          "doc": "Schedule version number, updated each time the schedule is updated.\n"
        },
                {
          "name": "participantsVersion",
          "type": "integer",
          "doc": "Participants version number, updated each time the schedule participants are updated.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Schedule",
      "displayName": "Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Schedule ID.\n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "ID of the schedule's owner entity. This may be a resource ID or a service ID.\n"
        },
                {
          "name": "timeZone",
          "type": "string",
          "doc": ""
        },
                {
          "name": "intervals",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringInterval"]
          },
          "doc": "Specifies the intervals for the sessions calculation. Optional. e.g. when creating class service you can add\npattern for recurring intervals, these intervals can be returned as schedule's sessions or available slots if\nthere are no other availability calculation constraints and the capacity is bigger then the current total number of sessions' participants.\n",
          "deprecated": true
        },
                {
          "name": "title",
          "type": "string",
          "doc": "Default title for the schedule's sessions. Maximum length: 6000 characters.\n"
        },
                {
          "name": "tags",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Tags for grouping schedules. These tags are the default tags for the schedule's sessions.\nThe Wix Bookings app uses the following predefined tags to set schedule type: `\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE\"`. Once the schedule type is set using these tags, you cannot update it. In addition to the app's tags, you can create and update your own tags.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Location",
          "doc": "Default location for the schedule's sessions.\n"
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": "Maximum number of participants that can be added to the schedule's sessions. Default is 1.\n"
        },
                {
          "name": "rate",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Rate",
          "doc": "Price options offered when booking this schedule's slots. Default is no rate.\n"
        },
                {
          "name": "availability",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Availability",
          "doc": "An object describing how to calculate the schedule's availability.\nAn empty object indicates that the schedule is not available for booking.\n"
        },
                {
          "name": "totalNumberOfParticipants",
          "type": "integer",
          "doc": "Number of participants registered to sessions in this schedule, calculated as the sum of the party sizes.\n",
          "readOnly": true
        },
                {
          "name": "participants",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant"]
          },
          "doc": "Participants currently registered to sessions in this schedule.\nParticipants who are registered in the schedule are automatically registered to any session that is created for the schedule.\n",
          "readOnly": true
        },
                {
          "name": "externalCalendarOverrides",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ExternalCalendarOverrides",
          "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\n"
        },
                {
          "name": "status",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule_ScheduleStatus",
          "doc": "Schedule status.\n",
          "readOnly": true
        },
                {
          "name": "created",
          "type": "string",
          "doc": "Schedule creation date.\n",
          "readOnly": true
        },
                {
          "name": "updated",
          "type": "string",
          "doc": "Schedule last update date.\n",
          "readOnly": true
        },
                {
          "name": "version",
          "type": "integer",
          "doc": "Schedule version number, updated each time the schedule is updated.\n",
          "readOnly": true
        },
                {
          "name": "inheritedFields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Fields which were inherited from the Business Info page under Settings in the Dashboard.\n",
          "readOnly": true
        },
                {
          "name": "conferenceProvider",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ConferenceProvider",
          "doc": "Conferencing Provider. A schedule with a conferencing provider will use to provider information to create a conference on the provider's system when a session is created on the schedule or on one of its linked schedule's.\n",
          "deprecated": true
        },
                {
          "name": "calendarConference",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CalendarConference",
          "doc": "A conference created for the schedule. This is used when a participant is added to a schedule.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleNotification",
      "displayName": "Schedule Notification Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples":         [
                    {
            "title": "Schedule canceled notification",
            "body": ["{\n  \"scheduleCancelled\" : {\n    \"schedule\" : {\n      \"id\" : \"bdd2aa46-c308-47d4-a56e-c9e6c907b48a\",\n      \"scheduleOwnerId\" : \"f3e53da4-4734-42c5-8ac4-0c29cce2b8c4\",\n      \"timeZone\" : \"America/Denver\",\n      \"title\" : \"Personal Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_BUSINESS\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"19.99\",\n            \"currency\" : \"USD\",\n            \"downPayAmount\" : \"0\"\n          }\n        }\n      },\n      \"availability\" : {\n        \"start\" : \"2020-05-07T08:21:44.984Z\",\n        \"linkedSchedules\" : [ {\n          \"scheduleId\" : \"2c6969f5-270b-4405-a6fb-9910213c5ad6\",\n          \"transparency\" : \"BUSY\",\n          \"scheduleOwnerId\" : \"76570209-101f-409b-af97-b445bdb63125\"\n        } ],\n        \"constraints\" : {\n          \"slotDurations\" : [ 60 ],\n          \"timeBetweenSlots\" : 10,\n          \"splitInterval\" : 30,\n          \"slotsSplitInterval\" : {\n            \"sameAsDuration\" : false,\n            \"valueInMinutes\" : 30\n          }\n        }\n      },\n      \"status\" : \"CANCELLED\",\n      \"created\" : \"2020-05-07T08:21:45.225Z\",\n      \"updated\" : \"2020-05-07T11:22:11.434Z\",\n      \"inheritedFields\" : [ \"timeZone\" ]\n    },\n    \"participantNotification\" : { }\n  },\n  \"preserveFutureSessionsWithParticipants\" : true,\n  \"siteProperties\" : {\n    \"timeZone\" : \"America/Denver\"\n  },\n  \"instanceId\" : \"4ee81752-7216-465e-8a9b-986be392c112\"\n} "],
            "type": "json",
            "extra": {"description": "Schedule canceled."}
          },
                    {
            "title": "Schedule updated notification",
            "body": ["{\n  \"scheduleUpdated\" : {\n    \"oldSchedule\" : {\n      \"id\" : \"38602479-2c33-4125-9d4e-68e9928cb772\",\n      \"scheduleOwnerId\" : \"0c77969c-6133-4ce6-903d-c3a957efbd65\",\n      \"timeZone\" : \"America/Denver\",\n      \"title\" : \"Personal Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_CUSTOM\",\n        \"address\" : \"Online\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"70\",\n            \"currency\" : \"USD\",\n            \"downPayAmount\" : \"0\"\n          }\n        },\n        \"priceText\" : \"\"\n      },\n      \"availability\" : {\n        \"start\" : \"2020-05-14T10:42:22.682Z\",\n        \"linkedSchedules\" : [ {\n          \"scheduleId\" : \"163507aa-6b75-4725-bac3-a61d6a8d2df2\",\n          \"transparency\" : \"BUSY\",\n          \"scheduleOwnerId\" : \"e13a90ac-c4b1-4fbd-969f-7c8fc0310363\"\n        } ],\n        \"constraints\" : {\n          \"slotDurations\" : [ 60 ],\n          \"timeBetweenSlots\" : 25,\n          \"splitInterval\" : 30,\n          \"slotsSplitInterval\" : {\n            \"sameAsDuration\" : false,\n            \"valueInMinutes\" : 30\n          }\n        }\n      },\n      \"status\" : \"CREATED\",\n      \"created\" : \"2019-08-15T14:27:10.427Z\",\n      \"updated\" : \"2020-05-07T10:42:22.692Z\",\n      \"version\" : 70,\n      \"inheritedFields\" : [ \"timeZone\" ]\n    },\n    \"newSchedule\" : {\n      \"id\" : \"38602479-2c33-4125-9d4e-68e9928cb772\",\n      \"scheduleOwnerId\" : \"0c77969c-6133-4ce6-903d-c3a957efbd65\",\n      \"timeZone\" : \"America/Denver\",\n      \"title\" : \"Personal Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_CUSTOM\",\n        \"address\" : \"Online\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"35\",\n            \"currency\" : \"GBP\",\n            \"downPayAmount\" : \"0\"\n          }\n        },\n        \"priceText\" : \"\"\n      },\n      \"availability\" : {\n        \"start\" : \"2020-05-14T10:42:22.682Z\",\n        \"linkedSchedules\" : [ {\n          \"scheduleId\" : \"163507aa-6b75-4725-bac3-a61d6a8d2df2\",\n          \"transparency\" : \"BUSY\",\n          \"scheduleOwnerId\" : \"e13a90ac-c4b1-4fbd-969f-7c8fc0310363\"\n        } ],\n        \"constraints\" : {\n          \"slotDurations\" : [ 45 ],\n          \"splitInterval\" : 30,\n          \"slotsSplitInterval\" : {\n            \"sameAsDuration\" : false,\n            \"valueInMinutes\" : 30\n          }\n        }\n      },\n      \"status\" : \"CREATED\",\n      \"created\" : \"2019-08-15T14:27:10.427Z\",\n      \"updated\" : \"2020-05-07T11:22:11.707Z\",\n      \"version\" : 71,\n      \"inheritedFields\" : [ \"timeZone\" ]\n    },\n    \"participantNotification\" : { }\n  },\n  \"siteProperties\" : {\n    \"timeZone\" : \"America/Denver\"\n  },\n  \"instanceId\" : \"b252b8f7-5c6c-49a2-b7ca-4a4fac265b19\"\n} "],
            "type": "json",
            "extra": {"description": "Schedule updated."}
          },
                    {
            "title": "Schedule created notification",
            "body": ["{\n  \"scheduleCreated\" : {\n    \"schedule\" : {\n      \"id\" : \"52bf9706-fd68-46e2-ac3a-ae65a73e1a46\",\n      \"scheduleOwnerId\" : \"7079b035-4595-43d2-b27d-812486988305\",\n      \"timeZone\" : \"America/Denver\",\n      \"title\" : \"Personal Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_BUSINESS\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"19.99\",\n            \"currency\" : \"USD\",\n            \"downPayAmount\" : \"0\"\n          }\n        }\n      },\n      \"availability\" : {\n        \"start\" : \"2020-05-07T11:22:12.975Z\",\n        \"linkedSchedules\" : [ {\n          \"scheduleId\" : \"d0e5e016-c75d-4cfe-8d54-cb011e5d0fc2\",\n          \"transparency\" : \"BUSY\",\n          \"scheduleOwnerId\" : \"76570209-101f-409b-af97-b445bdb63125\"\n        } ],\n        \"constraints\" : {\n          \"slotDurations\" : [ 60 ],\n          \"timeBetweenSlots\" : 10,\n          \"splitInterval\" : 30,\n          \"slotsSplitInterval\" : {\n            \"sameAsDuration\" : false,\n            \"valueInMinutes\" : 30\n          }\n        }\n      },\n      \"status\" : \"CREATED\",\n      \"created\" : \"2020-05-07T11:22:13.229Z\",\n      \"updated\" : \"2020-05-07T11:22:13.229Z\",\n      \"inheritedFields\" : [ \"timeZone\" ]\n    }\n  },\n  \"siteProperties\" : {\n    \"timeZone\" : \"America/Denver\"\n  },\n  \"instanceId\" : \"a6dad175-775e-4cf8-bde5-3e301417d0e2\"\n} "],
            "type": "json",
            "extra": {"description": "Schedule created."}
          },
                    {
            "title": "Session created notification",
            "body": ["{\n  \"sessionCreated\" : {\n    \"session\" : {\n      \"id\" : \"2mmoW0vwKcSFyxtOfCdMqSJK2eW98xv0kpaMiJvQY5NTWCKdfpqdLzMtj5rQkGhAuy86W9wi0qn8dQLzaz0OjjvhiR5OqFMRCFKP\",\n      \"scheduleId\" : \"f0fb99b7-2c9d-4c7d-93a9-5fcf0d768400\",\n      \"scheduleOwnerId\" : \"13b85d2e-f109-42f2-badf-d43b87b23652\",\n      \"start\" : {\n        \"timestamp\" : \"2020-05-08T16:00:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"end\" : {\n        \"timestamp\" : \"2020-05-08T17:00:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"affectedSchedules\" : [ {\n        \"scheduleId\" : \"b478a53b-9a16-4d5d-b598-670c532083a9\",\n        \"transparency\" : \"BUSY\",\n        \"scheduleOwnerId\" : \"abd3a8e0-1730-4cba-a81c-985f25eab873\"\n      } ],\n      \"title\" : \"Personal Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_BUSINESS\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"750\",\n            \"currency\" : \"USD\",\n            \"downPayAmount\" : \"0\"\n          }\n        }\n      },\n      \"timeReservedAfter\" : 0,\n      \"totalNumberOfParticipants\" : 1,\n      \"participants\" : [ {\n        \"id\" : \"5d26dfe2-4eaf-41d9-907c-91e72b9a04d4\",\n        \"contactId\" : \"197c855f-bc4d-4f25-a1fd-ebab4131e3e4\",\n        \"name\" : \"Jerry M.\",\n        \"phone\" : \"+1(523)5236631\",\n        \"email\" : \"jerry@wix.com\",\n        \"partySize\" : 1\n      } ],\n      \"inheritedFields\" : [ \"capacity\" ],\n      \"externalCalendarOverrides\" : {\n        \"title\" : \"Personal Ski Lesson for Jerry M. +1(523)5236631\",\n        \"description\" : \"Client's phone number: +1(523)5236631\\nClient's email: jerry@wix.com\\n\"\n      },\n      \"status\" : \"CONFIRMED\",\n      \"type\" : \"EVENT\"\n    }\n  },\n  \"siteProperties\" : {\n    \"timeZone\" : \"America/Denver\"\n  },\n  \"instanceId\" : \"fbe6af80-1230-4a2c-aa19-723d9a0bc39b\"\n} "],
            "type": "json",
            "extra": {"description": "Session created."}
          },
                    {
            "title": "Session updaed notification",
            "body": ["{\n  \"sessionUpdated\" : {\n    \"oldSession\" : {\n      \"id\" : \"2mmoW0vwKcSFyxtOfCdMqSJK2eW98xv0kpaMiJvQY5NTWCKdfpqdLzMtj5rQkGhAuy86W9wi0qn8dQLzaz0OjjvhiR5OqFMRCFKP\",\n      \"scheduleId\" : \"f0fb99b7-2c9d-4c7d-93a9-5fcf0d768400\",\n      \"scheduleOwnerId\" : \"13b85d2e-f109-42f2-badf-d43b87b23652\",\n      \"start\" : {\n        \"timestamp\" : \"2020-05-08T16:00:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"end\" : {\n        \"timestamp\" : \"2020-05-08T17:00:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"affectedSchedules\" : [ {\n        \"scheduleId\" : \"b478a53b-9a16-4d5d-b598-670c532083a9\",\n        \"transparency\" : \"BUSY\",\n        \"scheduleOwnerId\" : \"abd3a8e0-1730-4cba-a81c-985f25eab873\"\n      } ],\n      \"title\" : \"Personal Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_BUSINESS\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"750\",\n            \"currency\" : \"USD\",\n            \"downPayAmount\" : \"0\"\n          }\n        }\n      },\n      \"timeReservedAfter\" : 0,\n      \"totalNumberOfParticipants\" : 1,\n      \"participants\" : [ {\n        \"id\" : \"5d26dfe2-4eaf-41d9-907c-91e72b9a04d4\",\n        \"contactId\" : \"197c855f-bc4d-4f25-a1fd-ebab4131e3e4\",\n        \"name\" : \"Jerry M.\",\n        \"phone\" : \"+1(523)5236631\",\n        \"email\" : \"jerry@wix.com\",\n        \"partySize\" : 1\n      } ],\n      \"inheritedFields\" : [ \"capacity\" ],\n      \"externalCalendarOverrides\" : {\n        \"title\" : \"Personal Ski Lesson for Jerry M. +1(523)5236631\",\n        \"description\" : \"Client's phone number: +1(523)5236631\\nClient's email: jerry@wix.com\\n\"\n      },\n      \"status\" : \"CONFIRMED\",\n      \"type\" : \"EVENT\"\n    },\n    \"newSession\" : {\n      \"id\" : \"2mmoW0vwKcSFyxtOfCdMqSJK2eW98xv0kpaMiJvQY5NTWCKdfpqdLzMtj5rQkGhAuy86W9wi0qn8dQLzaz0OjjvhiR5OqFMRCFKP\",\n      \"scheduleId\" : \"f0fb99b7-2c9d-4c7d-93a9-5fcf0d768400\",\n      \"scheduleOwnerId\" : \"13b85d2e-f109-42f2-badf-d43b87b23652\",\n      \"start\" : {\n        \"timestamp\" : \"2020-05-08T16:30:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"end\" : {\n        \"timestamp\" : \"2020-05-08T17:30:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"affectedSchedules\" : [ {\n        \"scheduleId\" : \"b478a53b-9a16-4d5d-b598-670c532083a9\",\n        \"transparency\" : \"BUSY\",\n        \"scheduleOwnerId\" : \"abd3a8e0-1730-4cba-a81c-985f25eab873\"\n      } ],\n      \"title\" : \"Personal Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_BUSINESS\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"750\",\n            \"currency\" : \"USD\",\n            \"downPayAmount\" : \"0\"\n          }\n        }\n      },\n      \"timeReservedAfter\" : 0,\n      \"totalNumberOfParticipants\" : 1,\n      \"participants\" : [ {\n        \"id\" : \"5d26dfe2-4eaf-41d9-907c-91e72b9a04d4\",\n        \"contactId\" : \"197c855f-bc4d-4f25-a1fd-ebab4131e3e4\",\n        \"name\" : \"Jerry M.\",\n        \"phone\" : \"+1(523)5236631\",\n        \"email\" : \"jerry@wix.com\",\n        \"partySize\" : 1\n      } ],\n      \"inheritedFields\" : [ \"capacity\" ],\n      \"externalCalendarOverrides\" : {\n        \"title\" : \"Personal Ski Lesson for Jerry M. +1(523)5236631\",\n        \"description\" : \"Client's phone number: +1(523)5236631\\nClient's email: jerry@wix.com\\n\"\n      },\n      \"status\" : \"CONFIRMED\",\n      \"type\" : \"EVENT\"\n    },\n    \"participantNotification\" : { }\n  },\n  \"siteProperties\" : {\n    \"timeZone\" : \"Europe/Denver\"\n  },\n  \"instanceId\" : \"00483aed-ba99-495f-95ba-d8c5a98c9f2a\"\n} "],
            "type": "json",
            "extra": {"description": "Session updaed."}
          },
                    {
            "title": "Session canceled notification",
            "body": ["{\n  \"sessionCancelled\" : {\n    \"session\" : {\n      \"id\" : \"2mmoW0vwKcSFyxtOfCdKELCUPV1Xs5s5C7hgULg74TYcSBQsF0ZhD9HJTaBVQTpOlgwh8bgmU4pqTFA5TYstqVEFxsHzo02zhspJ\",\n      \"scheduleId\" : \"911bc45d-fb0f-4e17-b95b-d6b62af55c4c\",\n      \"scheduleOwnerId\" : \"f7f068af-1416-4763-865c-32d55306e6b8\",\n      \"start\" : {\n        \"timestamp\" : \"2020-05-04T07:00:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"end\" : {\n        \"timestamp\" : \"2020-05-04T07:30:00Z\",\n        \"timeZone\" : \"America/Denver\"\n      },\n      \"affectedSchedules\" : [ {\n        \"scheduleId\" : \"9bd65194-080d-4409-a49b-6a3fc9e7905c\",\n        \"transparency\" : \"BUSY\",\n        \"scheduleOwnerId\" : \"61a292ac-475e-4217-8d48-2cdde68a3e09\"\n      } ],\n      \"title\" : \"Private Ski Lesson\",\n      \"tags\" : [ \"INDIVIDUAL\" ],\n      \"location\" : {\n        \"locationType\" : \"OWNER_BUSINESS\"\n      },\n      \"capacity\" : 1,\n      \"rate\" : {\n        \"labeledPriceOptions\" : {\n          \"general\" : {\n            \"amount\" : \"200\",\n            \"currency\" : \"USD\",\n            \"downPayAmount\" : \"0\"\n          }\n        }\n      },\n      \"timeReservedAfter\" : 0,\n      \"totalNumberOfParticipants\" : 1,\n      \"participants\" : [ {\n        \"id\" : \"5d26dfe2-4eaf-41d9-907c-91e72b9a04d4\",\n        \"contactId\" : \"197c855f-bc4d-4f25-a1fd-ebab4131e3e4\",\n        \"name\" : \"Jerry M.\",\n        \"phone\" : \"+1(523)5236631\",\n        \"email\" : \"jerry@wix.com\",\n        \"partySize\" : 1\n      } ],\n      \"externalCalendarOverrides\" : {\n        \"title\" : \"Personal Ski Lesson for Jerry M. +1(523)5236631\",\n        \"description\" : \"Client's phone number: +1(523)5236631\\nClient's email: jerry@wix.com\\n\"\n      },\n      \"status\" : \"CANCELLED\",\n      \"type\" : \"EVENT\"\n    },\n    \"participantNotification\" : { }\n  },\n  \"siteProperties\" : {\n    \"timeZone\" : \"America/Denver\"\n  },\n  \"instanceId\" : \"7c8f32ee-a92b-4b6c-8366-e35e2757e20e\"\n} "],
            "type": "json",
            "extra": {"description": "Session canceled."}
          },
                    {
            "title": "Availability policy updated notification",
            "body": ["{\n  \"availabilityPolicyUpdated\" : {\n    \"availabilityPolicy\" : {\n      \"splitInterval\" : {\n        \"sameAsDuration\" : false,\n        \"valueInMinutes\" : 30\n      }\n    }\n  },\n  \"instanceId\" : \"40be5cd1-bfaf-45f6-9077-b25a711f91dc\"\n} "],
            "type": "json",
            "extra": {"description": "Availability policy updated."}
          }
        ]
      },
      "members":       [
                {
          "name": "event",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ScheduleNotification_event",
          "doc": ""
        },
                {
          "name": "preserveFutureSessionsWithParticipants",
          "type": "boolean",
          "doc": ""
        },
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Whether to notify participants about changed sessions. deprecated, use participant_notification\n",
          "deprecated": true
        },
                {
          "name": "siteProperties",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SitePropertiesOnScheduleCreation",
          "doc": "site properties. Optional. Given in create schedule notification.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleNotification_event",
      "displayName": "event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleCreated",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ScheduleCreated",
          "doc": ""
        },
                {
          "name": "scheduleUpdated",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ScheduleUpdated",
          "doc": ""
        },
                {
          "name": "scheduleCancelled",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ScheduleCancelled",
          "doc": ""
        },
                {
          "name": "sessionCreated",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SessionCreated",
          "doc": ""
        },
                {
          "name": "sessionUpdated",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SessionUpdated",
          "doc": ""
        },
                {
          "name": "sessionCancelled",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SessionCancelled",
          "doc": ""
        },
                {
          "name": "availabilityPolicyUpdated",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_AvailabilityPolicyUpdated",
          "doc": ""
        },
                {
          "name": "intervalSplit",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_IntervalSplit",
          "doc": "",
          "deprecated": true
        },
                {
          "name": "recurringSessionSplit",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringSessionSplit",
          "doc": ""
        },
                {
          "name": "scheduleUnassignedFromUser",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ScheduleUnassignedFromUser",
          "doc": " Inspect `schedule.scheduleOwnerUserId` on `scheduleUpdated` instead.\n",
          "deprecated": true
        },
                {
          "name": "multipleSessionsCreated",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_MultipleSessionsCreated",
          "doc": "supported only for schedule migration apis.\n"
        },
                {
          "name": "migrationEvent",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_MigrationEvent",
          "doc": "supported only for schedule migration apis.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleCreated",
      "displayName": "Schedule Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedule",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleUpdated",
      "displayName": "Schedule Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldSchedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": "The old schedule before the update.\n"
        },
                {
          "name": "newSchedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": "The new schedule after the update.\n"
        },
                {
          "name": "recurringSessions",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringSessionsUpdated",
          "doc": "Recurring sessions updated event. If this field is given, the reason for the schedule updated event was\nupdating at least one of the given schedule's recurring sessions.\nThis event is triggered by create/update/delete recurring session apis.\n"
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether this notification was created as a result of an anonymization request, such as GDPR.\n An anonymized participant will have the following details:\n name = \"deleted\"\n phone = \"deleted\"\n email = \"deleted@deleted.com\"\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleCancelled",
      "displayName": "Schedule Cancelled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": ""
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        },
                {
          "name": "oldSchedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionCreated",
      "displayName": "Session Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "session",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionUpdated",
      "displayName": "Session Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldSession",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": ""
        },
                {
          "name": "newSession",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": ""
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether this notification was created as a result of an anonymization request, such as GDPR.\n An anonymized participant will have the following details:\n name = \"deleted\"\n phone = \"deleted\"\n email = \"deleted@deleted.com\"\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionCancelled",
      "displayName": "Session Cancelled Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": ""
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change and an optional custom message\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AvailabilityPolicyUpdated",
      "displayName": "Availability Policy Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "availabilityPolicy",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_AvailabilityPolicy",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_IntervalSplit",
      "displayName": "Interval Split Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "intervals",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringInterval"]
          },
          "doc": ""
        },
                {
          "name": "newScheduleVersion",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "oldScheduleVersion",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "deprecated": true
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringSessionSplit",
      "displayName": "Recurring Session Split Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "recurringSessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": ""
        },
                {
          "name": "newScheduleVersion",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "oldScheduleVersion",
          "type": "integer",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MultipleSessionsCreated",
      "displayName": "Multiple Sessions Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedulesWithSessions",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ScheduleWithSessions"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrationEvent",
      "displayName": "Migration Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "migrationData",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_MigrationData",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleWithSessions",
      "displayName": "Schedule With Sessions Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": ""
        },
                {
          "name": "siteProperties",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SitePropertiesOnScheduleCreation",
          "doc": ""
        },
                {
          "name": "sessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SitePropertiesOnScheduleCreation",
      "displayName": "Site Properties On Schedule Creation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "timeZone",
        "type": "string",
        "doc": "The global time zone value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "deprecated": true
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringSessionsUpdated",
      "displayName": "Recurring Sessions Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldRecurringSessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": "Old schedule's recurring session list.\n"
        },
                {
          "name": "newRecurringSessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": "New schedule's recurring session list.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ScheduleUnassignedFromUser",
      "displayName": "Schedule Unassigned From User Object",
      "locations": [],
      "docs":       {
        "summary": " Schedule unassigned from user.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "userId",
          "type": "string",
          "doc": " The Wix user id.\n"
        },
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": " The schedule that was unassigned from the user.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "recurringSessionsDataMapEntry",
      "displayName": "recurring Sessions Data Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. since intervals are deprecated and are managed as recurring sessions,\n the data which appears on recurring sessions is missing on intervals and we re-fetch it via this field.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringSessionsData",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ExtendedSchedule",
      "displayName": "Extended Schedule Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": ""
        },
                {
          "name": "siteProperties",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SitePropertiesOnScheduleCreation",
          "doc": ""
        },
                {
          "name": "cutoffDate",
          "type": "string",
          "doc": ""
        },
                {
          "name": "recurringSessionsData",
          "type": "All APIs.Bookings - Schedules and Sessions.recurringSessionsDataMapEntry",
          "doc": "Set of key-value pairs. since intervals are deprecated and are managed as recurring sessions,\n the data which appears on recurring sessions is missing on intervals and we re-fetch it via this field.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringSessionsData",
      "displayName": "Recurring Sessions Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "location",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Location",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Error",
      "displayName": "Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "message",
          "type": "string",
          "doc": ""
        },
                {
          "name": "code",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value",
      "displayName": "Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "kind",
        "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_Value_kind",
        "doc": " The kind of value.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Value_kind",
      "displayName": "kind Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "nullValue",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_NullValue",
          "doc": " Represents a null value.\n"
        },
                {
          "name": "numberValue",
          "type": "number",
          "doc": " Represents a double value.\n"
        },
                {
          "name": "stringValue",
          "type": "string",
          "doc": " Represents a string value.\n"
        },
                {
          "name": "boolValue",
          "type": "boolean",
          "doc": " Represents a boolean value.\n"
        },
                {
          "name": "structValue",
          "type": "struct",
          "doc": " Represents a structured value.\n"
        },
                {
          "name": "listValue",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._google_protobuf_Value"]
          },
          "doc": " Represents a repeated `Value`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Query",
      "displayName": "Query Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_Value",
          "doc": "Filter object in the following format:   \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "paging",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:  \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CreateScheduleRequest",
      "displayName": "Create Schedule Request Object",
      "locations": [],
      "docs":       {
        "summary": "schedule\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedule",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": "Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_BatchCreateScheduleRequest",
      "displayName": "Batch Create Schedule Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedules",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule"]
        },
        "doc": "Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_BatchCreateScheduleResponse",
      "displayName": "Batch Create Schedule Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedules",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule"]
        },
        "doc": "Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CreateScheduleResponse",
      "displayName": "Create Schedule Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": "Schedule.\n"
        },
                {
          "name": "errors",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Error"]
          },
          "doc": "",
          "deprecated": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateScheduleRequest",
      "displayName": "Update Schedule Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": " Schedule.\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "Field mask of fields to update.\n",
          "fieldMask": "RPC"
        },
                {
          "name": "alignTimeExceptions",
          "type": "boolean",
          "doc": "Optional. Defaults to false. In case of updated intervals' start time, this field indicates whether to align those interval's time exceptions.\n"
        },
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": "Deprecated, use participant_notification.\n",
          "deprecated": true
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": "Whether to notify participants about the change, and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateScheduleResponse",
      "displayName": "Update Schedule Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedule",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": "Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_BatchCancelScheduleRequest",
      "displayName": "Batch Cancel Schedule Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "requests",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CancelScheduleRequest"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_BatchCancelScheduleResponse",
      "displayName": "Batch Cancel Schedule Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedules",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule"]
        },
        "doc": " Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_BatchRequest",
      "displayName": "Batch Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createRequests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CreateScheduleRequest"]
          },
          "doc": "Create multiple schedules.\n"
        },
                {
          "name": "updateRequests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateScheduleRequest"]
          },
          "doc": "Update multiple schedules. Not Supported yet.\n"
        },
                {
          "name": "cancelRequests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CancelScheduleRequest"]
          },
          "doc": "Cancel multiple schedules.\nThe given schedules move to a CANCELLED status which means that all sessions up until\nthe cancellation point in time are kept, while removing all following sessions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_BatchResponse",
      "displayName": "Batch Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "created",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule"]
          },
          "doc": "Created schedules.\n"
        },
                {
          "name": "updated",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule"]
          },
          "doc": "Updated schedules.\n"
        },
                {
          "name": "cancelled",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule"]
          },
          "doc": "Cancelled schedules.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CancelScheduleRequest",
      "displayName": "Cancel Schedule Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n"
        },
                {
          "name": "from",
          "type": "string",
          "doc": "Time to cancel the sessions from. Optional. If this field is empty, all of this schedule's sessions will be canceled.\n"
        },
                {
          "name": "preserveFutureSessionsWithParticipants",
          "type": "boolean",
          "doc": "Whether to preserve future sessions with reservations. Defaults to false.\n"
        },
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Deprecated, use participant_notification\n",
          "deprecated": true
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change, and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CancelScheduleResponse",
      "displayName": "Cancel Schedule Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedule",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": "Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_GetScheduleRequest",
      "displayName": "Get Schedule Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": "Schedule ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_GetScheduleResponse",
      "displayName": "Get Schedule Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedule",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": " Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListSchedulesRequest",
      "displayName": "List Schedules Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "List by schedule IDs.\n"
        },
                {
          "name": "scheduleOwnerIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "List by schedule owner IDs.\n"
        },
                {
          "name": "dontIncludeScheduleParticipants",
          "type": "boolean",
          "doc": "Whether to return a list of the schedule's participants.\n"
        },
                {
          "name": "userIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List schedules assigned to the given Wix user ids.\n Requires the Manage Personal Calendar or the Manage Business Calendar scope.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListSchedulesResponse",
      "displayName": "List Schedules Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedules",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule"]
        },
        "doc": " Schedule.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CreateSessionRequest",
      "displayName": "Create Session Request Object",
      "locations": [],
      "docs":       {
        "summary": "Schedule's session\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": "Session.\n"
        },
                {
          "name": "deleted",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CreateSessionResponse",
      "displayName": "Create Session Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "session",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
        "doc": "Session.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateSessionRequest",
      "displayName": "Update Session Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": "Session.\n"
        },
                {
          "name": "updated",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "Field mask of fields to update. Not supported for recurring sessions.\n",
          "fieldMask": "RPC"
        },
                {
          "name": "deleted",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.\n"
        },
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Deprecated. Use participant_notification.\n",
          "deprecated": true
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change, and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateSessionResponse",
      "displayName": "Update Session Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "session",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
        "doc": "Session.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_DeleteSessionRequest",
      "displayName": "Delete Session Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Session ID. Required.\n"
        },
                {
          "name": "notifyParticipants",
          "type": "boolean",
          "doc": " Deprecated, use participant_notification\n",
          "deprecated": true
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": " Whether to notify participants about the change, and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_DeleteSessionResponse",
      "displayName": "Delete Session Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": "Session ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionBatchRequest",
      "displayName": "Session Batch Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessionsToCreate",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CreateSessionRequest"]
          },
          "doc": ""
        },
                {
          "name": "sessionsToUpdate",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateSessionRequest"]
          },
          "doc": ""
        },
                {
          "name": "sessionsToDelete",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_DeleteSessionRequest"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionBatchResponse",
      "displayName": "Session Batch Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessionsCreated",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_CreateSessionResponse"]
          },
          "doc": ""
        },
                {
          "name": "sessionsUpdated",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_UpdateSessionResponse"]
          },
          "doc": ""
        },
                {
          "name": "sessionsDeleted",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_DeleteSessionResponse"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_GetSessionRequest",
      "displayName": "Get Session Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": "Session ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_GetSessionResponse",
      "displayName": "Get Session Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "session",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
        "doc": "Session.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListSessionsRequest",
      "displayName": "List Sessions Request Object",
      "locations": [],
      "docs":       {
        "summary": "session\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ids",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Session ID.\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": "Field mask of fields to return. Currently only supports the \"scheduleOwnerId\" field.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListSessionsResponse",
      "displayName": "List Sessions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "sessions",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
        },
        "doc": "Session.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_QuerySessionsRequest",
      "displayName": "Query Sessions Request Object",
      "locations": [],
      "docs":       {
        "summary": "recurring sessions\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Bookings - Schedules and Sessions._wix_common_Query",
        "doc": "Query\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_QuerySessionsResponse",
      "displayName": "Query Sessions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": "Session.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AddParticipantRequest",
      "displayName": "Add Participant Request Object",
      "locations": [],
      "docs":       {
        "summary": "Participants\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID. Required.\n"
        },
                {
          "name": "sessionId",
          "type": "string",
          "doc": "Optional. If this field is given, the participant will be added to this specific session.\nNot supported for recurring sessions.\n",
          "deprecated": true
        },
                {
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AddParticipantResponse",
      "displayName": "Add Participant Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n",
          "deprecated": true
        },
                {
          "name": "sessionId",
          "type": "string",
          "doc": "Session ID. Optional.\n",
          "deprecated": true
        },
                {
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant.\n"
        },
                {
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": "Session.\n",
          "deprecated": true
        },
                {
          "name": "schedule",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
          "doc": "Schedule.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AddParticipantToSessionRequest",
      "displayName": "Add Participant To Session Request Object",
      "locations": [],
      "docs":       {
        "summary": "Participants\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessionId",
          "type": "string",
          "doc": "Session ID. Required.\n"
        },
                {
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AddParticipantToSessionResponse",
      "displayName": "Add Participant To Session Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant.\n"
        },
                {
          "name": "session",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session",
          "doc": "Session.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateParticipantRequest",
      "displayName": "Update Participant Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "participant",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
          "doc": "Participant to update, identified by the ID field.\n"
        },
                {
          "name": "fieldMask",
          "type": "All APIs.Bookings - Schedules and Sessions._google_protobuf_FieldMask",
          "doc": " Field mask of fields to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateParticipantResponse",
      "displayName": "Update Participant Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "participant",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Participant",
        "doc": "Participant.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RemoveParticipantRequest",
      "displayName": "Remove Participant Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": "Participant ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RemoveParticipantResponse",
      "displayName": "Remove Participant Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": "Participant ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SplitIntervalRequest",
      "displayName": "Split Interval Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n"
        },
                {
          "name": "intervalId",
          "type": "string",
          "doc": "Interval ID.\n"
        },
                {
          "name": "splitTimes",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of times where the interval is to be split. Must not be in the past. Must not contain duplicate times.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SplitIntervalResponse",
      "displayName": "Split Interval Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "intervals",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringInterval"]
        },
        "doc": "A list of intervals where the first is the modified original interval followed by other newly created intervals.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SplitRecurringSessionRequest",
      "displayName": "Split Recurring Session Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "recurringSessionId",
          "type": "string",
          "doc": "Recurring session ID.\n"
        },
                {
          "name": "splitTimes",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "A list of times where the session is to be split. Must not be in the past. Must not contain duplicate times.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SplitRecurringSessionResponse",
      "displayName": "Split Recurring Session Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "recurringSessions",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
        },
        "doc": "A list of recurring sessions where the first is the modified original session followed by other newly created sessions.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateIntervalRequest",
      "displayName": "Update Interval Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "Schedule ID.\n"
        },
                {
          "name": "interval",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_RecurringInterval",
          "doc": "Recurring Interval\n"
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": "Whether to notify participants about the change, and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UpdateIntervalResponse",
      "displayName": "Update Interval Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AssignWiXUserAsScheduleOwnerRequest",
      "displayName": "Assign Wi X User As Schedule Owner Request Object",
      "locations": [],
      "docs":       {
        "summary": "schedule owner\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "uid",
          "type": "string",
          "doc": "The wix user id. Required.\n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "Schedule owner id assigned to the user id. e.g, in case of schedule of a staff member, can be staff member id.\n"
        },
                {
          "name": "msId",
          "type": "string",
          "doc": "The meta site id related to this schedule owner id. Required.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_AssignWiXUserAsScheduleOwnerResponse",
      "displayName": "Assign Wi X User As Schedule Owner Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "uid",
          "type": "string",
          "doc": "The wix user id related to this schedule owner id. Required.\n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "Schedule owner id. e.g, in case of schedule of a staff member, can be staff member id.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UnAssignWiXUserFromScheduleOwnerRequest",
      "displayName": "Un Assign Wi X User From Schedule Owner Request Object",
      "locations": [],
      "docs":       {
        "summary": "schedule owner\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "uid",
          "type": "string",
          "doc": "The wix user id. Required.\n"
        },
                {
          "name": "scheduleOwnerId",
          "type": "string",
          "doc": "Schedule owner id. e.g, in case of schedule of a staff member, can be staff member id.\n"
        },
                {
          "name": "msId",
          "type": "string",
          "doc": "The meta site id related to this schedule owner id. Required.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_UnAssignWiXUserFromScheduleOwnerResponse",
      "displayName": "Un Assign Wi X User From Schedule Owner Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "scheduleOwnerId",
        "type": "string",
        "doc": "Schedule owner id. e.g, in case of schedule of a staff member, can be staff member id.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrateRequest",
      "displayName": "Migrate Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "csvList",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrateResponse",
      "displayName": "Migrate Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_MigrateResponseEntry"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_MigrateResponseEntry",
      "displayName": "Migrate Response Entry Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "key",
          "type": "string",
          "doc": ""
        },
                {
          "name": "errorMessage",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SetAvailabilityLocationsRequest_RemovedLocationSessionsAction",
      "displayName": "Removed Location Sessions Action Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "action",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SetAvailabilityLocationsRequest_RemovedLocationSessionsAction_Action",
          "doc": "The action to perform on sessions currently set to a removed location.\n"
        },
                {
          "name": "newLocation",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Location",
          "doc": "The location to move sessions currently set to a removed location, used when `action` is `MOVE_TO_LOCATION`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SetAvailabilityLocationsRequest",
      "displayName": "Set Availability Locations Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleId",
          "type": "string",
          "doc": "The ID of the schedule. Required.\n"
        },
                {
          "name": "locations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_common_api_v1_Location"]
          },
          "doc": "The schedule's availability locations to set. Required.\nThe locations you specify replace the existing `schedule.availability.locations`.\n"
        },
                {
          "name": "removedLocationSessionsAction",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_SetAvailabilityLocationsRequest_RemovedLocationSessionsAction",
          "doc": "The action to perform on sessions currently set to a removed location.\n"
        },
                {
          "name": "participantNotification",
          "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ParticipantNotification",
          "doc": "Whether to notify participants about the change, and an optional custom message.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SetAvailabilityLocationsResponse",
      "displayName": "Set Availability Locations Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "schedule",
        "type": "All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Schedule",
        "doc": "The updated schedule\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_QuerySchedulesRequest",
      "displayName": "Query Schedules Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Bookings - Schedules and Sessions._wix_common_QueryV2",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_QuerySchedulesResponse",
      "displayName": "Query Schedules Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ExtendedSchedule"]
          },
          "doc": ""
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_QuerySchedulesHistoryRequest",
      "displayName": "Query Schedules History Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Bookings - Schedules and Sessions._wix_common_QueryV2",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_QuerySchedulesHistoryResponse",
      "displayName": "Query Schedules History Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "schedules",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ExtendedSchedule"]
          },
          "doc": ""
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListPersistedSessionsRequest",
      "displayName": "List Persisted Sessions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "cursor",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_CursorPaging",
          "doc": ""
        },
                {
          "name": "minimumSessionStartDate",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListPersistedSessionsResponse",
      "displayName": "List Persisted Sessions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_ExtendedSession"]
          },
          "doc": ""
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListConcreteEventSessionsRequest",
      "displayName": "List Concrete Event Sessions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fromDate",
          "type": "string",
          "doc": " The starting point of the request range. All returned sessions start time is equals or after fromDate. Required.\n"
        },
                {
          "name": "toDate",
          "type": "string",
          "doc": " The ending point of the request range. All returned sessions start time is before toDate. Required.\n"
        },
                {
          "name": "scheduleId",
          "type": "string",
          "doc": " Optional.\n"
        },
                {
          "name": "recurringSessionId",
          "type": "string",
          "doc": " Optional.\n"
        },
                {
          "name": "scheduleVersion",
          "type": "integer",
          "doc": " Schedule version according to which sessions data should be resolved.\n Relevant when scheduleId or recurringSessionId are given.\n"
        },
                {
          "name": "minScheduleParticipantsVersion",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_CursorPaging",
          "doc": "",
          "deprecated": true
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListConcreteEventSessionsResponse",
      "displayName": "List Concrete Event Sessions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": ""
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListConcreteWorkingHourSessionsRequest",
      "displayName": "List Concrete Working Hour Sessions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fromDate",
          "type": "string",
          "doc": " The starting point of the request range. All returned sessions start time is equals or after fromDate. Required.\n"
        },
                {
          "name": "toDate",
          "type": "string",
          "doc": " The ending point of the request range. All returned sessions start time is before toDate. Required.\n"
        },
                {
          "name": "scheduleIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Whether to filter sessions by schedule ids. Optional.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_CursorPaging",
          "doc": " Cursor paging. Optional.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_ListConcreteWorkingHourSessionsResponse",
      "displayName": "List Concrete Working Hour Sessions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "sessions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Bookings - Schedules and Sessions._com_wix_bookings_schedules_api_v1_Session"]
          },
          "doc": " The working hours sessions.\n"
        },
                {
          "name": "pagingMetadata",
          "type": "All APIs.Bookings - Schedules and Sessions._wix_common_PagingMetadataV2",
          "doc": " The paging metadata.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_TypeEnum_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> FIXED <\/code><\/li><li><code> CUSTOM <\/code><\/li><li><code> VARIED <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "FIXED",
        "CUSTOM",
        "VARIED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Participant_ApprovalStatus",
      "displayName": "Approval Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED - Default.\n <\/code><\/li><li><code> PENDING - Pending business approval.\n <\/code><\/li><li><code> APPROVED - Approved by the business.\n <\/code><\/li><li><code> DECLINED - Declined by the business. \n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "PENDING",
        "APPROVED",
        "DECLINED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_LinkedSchedule_Transparency",
      "displayName": "Transparency Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> FREE - The schedule can have available slots during the session.\n <\/code><\/li><li><code> BUSY - The schedule cannot have available slots during the session. Default value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "FREE",
        "BUSY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Interval_Day",
      "displayName": "Day Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED - Undefined.\n <\/code><\/li><li><code> MON - Monday.\n <\/code><\/li><li><code> TUE - Tuesday.\n <\/code><\/li><li><code> WED - Wednesday.\n <\/code><\/li><li><code> THU - Thursday.\n <\/code><\/li><li><code> FRI - Friday.\n <\/code><\/li><li><code> SAT - Saturday.\n <\/code><\/li><li><code> SUN - Sunday.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_RecurringInterval_RecurringIntervalType",
      "displayName": "Recurring Interval Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED - The default value. Sessions for this interval will be of type EVENT.\n <\/code><\/li><li><code> EVENT - A recurring interval of events\n <\/code><\/li><li><code> TIME_AVAILABILITY - Deprecated\n <\/code><\/li><li><code> AVAILABILITY - A recurring interval for availability\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "EVENT",
        "TIME_AVAILABILITY",
        "AVAILABILITY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_externalcalendar_spi_v1_CalendarTypeEnum_CalendarType",
      "displayName": "Calendar Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> GOOGLE <\/code><\/li><li><code> I_CAL <\/code><\/li><li><code> OUTLOOK <\/code><\/li><li><code> OFFICE_365 <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "GOOGLE",
        "I_CAL",
        "OUTLOOK",
        "OFFICE_365"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SessionType",
      "displayName": "Session Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> EVENT - The session creates an event on the calendar for the owner of the schedule that the session belongs to.\nDefault type.\n <\/code><\/li><li><code> WORKING_HOURS - The session represents a resource's available working hours.\n <\/code><\/li><li><code> TIME_AVAILABILITY - Deprecated. please use WORKING_HOURS\n <\/code><\/li><li><code> AVAILABILITY - Deprecated. The session represents a resource's available hours. please use WORKING_HOURS\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "EVENT",
        "WORKING_HOURS",
        "TIME_AVAILABILITY",
        "AVAILABILITY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_CalendarConference_ConferenceType",
      "displayName": "Conference Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> ONLINE_MEETING_PROVIDER - API-generated online meeting.\n <\/code><\/li><li><code> CUSTOM - User-defined meeting.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "ONLINE_MEETING_PROVIDER",
        "CUSTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_siteproperties_api_v4_DayOfWeek",
      "displayName": "Day Of Week Object",
      "locations": [],
      "docs":       {
        "summary": " Enumerates the days of the week.\n \n Possible values are: <li><code> MONDAY <\/code><\/li><li><code> TUESDAY <\/code><\/li><li><code> WEDNESDAY <\/code><\/li><li><code> THURSDAY <\/code><\/li><li><code> FRIDAY <\/code><\/li><li><code> SATURDAY <\/code><\/li><li><code> SUNDAY <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_LocationStatus",
      "displayName": "Location Status Object",
      "locations": [],
      "docs":       {
        "summary": " For future use\n \n Possible values are: <li><code> ACTIVE <\/code><\/li><li><code> INACTIVE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ACTIVE",
        "INACTIVE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_locations_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " For future use\n \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> BRANCH <\/code><\/li><li><code> OFFICES <\/code><\/li><li><code> RECEPTION <\/code><\/li><li><code> HEADQUARTERS <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "BRANCH",
        "OFFICES",
        "RECEPTION",
        "HEADQUARTERS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_common_api_v1_Location_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> OWNER_BUSINESS <\/code><\/li><li><code> OWNER_CUSTOM <\/code><\/li><li><code> CUSTOM <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "OWNER_BUSINESS",
        "OWNER_CUSTOM",
        "CUSTOM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Session_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> CONFIRMED - The session is confirmed. Default status.\n <\/code><\/li><li><code> CANCELLED - The session is cancelled.\nA cancelled session can be the cancellation of a recurring session that should no longer be displayed or a deleted single session.\nThe ListSessions returns cancelled sessions only if 'includeDelete' flag is set to true.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "CONFIRMED",
        "CANCELLED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_Schedule_ScheduleStatus",
      "displayName": "Schedule Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> CREATED -  The default value when the schedule is created.\n <\/code><\/li><li><code> CANCELLED -  The schedule has been canceled.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "CREATED",
        "CANCELLED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_NullValue",
      "displayName": "Null Value Object",
      "locations": [],
      "docs":       {
        "summary": " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["NULL_VALUE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_bookings_schedules_api_v1_SetAvailabilityLocationsRequest_RemovedLocationSessionsAction_Action",
      "displayName": "Action Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNDEFINED <\/code><\/li><li><code> KEEP_AT_CURRENT_LOCATION - Keep future sessions at their current location. This is the default.\nNote: The location will be set directly on the session. i.e, if the location is currently inherited from the schedule, the inheritance will be overridden.\n <\/code><\/li><li><code> MOVE_TO_LOCATION - Move future sessions to a new location.\nThe new location must be specified in the availability locations to set ('SetAvailabilityLocationsRequest.locations').\n <\/code><\/li><li><code> DELETE - Delete future sessions.\nCurrently not supported.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNDEFINED",
        "KEEP_AT_CURRENT_LOCATION",
        "MOVE_TO_LOCATION",
        "DELETE"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.bookings.schedule-server"}
}