{
  "name": "Ratings",
  "client_id": "https://github.com/wix-private/app-market/tree/master/critique/ratings#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Short description of Ratings",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Ratings",
    "entity": "_com_wixpress_critique_ratings_Rating"
  }],
  "relatedGuides":   [
        {
      "path": "../guides/ratings/docs/README.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/ratings/docs/USE_CASE.md",
      "name": "Use Cases"
    }
  ],
  "operations":   [
        {
      "name": "Create Rating",
      "methodName": "CreateRating",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "group",
        "entityId",
        "attributeId",
        "value"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "group",
          "type": "string",
          "doc": " Can be used to identify type of entity which is being rated\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "entityId",
          "type": "string",
          "doc": " Indication of what entity owns given current Rating\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "attributeId",
          "type": "string",
          "doc": " Attribute id which is defined by definition\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "value",
          "type": "integer",
          "doc": " Numeric value of rating\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ratingOwner",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_IdentificationData",
          "doc": " Set rating's owner explicitly. Ignored when visitor/member calls API.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "relatedEntityIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Optional field to indicated to what entities this rating relates to\n Gives ability to query ratings which relates to entity\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateRating",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_CreateRatingResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nCreates a new rating, according to the specified rating definition.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/ratings/v1/ratings",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST https://www.wixapis.com/ratings/v1/ratings \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>' \\\n  -d '{\n    \"group\": \"stores\",\n    \"entityId\": \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n    \"attributeId\": \"quality\",\n    \"value\": 1,\n    \"ratingOwner\": {\n      \"memberId\": \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"\n    },\n    \"relatedEntityIds\": [\"5839c1cc-7b79-4b46-85bd-f3066db498e8\"]\n  }'"],
          "response": ["{\n  \"id\": \"076716da-57ee-4821-a244-8c17c89df863\",\n  \"revision\": \"1\",\n  \"namespace\": \"reviews\",\n  \"group\": \"stores\",\n  \"entityId\": \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n  \"attributeId\": \"quality\",\n  \"value\": 1,\n  \"ratingOwner\": {\"memberId\": \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"},\n  \"createdDate\": \"2022-05-30T15:15:10.000Z\",\n  \"updatedDate\": \"2022-05-30T15:15:10.000Z\",\n  \"relatedEntityIds\": [\"5839c1cc-7b79-4b46-85bd-f3066db498e8\"]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateRatingRequest",
        "rpcResponseName": "CreateRatingResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Delete Rating",
      "methodName": "DeleteRating",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "id",
        "revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " ID of the rating to delete.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " The revision number of the rating.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteRating",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_DeleteRatingResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nDelete a rating.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/ratings/v1/ratings/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE https://www.wixapis.com/ratings/v1/ratings/076716da-57ee-4821-a244-8c17c89df863?revision=1 \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteRatingRequest",
        "rpcResponseName": "DeleteRatingResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Entity Summary",
      "methodName": "GetEntitySummary",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "group",
        "entityId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "group",
          "type": "string",
          "doc": " Ratings group whose summary is to be returned.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "entityId",
          "type": "string",
          "doc": " Entity ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "attributeIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of attributes to get summary of.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetEntitySummary",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_GetEntitySummaryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nReturn Summary for requested entity in the specified group.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/ratings/v1/ratings/groups/{group}/entities/{entityId}/summary",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET https://www.wixapis.com/ratings/v1/ratings/groups/stores/entities/f24a88ec-2659-4fe6-aa68-c6da82d693e0/summary?attributeIds[]=quality&attributeIds[]=fit \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>'"],
          "response": ["{\n  \"group\": \"stores\",\n  \"entityId\": \"f24a88ec-2659-4fe6-aa68-c6da82d693e0\",\n  \"attribute_summaries\":   [\n        {\n      \"attributeId\": \"quality\",\n      \"total\": 18,\n      \"average\": 5.1666,\n      \"valueBreakdown\":       [\n                {\n          \"value\": 1,\n          \"total\": 2\n        },\n                {\n          \"value\": 2,\n          \"total\": 3\n        },\n                {\n          \"value\": 3,\n          \"total\": 1\n        },\n                {\n          \"value\": 4,\n          \"total\": 8\n        },\n                {\n          \"value\": 5,\n          \"total\": 10\n        }\n      ]\n    },\n        {\n      \"attributeId\": \"fit\",\n      \"total\": 18,\n      \"average\": 5.1666,\n      \"valueBreakdown\":       [\n                {\n          \"value\": 1,\n          \"total\": 2\n        },\n                {\n          \"value\": 2,\n          \"total\": 3\n        },\n                {\n          \"value\": 3,\n          \"total\": 1\n        },\n                {\n          \"value\": 4,\n          \"total\": 8\n        },\n                {\n          \"value\": 5,\n          \"total\": 10\n        }\n      ]\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetEntitySummaryRequest",
        "rpcResponseName": "GetEntitySummaryResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Group Summary",
      "methodName": "GetGroupSummary",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["group"],
      "params":       [
                {
          "in": "PATH",
          "name": "group",
          "type": "string",
          "doc": " Ratings group whose summary is to be returned.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "attributeIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " list of attributes to get summary of.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetGroupSummary",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_GetGroupSummaryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nReturns the ratings summary for the requested group.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/ratings/v1/ratings/groups/{group}/summary",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET https://www.wixapis.com/ratings/v1/ratings/groups/stores/summary?attributeIds[]=quality&attributeIds[]=fit \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>'"],
          "response": ["{\n  \"group\": \"stores\",\n  \"attribute_summaries\":   [\n        {\n      \"attributeId\": \"quality\",\n      \"total\": 18,\n      \"average\": 5.1666,\n      \"valueBreakdown\":       [\n                {\n          \"value\": 1,\n          \"total\": 2\n        },\n                {\n          \"value\": 2,\n          \"total\": 3\n        },\n                {\n          \"value\": 3,\n          \"total\": 1\n        },\n                {\n          \"value\": 4,\n          \"total\": 8\n        },\n                {\n          \"value\": 5,\n          \"total\": 10\n        }\n      ]\n    },\n        {\n      \"attributeId\": \"fit\",\n      \"total\": 18,\n      \"average\": 5.3333,\n      \"valueBreakdown\":       [\n                {\n          \"value\": 1,\n          \"total\": 3\n        },\n                {\n          \"value\": 2,\n          \"total\": 2\n        },\n                {\n          \"value\": 3,\n          \"total\": 1\n        },\n                {\n          \"value\": 4,\n          \"total\": 14\n        },\n                {\n          \"value\": 5,\n          \"total\": 6\n        }\n      ]\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetGroupSummaryRequest",
        "rpcResponseName": "GetGroupSummaryResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Rating",
      "methodName": "GetRating",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " ID of the rating to retrieve.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetRating",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_GetRatingResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nGet a rating by its ID.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/ratings/v1/ratings/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET https://www.wixapis.com/ratings/v1/ratings/076716da-57ee-4821-a244-8c17c89df863 \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>'"],
          "response": ["{\n  \"id\": \"076716da-57ee-4821-a244-8c17c89df863\",\n  \"revision\": \"1\",\n  \"namespace\": \"reviews\",\n  \"group\": \"stores\",\n  \"entityId\": \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n  \"attributeId\": \"overall\",\n  \"value\": 1,\n  \"ratingOwner\": {\"memberId\": \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"},\n  \"createdDate\": \"2022-05-30T15:15:10.000Z\",\n  \"updatedDate\": \"2022-05-30T15:15:10.000Z\",\n  \"relatedEntityIds\": [\"5839c1cc-7b79-4b46-85bd-f3066db498e8\"]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetRatingRequest",
        "rpcResponseName": "GetRatingResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Attribute Averages By Entity",
      "methodName": "ListAttributeAveragesByEntity",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["group"],
      "params":       [
                {
          "in": "PATH",
          "name": "group",
          "type": "string",
          "doc": " Entities group\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "entityIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Entities ids\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "attributeId",
          "type": "string",
          "doc": " Attribute id for which average will be computed.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListAttributeAveragesByEntity",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_ListAttributeAveragesByEntityResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nReturn average attribute rating for multiple entities.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/ratings/v1/ratings/groups/{group}/attributes/average",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST https://www.wixapis.com/ratings/v1/ratings/groups/stores/attributes/average \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>' \\\n  -d '{\n    \"entityIds\":[\n      \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n      \"2ad4660d-1767-475d-b45a-ecfda29f9043\"\n    ],\n    \"attributeId\":\"overall\"\n  }'"],
          "response": ["{\n  \"group\": \"stores\",\n  \"entityAverages\":   [\n        {\n      \"entityId\": \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n      \"total\": 5,\n      \"average\": 3.5\n    },\n        {\n      \"entityId\": \"2ad4660d-1767-475d-b45a-ecfda29f9043\",\n      \"total\": 5,\n      \"average\": 4\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListAttributeAveragesByEntityRequest",
        "rpcResponseName": "ListAttributeAveragesByEntityResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Query Ratings",
      "methodName": "QueryRatings",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_QueryV2",
        "doc": "",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "QueryRatings",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_QueryRatingsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nReturn Ratings based on provided Query\n\n\n| Filterable fields      | Supported operators |\n| ----------- | ----------- |\n| id | `$eq`, `$ne`, `$in` |\n| group | `$eq`, `$ne`, `$in` |\n| entityId | `$eq`, `$ne`, `$in` |\n| attributeId | `$eq`, `$ne`, `$in` |\n| value | `$eq`, `$ne`, `$in`, `$lt`, `$lte`, `$gt`, `$gte` |\n| owner.contactId | `$eq`, `$ne`, `$in` |\n| owner.anonymousVisitorId | `$eq`, `$ne`, `$in` |\n| owner.memberId | `$eq`, `$ne`, `$in` |\n| relatedEntityIds | `$hasSome`, `$hasAll` |\n\n\n| Sortable fields      | Supported directions |\n| ----------- | ----------- |\n| id | `ASC`, `DESC` |\n| value | `ASC`, `DESC` |\n| createdDate | `ASC`, `DESC` |\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/ratings/v1/ratings/query",
        "links": [],
        "examples":         [
                    {
            "title": "",
            "body": ["curl -X POST https://www.wixapis.com/ratings/v1/ratings/query \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>' \\\n  -d '{\n   \"query\":{\n      \"filter\":{\n         \"group\":\"stores\",\n         \"value\": { \"$lt\": 3 }\n      },\n      \"sort\":[\n         {\n            \"fieldName\":\"value\",\n            \"order\":\"ASC\"\n         }\n      ],\n      \"cursorPaging\":{\n         \"limit\":1\n      }\n   }\n  }'"],
            "response": ["{\n  \"ratings\": [  {\n    \"id\": \"076716da-57ee-4821-a244-8c17c89df863\",\n    \"revision\": \"1\",\n    \"namespace\": \"reviews\",\n    \"group\": \"stores\",\n    \"entityId\": \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n    \"attributeId\": \"overall\",\n    \"value\": 1,\n    \"ratingOwner\": {\"memberId\": \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"},\n    \"createdDate\": \"2022-05-30T15:15:10.000Z\",\n    \"updatedDate\": \"2022-05-30T15:15:10.000Z\",\n    \"relatedEntityIds\": [\"5839c1cc-7b79-4b46-85bd-f3066db498e8\"]\n  }],\n  \"metadata\":   {\n    \"count\": 1,\n    \"cursors\": {\"next\": \"5iKtPmVjdbk9BVMBXgz15i6BXPpoT0QM/TBOTBY7AMw=\"}\n  }\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "",
            "body": ["curl -X POST https://www.wixapis.com/ratings/v1/ratings/query \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>' \\\n  -d '{\n   \"query\":{\n      \"cursorPaging\":{\n         \"limit\":1,\n         \"cursor\": \"5iKtPmVjdbk9BVMBXgz15i6BXPpoT0QM/TBOTBY7AMw=\"\n      }\n   }\n  }'"],
            "response": ["{\n  \"ratings\": [  {\n    \"id\": \"076716da-57ee-4821-a244-8c17c89df863\",\n    \"revision\": \"1\",\n    \"namespace\": \"reviews\",\n    \"group\": \"stores\",\n    \"entityId\": \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n    \"attributeId\": \"overall\",\n    \"value\": 1,\n    \"ratingOwner\": {\"memberId\": \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"},\n    \"createdDate\": \"2022-05-30T15:15:10.000Z\",\n    \"updatedDate\": \"2022-05-30T15:15:10.000Z\",\n    \"relatedEntityIds\": [\"5839c1cc-7b79-4b46-85bd-f3066db498e8\"]\n  }],\n  \"metadata\":   {\n    \"count\": 1,\n    \"cursors\": {\"next\": \"8mOWnKsikV5g48UJosknl49oWfbzkwiINd3mx8FaCX4=\"}\n  }\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryRatingsRequest",
        "rpcResponseName": "QueryRatingsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Update Rating",
      "methodName": "UpdateRating",
      "serviceName": "Ratings",
      "tag": "Ratings",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "id",
        "revision"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Rating Id to update\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " Latest rating revision\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "value",
          "type": "integer",
          "doc": " New numeric value of rating\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "relatedEntityIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " New related entity ids field\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Fields to update. Supported values - `value`, `relatedEntityIds`\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateRating",
          "statusCode": "200",
          "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_UpdateRatingResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "\nUpdate a Rating's `value` or `relatedEntityIds`.\nPass the latest `revision` for a successful update.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/ratings/v1/ratings/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH https://www.wixapis.com/ratings/v1/ratings/076716da-57ee-4821-a244-8c17c89df863 \\\n  -H 'Content-Type: application/json;charset=UTF-8' \\\n  -H 'Authorization: <ACCESS_TOKEN>' \\\n  -d '{\n    \"revision\": 1,\n    \"value\": 2,\n    \"fieldset\": [\"value\"]\n  }'"],
          "response": ["{\n  \"id\": \"076716da-57ee-4821-a244-8c17c89df863\",\n  \"revision\": \"2\",\n  \"namespace\": \"reviews\",\n  \"group\": \"stores\",\n  \"entityId\": \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n  \"attributeId\": \"quality\",\n  \"value\": 2,\n  \"ratingOwner\": {\"memberId\": \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"},\n  \"createdDate\": \"2022-05-30T15:15:10.000Z\",\n  \"updatedDate\": \"2022-05-30T15:25:10.000Z\",\n  \"relatedEntityIds\": [\"5839c1cc-7b79-4b46-85bd-f3066db498e8\"]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateRatingRequest",
        "rpcResponseName": "UpdateRatingResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events":   [
        {
      "type": "_com_wixpress_critique_ratings_RatingDeletedDomainEvent",
      "name": "Rating Deleted Webhook",
      "docs": {"summary": ""},
      "topic": "domain_events_wix.ratings.v1.rating",
      "tag": "Ratings",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.ratings.v1.rating_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_critique_ratings_RatingUpdatedDomainEvent",
      "name": "Rating Updated Webhook",
      "docs": {"summary": ""},
      "topic": "domain_events_wix.ratings.v1.rating",
      "tag": "Ratings",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.ratings.v1.rating_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_com_wixpress_critique_ratings_RatingCreatedDomainEvent",
      "name": "Rating Created Webhook",
      "docs": {"summary": ""},
      "topic": "domain_events_wix.ratings.v1.rating",
      "tag": "Ratings",
      "permissions": [],
      "customLabels": [{"id": "maturity-alpha"}],
      "eventType": "wix.ratings.v1.rating_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_critique_ratings_RatingDeletedDomainEvent",
      "displayName": "Rating Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"81af17ee-e022-11ec-9d64-0242ac120002\",\n  \"entityFqdn\" : \"wix.ratings.v1.rating\",\n  \"slug\" : \"delete\",\n  \"entityId\" : \"076716da-57ee-4821-a244-8c17c89df863\",\n  \"deletedEvent\" : { },\n  \"eventTime\" : \"2022-05-30T15:15:10.000Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.ratings.v1.rating`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_RatingEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Rating ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_RatingEntityDeletedEvent",
      "displayName": "Rating Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_RatingUpdatedDomainEvent",
      "displayName": "Rating Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"81af17ee-e022-11ec-9d64-0242ac120002\",\n  \"entityFqdn\" : \"wix.ratings.v1.rating\",\n  \"slug\" : \"updated\",\n  \"entityId\" : \"076716da-57ee-4821-a244-8c17c89df863\",\n  \"updatedEvent\" : {\n    \"currentEntity\" : {\n      \"id\" : \"076716da-57ee-4821-a244-8c17c89df863\",\n      \"revision\" : \"1\",\n      \"namespace\" : \"reviews\",\n      \"group\" : \"stores\",\n      \"entityId\" : \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n      \"attributeId\" : \"overall\",\n      \"value\" : 1,\n      \"ratingOwner\" : {\n        \"memberId\" : \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"\n      },\n      \"createdDate\" : \"2022-05-30T15:15:10.000Z\",\n      \"updatedDate\" : \"2022-05-30T15:15:10.000Z\",\n      \"relatedEntityIds\" : [ \"5839c1cc-7b79-4b46-85bd-f3066db498e8\" ]\n    }\n  },\n  \"eventTime\" : \"2022-05-30T15:15:10.000Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.ratings.v1.rating`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_RatingEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Rating ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_RatingEntityUpdatedEvent",
      "displayName": "Rating Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntity",
        "type": "All APIs.Ratings._com_wixpress_critique_ratings_Rating",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_RatingCreatedDomainEvent",
      "displayName": "Rating Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"id\" : \"81af17ee-e022-11ec-9d64-0242ac120002\",\n  \"entityFqdn\" : \"wix.ratings.v1.rating\",\n  \"slug\" : \"created\",\n  \"entityId\" : \"076716da-57ee-4821-a244-8c17c89df863\",\n  \"createdEvent\" : {\n    \"entity\" : {\n      \"id\" : \"076716da-57ee-4821-a244-8c17c89df863\",\n      \"revision\" : \"1\",\n      \"namespace\" : \"reviews\",\n      \"group\" : \"stores\",\n      \"entityId\" : \"985f3c2e-f94b-4b70-a75e-44931e468067\",\n      \"attributeId\" : \"overall\",\n      \"value\" : 1,\n      \"ratingOwner\" : {\n        \"memberId\" : \"2062863b-3772-40ff-8a8e-28f927fb9f8b\"\n      },\n      \"createdDate\" : \"2022-05-30T15:15:10.000Z\",\n      \"updatedDate\" : \"2022-05-30T15:15:10.000Z\",\n      \"relatedEntityIds\" : [ \"5839c1cc-7b79-4b46-85bd-f3066db498e8\" ]\n    }\n  },\n  \"eventTime\" : \"2022-05-30T15:15:10.000Z\",\n  \"triggeredByAnonymizeRequest\" : false\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.ratings.v1.rating`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_RatingEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Rating ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_RatingEntityCreatedEvent",
      "displayName": "Rating Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Ratings._com_wixpress_critique_ratings_Rating",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_IdentificationData",
      "displayName": "Identification Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "contactId",
          "type": "string",
          "doc": " ID of of a contact in the site's [CRM by Ascend](https://www.wix.com/ascend/crm) system.\n"
        },
                {
          "name": "id",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_IdentificationData_id",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_IdentificationData_id",
      "displayName": "id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "anonymousVisitorId",
          "type": "string",
          "doc": " ID of a site visitor that has not logged in to the site.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " ID of a site visitor that has logged in to the site.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_critique_ratings_Rating",
      "displayName": "Rating Object",
      "locations": [],
      "docs":       {
        "summary": "*\nEntity describing Rating\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Rating ID\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision\n",
          "readOnly": true
        },
                {
          "name": "namespace",
          "type": "string",
          "doc": " Used to identify what app manages ratings\n",
          "readOnly": true
        },
                {
          "name": "group",
          "type": "string",
          "doc": " Can be used to identify type of entity which is being rated\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Indication of what entity owns given current Rating\n"
        },
                {
          "name": "attributeId",
          "type": "string",
          "doc": " Characteristics of an item that can be rated separately by the site visitors or members\n"
        },
                {
          "name": "value",
          "type": "integer",
          "doc": " Numeric value of rating\n"
        },
                {
          "name": "owner",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_IdentificationData",
          "doc": " Rating's owner\n"
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Represents the time this Rating was created\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Represents the time this Rating was last updated\n",
          "readOnly": true
        },
                {
          "name": "relatedEntityIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Optional field to indicated to what entities this rating relates to\n Gives ability to query ratings which relates to entity\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_AttributeSummary",
      "displayName": "Attribute Summary Object",
      "locations": [],
      "docs":       {
        "summary": "*\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "attributeId",
          "type": "string",
          "doc": " Rating definition attribute identifier\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total amount of given attributes\n"
        },
                {
          "name": "average",
          "type": "number",
          "doc": " Average of attribute values\n"
        },
                {
          "name": "valueBreakdown",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_ValueBreakdown"]
          },
          "doc": " Attribute breakdown\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_ValueBreakdown",
      "displayName": "Value Breakdown Object",
      "locations": [],
      "docs":       {
        "summary": "*\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "value",
          "type": "integer",
          "doc": " Ratings value\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total amount of ratings with given value\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dipatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Ratings._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dipatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Ratings._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Ratings._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Ratings._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Ratings._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Ratings._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the `next` or `prev` cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:  \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_CreateRatingRequest",
      "displayName": "Create Rating Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "group",
          "type": "string",
          "doc": " Can be used to identify type of entity which is being rated\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Indication of what entity owns given current Rating\n"
        },
                {
          "name": "attributeId",
          "type": "string",
          "doc": " Attribute id which is defined by definition\n"
        },
                {
          "name": "value",
          "type": "integer",
          "doc": " Numeric value of rating\n"
        },
                {
          "name": "ratingOwner",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_IdentificationData",
          "doc": " Set rating's owner explicitly. Ignored when visitor/member calls API.\n"
        },
                {
          "name": "relatedEntityIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Optional field to indicated to what entities this rating relates to\n Gives ability to query ratings which relates to entity\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_CreateRatingResponse",
      "displayName": "Create Rating Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rating",
        "type": "All APIs.Ratings._com_wixpress_critique_ratings_Rating",
        "doc": " The created rating.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_GetRatingRequest",
      "displayName": "Get Rating Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " ID of the rating to retrieve.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_GetRatingResponse",
      "displayName": "Get Rating Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rating",
        "type": "All APIs.Ratings._com_wixpress_critique_ratings_Rating",
        "doc": " The retrieved rating.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_UpdateRatingRequest",
      "displayName": "Update Rating Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Rating Id to update\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Latest rating revision\n"
        },
                {
          "name": "value",
          "type": "integer",
          "doc": " New numeric value of rating\n"
        },
                {
          "name": "relatedEntityIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " New related entity ids field\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Fields to update. Supported values - `value`, `relatedEntityIds`\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_UpdateRatingResponse",
      "displayName": "Update Rating Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "rating",
        "type": "All APIs.Ratings._com_wixpress_critique_ratings_Rating",
        "doc": " The updated rating.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_DeleteRatingRequest",
      "displayName": "Delete Rating Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the rating to delete.\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision number of the rating.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_DeleteRatingResponse",
      "displayName": "Delete Rating Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_GetGroupSummaryRequest",
      "displayName": "Get Group Summary Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "group",
          "type": "string",
          "doc": " Ratings group whose summary is to be returned.\n"
        },
                {
          "name": "attributeIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " list of attributes to get summary of.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_GetGroupSummaryResponse",
      "displayName": "Get Group Summary Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "group",
          "type": "string",
          "doc": " Summary group.\n"
        },
                {
          "name": "attributeSummaries",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_AttributeSummary"]
          },
          "doc": " Group attributes summary.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_GetEntitySummaryRequest",
      "displayName": "Get Entity Summary Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "group",
          "type": "string",
          "doc": " Ratings group whose summary is to be returned.\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Entity ID.\n"
        },
                {
          "name": "attributeIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of attributes to get summary of.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_GetEntitySummaryResponse",
      "displayName": "Get Entity Summary Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "group",
          "type": "string",
          "doc": " Summary group.\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Summary entity ID.\n"
        },
                {
          "name": "attributeSummaries",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_AttributeSummary"]
          },
          "doc": " Entity attributes summary.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_ListAttributeAveragesByEntityRequest",
      "displayName": "List Attribute Averages By Entity Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "group",
          "type": "string",
          "doc": " Entities group\n"
        },
                {
          "name": "entityIds",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Entities ids\n"
        },
                {
          "name": "attributeId",
          "type": "string",
          "doc": " Attribute id for which average will be computed.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_ListAttributeAveragesByEntityResponse",
      "displayName": "List Attribute Averages By Entity Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "group",
          "type": "string",
          "doc": " Entities group\n"
        },
                {
          "name": "entityAverages",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_EntityAverage"]
          },
          "doc": " Entity averages\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_EntityAverage",
      "displayName": "Entity Average Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "entityId",
          "type": "string",
          "doc": " Entity id\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total amount of ratings\n"
        },
                {
          "name": "average",
          "type": "number",
          "doc": " Average entity rating\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_QueryRatingsRequest",
      "displayName": "Query Ratings Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_QueryV2",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_QueryRatingsResponse",
      "displayName": "Query Ratings Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ratings",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Ratings._com_wixpress_critique_ratings_Rating"]
          },
          "doc": ""
        },
                {
          "name": "metadata",
          "type": "All APIs.Ratings._com_wixpress_critique_ratings_upstream_wix_common_PagingMetadataV2",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_critique_ratings_upstream_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.critique.ratings"}
}